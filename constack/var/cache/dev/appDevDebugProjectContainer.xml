<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/cocorico/app</parameter>
    <parameter key="kernel.project_dir">/cocorico</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/cocorico/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/cocorico/var/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="JMSI18nRoutingBundle">JMS\I18nRoutingBundle\JMSI18nRoutingBundle</parameter>
      <parameter key="JMSTranslationBundle">JMS\TranslationBundle\JMSTranslationBundle</parameter>
      <parameter key="JMSAopBundle">JMS\AopBundle\JMSAopBundle</parameter>
      <parameter key="JMSDiExtraBundle">JMS\DiExtraBundle\JMSDiExtraBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
      <parameter key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</parameter>
      <parameter key="DoctrineMongoDBBundle">Doctrine\Bundle\MongoDBBundle\DoctrineMongoDBBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</parameter>
      <parameter key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</parameter>
      <parameter key="SonataUserBundle">Sonata\UserBundle\SonataUserBundle</parameter>
      <parameter key="A2lixTranslationFormBundle">A2lix\TranslationFormBundle\A2lixTranslationFormBundle</parameter>
      <parameter key="OneupUploaderBundle">Oneup\UploaderBundle\OneupUploaderBundle</parameter>
      <parameter key="LiipImagineBundle">Liip\ImagineBundle\LiipImagineBundle</parameter>
      <parameter key="LexikCurrencyBundle">Lexik\Bundle\CurrencyBundle\LexikCurrencyBundle</parameter>
      <parameter key="BazingaGeocoderBundle">Bazinga\GeocoderBundle\BazingaGeocoderBundle</parameter>
      <parameter key="FOSMessageBundle">FOS\MessageBundle\FOSMessageBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="WhiteOctoberBreadcrumbsBundle">WhiteOctober\BreadcrumbsBundle\WhiteOctoberBreadcrumbsBundle</parameter>
      <parameter key="HWIOAuthBundle">HWI\Bundle\OAuthBundle\HWIOAuthBundle</parameter>
      <parameter key="IvoryCKEditorBundle">Ivory\CKEditorBundle\IvoryCKEditorBundle</parameter>
      <parameter key="FMElfinderBundle">FM\ElfinderBundle\FMElfinderBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="SimpleThingsEntityAuditBundle">SimpleThings\EntityAudit\SimpleThingsEntityAuditBundle</parameter>
      <parameter key="CocoricoCoreBundle">Cocorico\CoreBundle\CocoricoCoreBundle</parameter>
      <parameter key="CocoricoGeoBundle">Cocorico\GeoBundle\CocoricoGeoBundle</parameter>
      <parameter key="CocoricoUserBundle">Cocorico\UserBundle\CocoricoUserBundle</parameter>
      <parameter key="CocoricoPageBundle">Cocorico\PageBundle\CocoricoPageBundle</parameter>
      <parameter key="CocoricoCMSBundle">Cocorico\CMSBundle\CocoricoCMSBundle</parameter>
      <parameter key="CocoricoBreadcrumbBundle">Cocorico\BreadcrumbBundle\CocoricoBreadcrumbBundle</parameter>
      <parameter key="CocoricoSonataAdminBundle">Cocorico\SonataAdminBundle\CocoricoSonataAdminBundle</parameter>
      <parameter key="CocoricoSonataUserBundle">Cocorico\SonataUserBundle\CocoricoSonataUserBundle</parameter>
      <parameter key="CocoricoMessageBundle">Cocorico\MessageBundle\CocoricoMessageBundle</parameter>
      <parameter key="CocoricoContactBundle">Cocorico\ContactBundle\CocoricoContactBundle</parameter>
      <parameter key="CocoricoReviewBundle">Cocorico\ReviewBundle\CocoricoReviewBundle</parameter>
      <parameter key="CocoricoConfigBundle">Cocorico\ConfigBundle\CocoricoConfigBundle</parameter>
      <parameter key="CocoricoTimeBundle">Cocorico\TimeBundle\CocoricoTimeBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</parameter>
      <parameter key="DeployBundle">Hpatoio\DeployBundle\DeployBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/symfony/swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="AsseticBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/symfony/assetic-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\AsseticBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/sensio/framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="JMSI18nRoutingBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/jms/i18n-routing-bundle/JMS/I18nRoutingBundle</parameter>
        <parameter key="namespace">JMS\I18nRoutingBundle</parameter>
      </parameter>
      <parameter key="JMSTranslationBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/jms/translation-bundle/JMS/TranslationBundle</parameter>
        <parameter key="namespace">JMS\TranslationBundle</parameter>
      </parameter>
      <parameter key="JMSAopBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/jms/aop-bundle</parameter>
        <parameter key="namespace">JMS\AopBundle</parameter>
      </parameter>
      <parameter key="JMSDiExtraBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/jms/di-extra-bundle</parameter>
        <parameter key="namespace">JMS\DiExtraBundle</parameter>
      </parameter>
      <parameter key="FOSUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/friendsofsymfony/user-bundle</parameter>
        <parameter key="namespace">FOS\UserBundle</parameter>
      </parameter>
      <parameter key="StofDoctrineExtensionsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/stof/doctrine-extensions-bundle</parameter>
        <parameter key="namespace">Stof\DoctrineExtensionsBundle</parameter>
      </parameter>
      <parameter key="DoctrineMongoDBBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/doctrine/mongodb-odm-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MongoDBBundle</parameter>
      </parameter>
      <parameter key="SonataAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/sonata-project/admin-bundle/src</parameter>
        <parameter key="namespace">Sonata\AdminBundle</parameter>
      </parameter>
      <parameter key="SonataCoreBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/sonata-project/core-bundle/src</parameter>
        <parameter key="namespace">Sonata\CoreBundle</parameter>
      </parameter>
      <parameter key="SonataBlockBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/sonata-project/block-bundle/src</parameter>
        <parameter key="namespace">Sonata\BlockBundle</parameter>
      </parameter>
      <parameter key="SonataEasyExtendsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/sonata-project/easy-extends-bundle/src</parameter>
        <parameter key="namespace">Sonata\EasyExtendsBundle</parameter>
      </parameter>
      <parameter key="SonataDoctrineORMAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/sonata-project/doctrine-orm-admin-bundle/src</parameter>
        <parameter key="namespace">Sonata\DoctrineORMAdminBundle</parameter>
      </parameter>
      <parameter key="SonataUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/sonata-project/user-bundle/src</parameter>
        <parameter key="namespace">Sonata\UserBundle</parameter>
      </parameter>
      <parameter key="A2lixTranslationFormBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/a2lix/translation-form-bundle/A2lix/TranslationFormBundle</parameter>
        <parameter key="namespace">A2lix\TranslationFormBundle</parameter>
      </parameter>
      <parameter key="OneupUploaderBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/oneup/uploader-bundle/Oneup/UploaderBundle</parameter>
        <parameter key="namespace">Oneup\UploaderBundle</parameter>
      </parameter>
      <parameter key="LiipImagineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/liip/imagine-bundle</parameter>
        <parameter key="namespace">Liip\ImagineBundle</parameter>
      </parameter>
      <parameter key="LexikCurrencyBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/lexik/currency-bundle</parameter>
        <parameter key="namespace">Lexik\Bundle\CurrencyBundle</parameter>
      </parameter>
      <parameter key="BazingaGeocoderBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/willdurand/geocoder-bundle</parameter>
        <parameter key="namespace">Bazinga\GeocoderBundle</parameter>
      </parameter>
      <parameter key="FOSMessageBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle</parameter>
        <parameter key="namespace">FOS\MessageBundle</parameter>
      </parameter>
      <parameter key="KnpMenuBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/knplabs/knp-menu-bundle/src</parameter>
        <parameter key="namespace">Knp\Bundle\MenuBundle</parameter>
      </parameter>
      <parameter key="WhiteOctoberBreadcrumbsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/whiteoctober/breadcrumbs-bundle/WhiteOctober/BreadcrumbsBundle</parameter>
        <parameter key="namespace">WhiteOctober\BreadcrumbsBundle</parameter>
      </parameter>
      <parameter key="HWIOAuthBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/hwi/oauth-bundle</parameter>
        <parameter key="namespace">HWI\Bundle\OAuthBundle</parameter>
      </parameter>
      <parameter key="IvoryCKEditorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/egeloen/ckeditor-bundle</parameter>
        <parameter key="namespace">Ivory\CKEditorBundle</parameter>
      </parameter>
      <parameter key="FMElfinderBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/helios-ag/fm-elfinder-bundle</parameter>
        <parameter key="namespace">FM\ElfinderBundle</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/doctrine/doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="SimpleThingsEntityAuditBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit</parameter>
        <parameter key="namespace">SimpleThings\EntityAudit</parameter>
      </parameter>
      <parameter key="CocoricoCoreBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/src/Cocorico/CoreBundle</parameter>
        <parameter key="namespace">Cocorico\CoreBundle</parameter>
      </parameter>
      <parameter key="CocoricoGeoBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/src/Cocorico/GeoBundle</parameter>
        <parameter key="namespace">Cocorico\GeoBundle</parameter>
      </parameter>
      <parameter key="CocoricoUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/src/Cocorico/UserBundle</parameter>
        <parameter key="namespace">Cocorico\UserBundle</parameter>
      </parameter>
      <parameter key="CocoricoPageBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/src/Cocorico/PageBundle</parameter>
        <parameter key="namespace">Cocorico\PageBundle</parameter>
      </parameter>
      <parameter key="CocoricoCMSBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/src/Cocorico/CMSBundle</parameter>
        <parameter key="namespace">Cocorico\CMSBundle</parameter>
      </parameter>
      <parameter key="CocoricoBreadcrumbBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/src/Cocorico/BreadcrumbBundle</parameter>
        <parameter key="namespace">Cocorico\BreadcrumbBundle</parameter>
      </parameter>
      <parameter key="CocoricoSonataAdminBundle" type="collection">
        <parameter key="parent">SonataAdminBundle</parameter>
        <parameter key="path">/cocorico/src/Cocorico/SonataAdminBundle</parameter>
        <parameter key="namespace">Cocorico\SonataAdminBundle</parameter>
      </parameter>
      <parameter key="CocoricoSonataUserBundle" type="collection">
        <parameter key="parent">SonataUserBundle</parameter>
        <parameter key="path">/cocorico/src/Cocorico/SonataUserBundle</parameter>
        <parameter key="namespace">Cocorico\SonataUserBundle</parameter>
      </parameter>
      <parameter key="CocoricoMessageBundle" type="collection">
        <parameter key="parent">FOSMessageBundle</parameter>
        <parameter key="path">/cocorico/src/Cocorico/MessageBundle</parameter>
        <parameter key="namespace">Cocorico\MessageBundle</parameter>
      </parameter>
      <parameter key="CocoricoContactBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/src/Cocorico/ContactBundle</parameter>
        <parameter key="namespace">Cocorico\ContactBundle</parameter>
      </parameter>
      <parameter key="CocoricoReviewBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/src/Cocorico/ReviewBundle</parameter>
        <parameter key="namespace">Cocorico\ReviewBundle</parameter>
      </parameter>
      <parameter key="CocoricoConfigBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/src/Cocorico/ConfigBundle</parameter>
        <parameter key="namespace">Cocorico\ConfigBundle</parameter>
      </parameter>
      <parameter key="CocoricoTimeBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/src/Cocorico/TimeBundle</parameter>
        <parameter key="namespace">Cocorico\TimeBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="SensioDistributionBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/sensio/distribution-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\DistributionBundle</parameter>
      </parameter>
      <parameter key="DeployBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/hpatoio/deploy-bundle/Hpatoio/DeployBundle</parameter>
        <parameter key="namespace">Hpatoio\DeployBundle</parameter>
      </parameter>
      <parameter key="SensioGeneratorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/cocorico/vendor/sensio/generator-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\GeneratorBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="container.autowiring.strict_mode">true</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="cocorico.site_name">Costocking.com</parameter>
    <parameter key="cocorico.phone">+33(0) 7 77 98 93 52</parameter>
    <parameter key="cocorico.address">null</parameter>
    <parameter key="cocorico.short_description">Costocking est la marketplace de services logistique</parameter>
    <parameter key="cocorico.contact_mail">contact@costocking.com</parameter>
    <parameter key="cocorico.contact_mail_obfuscated">&amp;#099;&amp;#111;&amp;#110;&amp;#116;&amp;#097;&amp;#099;&amp;#116;&amp;#064;&amp;#099;&amp;#111;&amp;#099;&amp;#111;&amp;#114;&amp;#105;&amp;#099;&amp;#111;&amp;#046;&amp;#105;&amp;#111;</parameter>
    <parameter key="cocorico.from_email">no-reply@cocorico.io</parameter>
    <parameter key="cocorico.webmaster_email">webmaster@cocorico.io</parameter>
    <parameter key="cocorico.vat_number">FR 12 123 456 789</parameter>
    <parameter key="cocorico.home_rss_feed"></parameter>
    <parameter key="locale">fr</parameter>
    <parameter key="cocorico.locale">fr</parameter>
    <parameter key="cocorico.locales" type="collection">
      <parameter>en</parameter>
      <parameter>fr</parameter>
    </parameter>
    <parameter key="cocorico.locales_string">en|fr</parameter>
    <parameter key="cocorico.currency">EUR</parameter>
    <parameter key="cocorico.currencies_for_lexik" type="collection">
      <parameter>EUR</parameter>
      <parameter>USD</parameter>
      <parameter>GBP</parameter>
      <parameter>CHF</parameter>
      <parameter>CAD</parameter>
      <parameter>JPY</parameter>
      <parameter>RUB</parameter>
      <parameter>AUD</parameter>
    </parameter>
    <parameter key="cocorico.currencies" type="collection">
      <parameter key="EUR">€</parameter>
      <parameter key="USD">$</parameter>
      <parameter key="GBP">£</parameter>
      <parameter key="CHF">CHF</parameter>
      <parameter key="CAD">$ CAD</parameter>
      <parameter key="JPY">¥</parameter>
      <parameter key="RUB">руб</parameter>
      <parameter key="AUD">$ AUD</parameter>
    </parameter>
    <parameter key="cocorico.currencies_string">EUR|USD|GBP|CHF|CAD|JPY|RUB|RUB|AUD</parameter>
    <parameter key="cocorico.currencies_json">/cocorico/app/../web/json/currencies.json</parameter>
    <parameter key="cocorico.include_vat">false</parameter>
    <parameter key="cocorico.display_vat">true</parameter>
    <parameter key="cocorico.vat">0.2</parameter>
    <parameter key="cocorico.registration_confirmation">false</parameter>
    <parameter key="cocorico.fee_as_asker">0.1</parameter>
    <parameter key="cocorico.fee_as_offerer">0.05</parameter>
    <parameter key="cocorico.time_unit">1440</parameter>
    <parameter key="cocorico.time_zone">Europe/Paris</parameter>
    <parameter key="cocorico.days_max">360</parameter>
    <parameter key="cocorico.days_max_edition">360</parameter>
    <parameter key="cocorico.days_display_mode">range</parameter>
    <parameter key="cocorico.time_hours_available" type="collection">
      <parameter>0</parameter>
      <parameter>1</parameter>
      <parameter>2</parameter>
      <parameter>3</parameter>
      <parameter>4</parameter>
      <parameter>5</parameter>
      <parameter>6</parameter>
      <parameter>7</parameter>
      <parameter>8</parameter>
      <parameter>9</parameter>
      <parameter>10</parameter>
      <parameter>11</parameter>
      <parameter>12</parameter>
      <parameter>13</parameter>
      <parameter>14</parameter>
      <parameter>15</parameter>
      <parameter>16</parameter>
      <parameter>17</parameter>
      <parameter>18</parameter>
      <parameter>19</parameter>
      <parameter>20</parameter>
      <parameter>21</parameter>
      <parameter>22</parameter>
      <parameter>23</parameter>
    </parameter>
    <parameter key="cocorico.time_unit_flexibility">0</parameter>
    <parameter key="cocorico.time_unit_allday">true</parameter>
    <parameter key="cocorico.times_max">8</parameter>
    <parameter key="cocorico.times_display_mode">duration</parameter>
    <parameter key="cocorico.dashboard_max_per_page">10</parameter>
    <parameter key="cocorico.message_max_per_page">10</parameter>
    <parameter key="cocorico.review_max_per_page">10</parameter>
    <parameter key="cocorico.listing_new_is_published">1</parameter>
    <parameter key="cocorico.listing_countries" type="collection"/>
    <parameter key="cocorico.listing_favorite_countries" type="collection">
      <parameter>FR</parameter>
    </parameter>
    <parameter key="cocorico.listing_category_min">1</parameter>
    <parameter key="cocorico.listing_price_precision">2</parameter>
    <parameter key="cocorico.listing_price_min">100</parameter>
    <parameter key="cocorico.listing_price_max">11000</parameter>
    <parameter key="cocorico.listing_map_display_marker">false</parameter>
    <parameter key="cocorico.listing_discount_min">1</parameter>
    <parameter key="cocorico.listing_discount_max">90</parameter>
    <parameter key="cocorico.listing_search_max_per_page">10</parameter>
    <parameter key="cocorico.listing_search_min_result">0</parameter>
    <parameter key="cocorico.listing.duplication">true</parameter>
    <parameter key="cocorico.listing_availability_status">1</parameter>
    <parameter key="cocorico.booking_price_min">500</parameter>
    <parameter key="cocorico.booking.allow_single_day">true</parameter>
    <parameter key="cocorico.booking.end_day_included">true</parameter>
    <parameter key="cocorico.booking.min_start_delay">0</parameter>
    <parameter key="cocorico.booking.min_start_time_delay">720</parameter>
    <parameter key="cocorico.booking.expiration_delay">2880</parameter>
    <parameter key="cocorico.booking.acceptation_delay">240</parameter>
    <parameter key="cocorico.booking.alert_expiration_delay">120</parameter>
    <parameter key="cocorico.booking.alert_imminent_delay">1440</parameter>
    <parameter key="cocorico.booking.validated_moment">start</parameter>
    <parameter key="cocorico.booking.validated_delay">0</parameter>
    <parameter key="cocorico.bankwire_checking_simulation">false</parameter>
    <parameter key="cocorico.booking.cancelation_policy" type="collection">
      <parameter key="flexible" type="collection">
        <parameter key="time_before_start">86400</parameter>
        <parameter key="refund_min">0.5</parameter>
        <parameter key="refund_max">1</parameter>
      </parameter>
      <parameter key="strict" type="collection">
        <parameter key="time_before_start">86400</parameter>
        <parameter key="refund_min">0</parameter>
        <parameter key="refund_max">0.5</parameter>
      </parameter>
    </parameter>
    <parameter key="cocorico_listing_option.listing_option.entity_class">none</parameter>
    <parameter key="cocorico_listing_option.booking_option.entity_class">none</parameter>
    <parameter key="cocorico_listing_alert.entity_class">none</parameter>
    <parameter key="cocorico_listing_category_field.entity_class">none</parameter>
    <parameter key="cocorico_listing_category_field_value.entity_class">none</parameter>
    <parameter key="cocorico_listing_category_listing_category_field.entity_class">none</parameter>
    <parameter key="cocorico_listing_deposit.booking_deposit_refund.entity_class">none</parameter>
    <parameter key="cocorico_mangopay_card_saving.user_card.entity_class">none</parameter>
    <parameter key="cocorico_config.parameters_allowed" type="collection">
      <parameter key="cocorico.fee_as_asker" type="collection">
        <parameter key="type">percent</parameter>
      </parameter>
      <parameter key="cocorico.fee_as_offerer" type="collection">
        <parameter key="type">percent</parameter>
      </parameter>
      <parameter key="cocorico.check_translation" type="collection">
        <parameter key="type">text</parameter>
      </parameter>
    </parameter>
    <parameter key="cocorico.user_address_delivery">true</parameter>
    <parameter key="cocorico.user_img_min">1</parameter>
    <parameter key="cocorico.user_img_max">6</parameter>
    <parameter key="cocorico.user_img_max_upload_size">12</parameter>
    <parameter key="cocorico.user_img_xsmall_w">60</parameter>
    <parameter key="cocorico.user_img_xsmall_h">45</parameter>
    <parameter key="cocorico.user_img_small_w">150</parameter>
    <parameter key="cocorico.user_img_small_h">112</parameter>
    <parameter key="cocorico.user_img_medium_w">200</parameter>
    <parameter key="cocorico.user_img_medium_h">150</parameter>
    <parameter key="cocorico.user_img_contact_w">213</parameter>
    <parameter key="cocorico.user_img_contact_h">160</parameter>
    <parameter key="cocorico.user_img_profile_w">308</parameter>
    <parameter key="cocorico.user_img_profile_h">231</parameter>
    <parameter key="cocorico.listing_img_min">1</parameter>
    <parameter key="cocorico.listing_img_max">24</parameter>
    <parameter key="cocorico.listing_img_max_upload_size">12</parameter>
    <parameter key="cocorico.listing_img_xsmall_w">90</parameter>
    <parameter key="cocorico.listing_img_xsmall_h">67</parameter>
    <parameter key="cocorico.listing_img_small_w">100</parameter>
    <parameter key="cocorico.listing_img_small_h">75</parameter>
    <parameter key="cocorico.listing_img_xxmedium_w">150</parameter>
    <parameter key="cocorico.listing_img_xxmedium_h">112</parameter>
    <parameter key="cocorico.listing_img_xmedium_w">200</parameter>
    <parameter key="cocorico.listing_img_xmedium_h">150</parameter>
    <parameter key="cocorico.listing_img_medium_w">275</parameter>
    <parameter key="cocorico.listing_img_medium_h">206</parameter>
    <parameter key="cocorico.listing_img_large_w">384</parameter>
    <parameter key="cocorico.listing_img_large_h">288</parameter>
    <parameter key="cocorico.listing_img_xlarge_w">527</parameter>
    <parameter key="cocorico.listing_img_xlarge_h">395</parameter>
    <parameter key="cocorico.listing_img_xxlarge_w">680</parameter>
    <parameter key="cocorico.listing_img_xxlarge_h">510</parameter>
    <parameter key="cocorico.upload_image_w">120</parameter>
    <parameter key="cocorico.upload_image_h">90</parameter>
    <parameter key="cocorico.listing_new_map_w">100</parameter>
    <parameter key="cocorico.listing_new_map_h">300</parameter>
    <parameter key="cocorico.listing_edit_map_w">100</parameter>
    <parameter key="cocorico.listing_edit_map_h">418</parameter>
    <parameter key="cocorico.listing_show_map_w">100</parameter>
    <parameter key="cocorico.listing_show_map_h">480</parameter>
    <parameter key="cocorico.listing_search_map_w">100%</parameter>
    <parameter key="cocorico.listing_search_map_h">1000</parameter>
    <parameter key="cocorico.assets_base_urls">http://192.168.100.171</parameter>
    <parameter key="router.request_context.host">192.168.100.171</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="cocorico.admin">admin</parameter>
    <parameter key="cocorico.admin_translation">false</parameter>
    <parameter key="cocorico.check_translation">false</parameter>
    <parameter key="cocorico.translator.secret.key">null</parameter>
    <parameter key="cocorico.translator.translate.url">http://api.microsofttranslator.com/v2/Http.svc/TranslateArray</parameter>
    <parameter key="cocorico.translator.token.url">https://api.cognitive.microsoft.com/sts/v1.0/issueToken</parameter>
    <parameter key="cocorico.facebook.app_id">352775691816092</parameter>
    <parameter key="cocorico.facebook.secret">b9bbb15df57211e79d8f45782e7c1775</parameter>
    <parameter key="cocorico.image_driver">imagick</parameter>
    <parameter key="cocorico.google_analytics">UA</parameter>
    <parameter key="cocorico.google_tag_manager">false</parameter>
    <parameter key="cocorico_geo.google_place_api_key">AIzaSyAvng_eh8UKyAf4c_47EKdcWTj4jhvT-6U</parameter>
    <parameter key="cocorico_geo.google_place_server_api_key">AIzaSyASijJ05pLq3ha4mKrriQsJcTQUHQgFMd0</parameter>
    <parameter key="cocorico_geo.ipinfodb_api_key">null</parameter>
    <parameter key="cocorico.deploy.host">185.62.185.32</parameter>
    <parameter key="cocorico.deploy.dir">/var/www/demo.costocking.com</parameter>
    <parameter key="cocorico.deploy.user">debian</parameter>
    <parameter key="cocorico_mangopay.client_id">null</parameter>
    <parameter key="cocorico_mangopay.client_password">null</parameter>
    <parameter key="cocorico_mangopay.base_url">https://api.sandbox.mangopay.com</parameter>
    <parameter key="cocorico_mangopay.debug">false</parameter>
    <parameter key="cocorico_mangopay.temporary_folder">/cocorico/app/../tmp/mangopay/</parameter>
    <parameter key="cocorico_sms.enabled">false</parameter>
    <parameter key="cocorico_sms.phone_check">false</parameter>
    <parameter key="cocorico_sms.thread_notification">false</parameter>
    <parameter key="cocorico_sms.ovh_endpoint_name">ovh-eu</parameter>
    <parameter key="cocorico_sms.ovh_application_key">null</parameter>
    <parameter key="cocorico_sms.ovh_application_secret">null</parameter>
    <parameter key="cocorico_sms.ovh_consumer_key">null</parameter>
    <parameter key="cocorico_sms.ovh_service_name">null</parameter>
    <parameter key="cocorico_sms.ovh_debug">false</parameter>
    <parameter key="cocorico_listing_deposit.booking.deposit_refund_delay">null</parameter>
    <parameter key="cocorico_listing_deposit.listing.min_deposit_amount">null</parameter>
    <parameter key="cocorico_elasticsearch.keyword_delimiter"> </parameter>
    <parameter key="cocorico_elasticsearch.listing_title_boost">5</parameter>
    <parameter key="cocorico_elasticsearch.listing_description_boost">5</parameter>
    <parameter key="cocorico_elasticsearch.listing_category_names_boost">5</parameter>
    <parameter key="cocorico_elasticsearch.listing_user_description_boost">5</parameter>
    <parameter key="database_host">172.19.0.2</parameter>
    <parameter key="database_port">3306</parameter>
    <parameter key="database_name">costocking_dev</parameter>
    <parameter key="database_user">cocorico</parameter>
    <parameter key="database_password">cocorico</parameter>
    <parameter key="mongodb_server">mongodb://172.19.0.2:27017</parameter>
    <parameter key="mongodb_database_name">costocking_dev</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">127.0.0.1</parameter>
    <parameter key="mailer_user">null</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="mailer_port">null</parameter>
    <parameter key="secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="use_assetic_controller">false</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Cocorico\CoreBundle\Listener\ResolveTargetEntityListener</parameter>
    <parameter key="cocorico.listing_activated_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:listing_activated_offerer.txt.twig</parameter>
    <parameter key="cocorico.booking_request_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:booking_request_offerer.txt.twig</parameter>
    <parameter key="cocorico.booking_request_asker.email.template">CocoricoCoreBundle:Mails/Asker:booking_request_asker.txt.twig</parameter>
    <parameter key="cocorico.booking_accepted_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:booking_accepted_offerer.txt.twig</parameter>
    <parameter key="cocorico.booking_accepted_asker.email.template">CocoricoCoreBundle:Mails/Asker:booking_accepted_asker.txt.twig</parameter>
    <parameter key="cocorico.booking_refused_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:booking_refused_offerer.txt.twig</parameter>
    <parameter key="cocorico.booking_refused_asker.email.template">CocoricoCoreBundle:Mails/Asker:booking_refused_asker.txt.twig</parameter>
    <parameter key="cocorico.booking_request_expired_asker.email.template">CocoricoCoreBundle:Mails/Asker:booking_request_expired_asker.txt.twig</parameter>
    <parameter key="cocorico.booking_request_expired_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:booking_request_expired_offerer.txt.twig</parameter>
    <parameter key="cocorico.booking_canceled_by_asker_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:booking_canceled_by_asker_offerer.txt.twig</parameter>
    <parameter key="cocorico.booking_canceled_by_asker_asker.email.template">CocoricoCoreBundle:Mails/Asker:booking_canceled_by_asker_asker.txt.twig</parameter>
    <parameter key="cocorico.booking_imminent_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:booking_imminent_offerer.txt.twig</parameter>
    <parameter key="cocorico.booking_imminent_asker.email.template">CocoricoCoreBundle:Mails/Asker:booking_imminent_asker.txt.twig</parameter>
    <parameter key="cocorico.booking_request_expiration_alert_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:booking_request_expiration_alert_offerer.txt.twig</parameter>
    <parameter key="cocorico.reminder_to_rate_asker_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:reminder_to_rate_asker_offerer.txt.twig</parameter>
    <parameter key="cocorico.booking_bank_wire_transfer_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:booking_bank_wire_transfer_offerer.txt.twig</parameter>
    <parameter key="cocorico.update_your_calendar_offerer.email.template">CocoricoCoreBundle:Mails/Offerer:update_your_calendar_offerer.txt.twig</parameter>
    <parameter key="cocorico.payment_error_asker.email.template">CocoricoCoreBundle:Mails/Asker:payment_error_asker.txt.twig</parameter>
    <parameter key="cocorico.reminder_to_rate_offerer_asker.email.template">CocoricoCoreBundle:Mails/Asker:reminder_to_rate_offerer_asker.txt.twig</parameter>
    <parameter key="cocorico.admin_message.email.template">CocoricoCoreBundle:Mails:admin_message.txt.twig</parameter>
    <parameter key="knp.doctrine_behaviors.reflection.class_analyzer.class">Knp\DoctrineBehaviors\Reflection\ClassAnalyzer</parameter>
    <parameter key="knp.doctrine_behaviors.reflection.is_recursive">true</parameter>
    <parameter key="knp.doctrine_behaviors.translatable_subscriber.class">Knp\DoctrineBehaviors\ORM\Translatable\TranslatableSubscriber</parameter>
    <parameter key="knp.doctrine_behaviors.translatable_subscriber.current_locale_callable.class">Knp\DoctrineBehaviors\ORM\Translatable\CurrentLocaleCallable</parameter>
    <parameter key="knp.doctrine_behaviors.translatable_subscriber.default_locale_callable.class">Knp\DoctrineBehaviors\ORM\Translatable\DefaultLocaleCallable</parameter>
    <parameter key="knp.doctrine_behaviors.translatable_subscriber.translatable_trait">Knp\DoctrineBehaviors\Model\Translatable\Translatable</parameter>
    <parameter key="knp.doctrine_behaviors.translatable_subscriber.translation_trait">Knp\DoctrineBehaviors\Model\Translatable\Translation</parameter>
    <parameter key="knp.doctrine_behaviors.translatable_subscriber.translatable_fetch_method">EAGER</parameter>
    <parameter key="knp.doctrine_behaviors.translatable_subscriber.translation_fetch_method">EAGER</parameter>
    <parameter key="knp.doctrine_behaviors.softdeletable_subscriber.class">Knp\DoctrineBehaviors\ORM\SoftDeletable\SoftDeletableSubscriber</parameter>
    <parameter key="knp.doctrine_behaviors.softdeletable_subscriber.softdeletable_trait">Knp\DoctrineBehaviors\Model\SoftDeletable\SoftDeletable</parameter>
    <parameter key="knp.doctrine_behaviors.timestampable_subscriber.class">Knp\DoctrineBehaviors\ORM\Timestampable\TimestampableSubscriber</parameter>
    <parameter key="knp.doctrine_behaviors.timestampable_subscriber.timestampable_trait">Knp\DoctrineBehaviors\Model\Timestampable\Timestampable</parameter>
    <parameter key="knp.doctrine_behaviors.timestampable_subscriber.db_field_type">datetime</parameter>
    <parameter key="knp.doctrine_behaviors.blameable_subscriber.class">Knp\DoctrineBehaviors\ORM\Blameable\BlameableSubscriber</parameter>
    <parameter key="knp.doctrine_behaviors.blameable_subscriber.blameable_trait">Knp\DoctrineBehaviors\Model\Blameable\Blameable</parameter>
    <parameter key="knp.doctrine_behaviors.blameable_subscriber.user_callable.class">Knp\DoctrineBehaviors\ORM\Blameable\UserCallable</parameter>
    <parameter key="knp.doctrine_behaviors.blameable_subscriber.user_entity">null</parameter>
    <parameter key="knp.doctrine_behaviors.loggable_subscriber.class">Knp\DoctrineBehaviors\ORM\Loggable\LoggableSubscriber</parameter>
    <parameter key="knp.doctrine_behaviors.loggable_subscriber.logger_callable.class">Knp\DoctrineBehaviors\ORM\Loggable\LoggerCallable</parameter>
    <parameter key="knp.doctrine_behaviors.geocodable_subscriber.class">Knp\DoctrineBehaviors\ORM\Geocodable\GeocodableSubscriber</parameter>
    <parameter key="knp.doctrine_behaviors.geocodable_subscriber.geocodable_trait">Knp\DoctrineBehaviors\Model\Geocodable\Geocodable</parameter>
    <parameter key="knp.doctrine_behaviors.sluggable_subscriber.class">Knp\DoctrineBehaviors\ORM\Sluggable\SluggableSubscriber</parameter>
    <parameter key="knp.doctrine_behaviors.sluggable_subscriber.sluggable_trait">Knp\DoctrineBehaviors\Model\Sluggable\Sluggable</parameter>
    <parameter key="knp.doctrine_behaviors.tree_subscriber.class">Knp\DoctrineBehaviors\ORM\Tree\TreeSubscriber</parameter>
    <parameter key="knp.doctrine_behaviors.tree_subscriber.tree_trait">Knp\DoctrineBehaviors\Model\Tree\Node</parameter>
    <parameter key="knp.doctrine_behaviors.sortable_subscriber.class">Knp\DoctrineBehaviors\ORM\Sortable\SortableSubscriber</parameter>
    <parameter key="knp.doctrine_behaviors.sortable_subscriber.sortable_trait">Knp\DoctrineBehaviors\Model\Sortable\Sortable</parameter>
    <parameter key="lexik_currency.doctrine_adapter.class">Cocorico\CurrencyBundle\Adapter\DoctrineCurrencyAdapter</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">fr</parameter>
    <parameter key="templating.helper.code.file_link_format">phpstorm://open?file=%f&amp;line=%l</parameter>
    <parameter key="debug.file_link_format">phpstorm://open?file=%f&amp;line=%l</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="name">_csess</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
      <parameter key="use_strict_mode">true</parameter>
    </parameter>
    <parameter key="session.save_path">/cocorico/var/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/cocorico/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="translator.default_path">/cocorico/translations</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/cocorico/var/cache/dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/cocorico/var/cache/dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.options.matcher.cache_class">appDevDebugProjectContainerUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevDebugProjectContainerUrlGenerator</parameter>
    <parameter key="router.resource">/cocorico/app/config/routing_dev.yml</parameter>
    <parameter key="router.cache_class_prefix">appDevDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_SONATA_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="hwi_oauth.resource_ownermap.configured.main" type="collection">
      <parameter key="facebook">/fr/oauth/fb-login</parameter>
    </parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception:showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>FMElfinderBundle:Form:elfinder_widget.html.twig</parameter>
      <parameter>@IvoryCKEditor/Form/ckeditor_widget.html.twig</parameter>
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>SonataUserBundle:Form:form_admin_fields.html.twig</parameter>
      <parameter>CocoricoCoreBundle:Form:fields.html.twig</parameter>
      <parameter>CocoricoCoreBundle:Form:fields_collection.html.twig</parameter>
      <parameter>CocoricoCoreBundle:Form:fields_category.html.twig</parameter>
      <parameter>CocoricoCoreBundle:Form:fields_price.html.twig</parameter>
      <parameter>SonataCoreBundle:Form:datepicker.html.twig</parameter>
      <parameter>CocoricoTimeBundle:Form:fields_date_time.html.twig</parameter>
      <parameter>LiipImagineBundle:Form:form_div_layout.html.twig</parameter>
      <parameter>CocoricoCoreBundle:Form:fields_translations.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/cocorico/templates</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">127.0.0.1</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.local_domain">null</parameter>
    <parameter key="swiftmailer.spool.default.file.path">/cocorico/app/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="assetic.asset_factory.class">Symfony\Bundle\AsseticBundle\Factory\AssetFactory</parameter>
    <parameter key="assetic.asset_manager.class">Assetic\Factory\LazyAssetManager</parameter>
    <parameter key="assetic.asset_manager_cache_warmer.class">Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer</parameter>
    <parameter key="assetic.cached_formula_loader.class">Assetic\Factory\Loader\CachedFormulaLoader</parameter>
    <parameter key="assetic.config_cache.class">Assetic\Cache\ConfigCache</parameter>
    <parameter key="assetic.config_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader</parameter>
    <parameter key="assetic.config_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource</parameter>
    <parameter key="assetic.coalescing_directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource</parameter>
    <parameter key="assetic.directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource</parameter>
    <parameter key="assetic.filter_manager.class">Symfony\Bundle\AsseticBundle\FilterManager</parameter>
    <parameter key="assetic.worker.ensure_filter.class">Assetic\Factory\Worker\EnsureFilterWorker</parameter>
    <parameter key="assetic.worker.cache_busting.class">Assetic\Factory\Worker\CacheBustingWorker</parameter>
    <parameter key="assetic.value_supplier.class">Symfony\Bundle\AsseticBundle\DefaultValueSupplier</parameter>
    <parameter key="assetic.node.paths" type="collection"/>
    <parameter key="assetic.cache_dir">/cocorico/var/cache/dev/assetic</parameter>
    <parameter key="assetic.bundles" type="collection">
      <parameter>CocoricoCoreBundle</parameter>
      <parameter>CocoricoUserBundle</parameter>
    </parameter>
    <parameter key="assetic.twig_extension.class">Symfony\Bundle\AsseticBundle\Twig\AsseticExtension</parameter>
    <parameter key="assetic.twig_formula_loader.class">Assetic\Extension\Twig\TwigFormulaLoader</parameter>
    <parameter key="assetic.helper.dynamic.class">Symfony\Bundle\AsseticBundle\Templating\DynamicAsseticHelper</parameter>
    <parameter key="assetic.helper.static.class">Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper</parameter>
    <parameter key="assetic.php_formula_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader</parameter>
    <parameter key="assetic.debug">true</parameter>
    <parameter key="assetic.use_controller">false</parameter>
    <parameter key="assetic.enable_profiler">false</parameter>
    <parameter key="assetic.read_from">/cocorico/app/../web</parameter>
    <parameter key="assetic.write_to">/cocorico/app/../web</parameter>
    <parameter key="assetic.variables" type="collection"/>
    <parameter key="assetic.java.bin">/usr/bin/java</parameter>
    <parameter key="assetic.node.bin">/usr/bin/node</parameter>
    <parameter key="assetic.ruby.bin">/usr/bin/ruby</parameter>
    <parameter key="assetic.sass.bin">/usr/bin/sass</parameter>
    <parameter key="assetic.reactjsx.bin">/usr/bin/jsx</parameter>
    <parameter key="assetic.filter.cssrewrite.class">Assetic\Filter\CssRewriteFilter</parameter>
    <parameter key="assetic.filter.jsqueeze.single_line">true</parameter>
    <parameter key="assetic.filter.jsqueeze.keep_important_comments">true</parameter>
    <parameter key="assetic.filter.jsqueeze.special_var_rx">false</parameter>
    <parameter key="assetic.twig_extension.functions" type="collection"/>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="json" type="collection">
        <parameter key="class">Sonata\Doctrine\Types\JsonType</parameter>
        <parameter key="commented">true</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/cocorico/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine_migrations.dir_name">/cocorico/app/DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.namespace">Application\Migrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="jms_i18n_routing.router.class">JMS\I18nRoutingBundle\Router\I18nRouter</parameter>
    <parameter key="jms_i18n_routing.locale_resolver.class">JMS\I18nRoutingBundle\Router\DefaultLocaleResolver</parameter>
    <parameter key="jms_i18n_routing.loader.class">JMS\I18nRoutingBundle\Router\I18nLoader</parameter>
    <parameter key="jms_i18n_routing.route_exclusion_strategy.class">JMS\I18nRoutingBundle\Router\DefaultRouteExclusionStrategy</parameter>
    <parameter key="jms_i18n_routing.pattern_generation_strategy.class">JMS\I18nRoutingBundle\Router\DefaultPatternGenerationStrategy</parameter>
    <parameter key="jms_i18n_routing.locale_choosing_listener.class">JMS\I18nRoutingBundle\EventListener\LocaleChoosingListener</parameter>
    <parameter key="jms_i18n_routing.cookie_setting_listener.class">JMS\I18nRoutingBundle\EventListener\CookieSettingListener</parameter>
    <parameter key="jms_i18n_routing.route_translation_extractor.class">JMS\I18nRoutingBundle\Translation\RouteTranslationExtractor</parameter>
    <parameter key="jms_i18n_routing.default_locale">fr</parameter>
    <parameter key="jms_i18n_routing.locales" type="collection">
      <parameter>en</parameter>
      <parameter>fr</parameter>
    </parameter>
    <parameter key="jms_i18n_routing.catalogue">routes</parameter>
    <parameter key="jms_i18n_routing.strategy">prefix</parameter>
    <parameter key="jms_i18n_routing.redirect_to_host">true</parameter>
    <parameter key="jms_i18n_routing.cookie.name">hl</parameter>
    <parameter key="jms_translation.extractor_manager.class">JMS\TranslationBundle\Translation\ExtractorManager</parameter>
    <parameter key="jms_translation.extractor.file_extractor.class">JMS\TranslationBundle\Translation\Extractor\FileExtractor</parameter>
    <parameter key="jms_translation.extractor.file.default_php_extractor">JMS\TranslationBundle\Translation\Extractor\File\DefaultPhpFileExtractor</parameter>
    <parameter key="jms_translation.extractor.file.translation_container_extractor">JMS\TranslationBundle\Translation\Extractor\File\TranslationContainerExtractor</parameter>
    <parameter key="jms_translation.extractor.file.form_extractor.class">JMS\TranslationBundle\Translation\Extractor\File\FormExtractor</parameter>
    <parameter key="jms_translation.extractor.file.validation_extractor.class">JMS\TranslationBundle\Translation\Extractor\File\ValidationExtractor</parameter>
    <parameter key="jms_translation.extractor.file.authentication_message_extractor.class">JMS\TranslationBundle\Translation\Extractor\File\AuthenticationMessagesExtractor</parameter>
    <parameter key="jms_translation.loader.symfony.xliff_loader.class">JMS\TranslationBundle\Translation\Loader\Symfony\XliffLoader</parameter>
    <parameter key="jms_translation.loader.xliff_loader.class">JMS\TranslationBundle\Translation\Loader\XliffLoader</parameter>
    <parameter key="jms_translation.loader.symfony_adapter.class">JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter</parameter>
    <parameter key="jms_translation.loader_manager.class">JMS\TranslationBundle\Translation\LoaderManager</parameter>
    <parameter key="jms_translation.dumper.php_dumper.class">JMS\TranslationBundle\Translation\Dumper\PhpDumper</parameter>
    <parameter key="jms_translation.dumper.xliff_dumper.class">JMS\TranslationBundle\Translation\Dumper\XliffDumper</parameter>
    <parameter key="jms_translation.dumper.yaml_dumper.class">JMS\TranslationBundle\Translation\Dumper\YamlDumper</parameter>
    <parameter key="jms_translation.dumper.symfony_adapter.class">JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter</parameter>
    <parameter key="jms_translation.file_writer.class">JMS\TranslationBundle\Translation\FileWriter</parameter>
    <parameter key="jms_translation.updater.class">JMS\TranslationBundle\Translation\Updater</parameter>
    <parameter key="jms_translation.config_factory.class">JMS\TranslationBundle\Translation\ConfigFactory</parameter>
    <parameter key="jms_translation.file_source_factory.class">JMS\TranslationBundle\Translation\FileSourceFactory</parameter>
    <parameter key="jms_translation.extractor.file.twig_extractor">JMS\TranslationBundle\Translation\Extractor\File\Twig2FileExtractor</parameter>
    <parameter key="jms_translation.twig_extension.class">JMS\TranslationBundle\Twig2\TranslationExtension</parameter>
    <parameter key="jms_translation.source_language">en</parameter>
    <parameter key="jms_translation.locales" type="collection"/>
    <parameter key="jms_translation.dumper.add_references">false</parameter>
    <parameter key="jms_translation.dumper.add_date">false</parameter>
    <parameter key="jms_aop.cache_dir">/cocorico/var/cache/dev/jms_aop</parameter>
    <parameter key="jms_aop.interceptor_loader.class">JMS\AopBundle\Aop\InterceptorLoader</parameter>
    <parameter key="jms_di_extra.metadata.driver.annotation_driver.class">JMS\DiExtraBundle\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_di_extra.metadata.driver.configured_controller_injections.class">JMS\DiExtraBundle\Metadata\Driver\ConfiguredControllerInjectionsDriver</parameter>
    <parameter key="jms_di_extra.metadata.driver.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_di_extra.service_naming_strategy.default.class">JMS\DiExtraBundle\Metadata\DefaultNamingStrategy</parameter>
    <parameter key="jms_di_extra.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_di_extra.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_di_extra.metadata.converter.class">JMS\DiExtraBundle\Metadata\MetadataConverter</parameter>
    <parameter key="jms_di_extra.controller_resolver.class">JMS\DiExtraBundle\HttpKernel\ControllerResolver</parameter>
    <parameter key="jms_di_extra.controller_injectors_warmer.class">JMS\DiExtraBundle\HttpKernel\ControllerInjectorsWarmer</parameter>
    <parameter key="jms_di_extra.all_bundles">false</parameter>
    <parameter key="jms_di_extra.bundles" type="collection"/>
    <parameter key="jms_di_extra.directories" type="collection"/>
    <parameter key="jms_di_extra.cache_dir">/cocorico/var/cache/dev/jms_diextra</parameter>
    <parameter key="jms_di_extra.disable_grep">false</parameter>
    <parameter key="jms_di_extra.doctrine_integration">true</parameter>
    <parameter key="jms_di_extra.annotation_patterns" type="collection">
      <parameter>JMS\DiExtraBundle\Annotation</parameter>
      <parameter>Sonata\AdminBundle\Annotation</parameter>
    </parameter>
    <parameter key="jms_di_extra.cache_warmer.controller_file_blacklist" type="collection"/>
    <parameter key="jms_di_extra.doctrine_integration.entity_manager.file">/cocorico/var/cache/dev/jms_diextra/doctrine/EntityManager_5cf912c9b08d5.php</parameter>
    <parameter key="jms_di_extra.doctrine_integration.entity_manager.class">EntityManager5cf912c9b08d5_546a8d27f194334ee012bfe64f629947b07e4919\__CG__\Doctrine\ORM\EntityManager</parameter>
    <parameter key="fos_user.backend_type_orm">true</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\EventListener\LastLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">@FOSUser/Resetting/email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">@FOSUser/Registration/email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">Cocorico\UserBundle\Entity\User</parameter>
    <parameter key="fos_user.profile.form.type">Cocorico\UserBundle\Form\Type\ProfileAboutMeFormType</parameter>
    <parameter key="fos_user.profile.form.name">user_profile</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>CocoricoProfile</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="no-reply@cocorico.io">Costocking.com</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">false</parameter>
    <parameter key="fos_user.registration.form.type">Cocorico\UserBundle\Form\Type\RegistrationFormType</parameter>
    <parameter key="fos_user.registration.form.name">user_registration</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>CocoricoRegistration</parameter>
    </parameter>
    <parameter key="fos_user.change_password.form.type">FOS\UserBundle\Form\Type\ChangePasswordFormType</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="no-reply@cocorico.io">Costocking.com</parameter>
    </parameter>
    <parameter key="fos_user.resetting.retry_ttl">7200</parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.type">Cocorico\UserBundle\Form\Type\ResettingFormType</parameter>
    <parameter key="fos_user.resetting.form.name">user_resetting</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>ResetPassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.group_manager.class">FOS\UserBundle\Doctrine\GroupManager</parameter>
    <parameter key="fos_user.model.group.class">Cocorico\UserBundle\Entity\Group</parameter>
    <parameter key="fos_user.group.form.type">FOS\UserBundle\Form\Type\GroupFormType</parameter>
    <parameter key="fos_user.group.form.name">fos_user_group_form</parameter>
    <parameter key="fos_user.group.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="stof_doctrine_extensions.event_listener.locale.class">Stof\DoctrineExtensionsBundle\EventListener\LocaleListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.logger.class">Stof\DoctrineExtensionsBundle\EventListener\LoggerListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.blame.class">Stof\DoctrineExtensionsBundle\EventListener\BlameListener</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.manager.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.mime_type_guesser.class">Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.default_file_info.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</parameter>
    <parameter key="stof_doctrine_extensions.default_locale">fr</parameter>
    <parameter key="stof_doctrine_extensions.default_file_path">null</parameter>
    <parameter key="stof_doctrine_extensions.translation_fallback">false</parameter>
    <parameter key="stof_doctrine_extensions.persist_default_translation">false</parameter>
    <parameter key="stof_doctrine_extensions.skip_translation_on_load">false</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.validate_writable_directory">true</parameter>
    <parameter key="stof_doctrine_extensions.listener.translatable.class">Gedmo\Translatable\TranslatableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.timestampable.class">Gedmo\Timestampable\TimestampableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.blameable.class">Gedmo\Blameable\BlameableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sluggable.class">Gedmo\Sluggable\SluggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.tree.class">Gedmo\Tree\TreeListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.loggable.class">Gedmo\Loggable\LoggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sortable.class">Gedmo\Sortable\SortableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.softdeleteable.class">Gedmo\SoftDeleteable\SoftDeleteableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.uploadable.class">Gedmo\Uploadable\UploadableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.reference_integrity.class">Gedmo\ReferenceIntegrity\ReferenceIntegrityListener</parameter>
    <parameter key="doctrine_mongodb.odm.connection.class">Doctrine\MongoDB\Connection</parameter>
    <parameter key="doctrine_mongodb.odm.configuration.class">Doctrine\ODM\MongoDB\Configuration</parameter>
    <parameter key="doctrine_mongodb.odm.document_manager.class">Doctrine\ODM\MongoDB\DocumentManager</parameter>
    <parameter key="doctrine_mongodb.odm.manager_configurator.class">Doctrine\Bundle\MongoDBBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine_mongodb.odm.logger.class">Doctrine\Bundle\MongoDBBundle\Logger\Logger</parameter>
    <parameter key="doctrine_mongodb.odm.logger.aggregate.class">Doctrine\Bundle\MongoDBBundle\Logger\AggregateLogger</parameter>
    <parameter key="doctrine_mongodb.odm.data_collector.standard.class">Doctrine\Bundle\MongoDBBundle\DataCollector\StandardDataCollector</parameter>
    <parameter key="doctrine_mongodb.odm.data_collector.pretty.class">Doctrine\Bundle\MongoDBBundle\DataCollector\PrettyDataCollector</parameter>
    <parameter key="doctrine_mongodb.odm.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine_odm.mongodb.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine_odm.mongodb.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine_mongodb.odm.class">Doctrine\Bundle\MongoDBBundle\ManagerRegistry</parameter>
    <parameter key="doctrine_mongodb.odm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine_mongodb.odm.proxy_cache_warmer.class">Doctrine\Bundle\MongoDBBundle\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="doctrine_mongodb.odm.hydrator_cache_warmer.class">Doctrine\Bundle\MongoDBBundle\CacheWarmer\HydratorCacheWarmer</parameter>
    <parameter key="doctrine_mongodb.odm.persistent_collection_cache_warmer.class">Doctrine\Bundle\MongoDBBundle\CacheWarmer\PersistentCollectionCacheWarmer</parameter>
    <parameter key="doctrine_mongodb.odm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_mongodb.odm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_mongodb.odm.cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_mongodb.odm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_mongodb.odm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine_mongodb.odm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine_mongodb.odm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine_mongodb.odm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_mongodb.odm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine_mongodb.odm.metadata.annotation.class">Doctrine\ODM\MongoDB\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine_mongodb.odm.metadata.xml.class">Doctrine\Bundle\MongoDBBundle\Mapping\Driver\XmlDriver</parameter>
    <parameter key="doctrine_mongodb.odm.metadata.yml.class">Doctrine\Bundle\MongoDBBundle\Mapping\Driver\YamlDriver</parameter>
    <parameter key="doctrine_mongodb.odm.mapping_dirs" type="collection"/>
    <parameter key="doctrine_mongodb.odm.xml_mapping_dirs" type="collection"/>
    <parameter key="doctrine_mongodb.odm.yml_mapping_dirs" type="collection"/>
    <parameter key="doctrine_mongodb.odm.document_dirs" type="collection"/>
    <parameter key="doctrine_mongodb.odm.fixtures_dirs" type="collection"/>
    <parameter key="doctrine_mongodb.odm.logger.batch_insert_threshold">4</parameter>
    <parameter key="doctrine_mongodb.odm.listeners.resolve_target_document.class">Doctrine\ODM\MongoDB\Tools\ResolveTargetDocumentListener</parameter>
    <parameter key="doctrine_mongodb.odm.default_connection">default</parameter>
    <parameter key="doctrine_mongodb.odm.default_document_manager">default</parameter>
    <parameter key="doctrine_mongodb.odm.proxy_namespace">MongoDBODMProxies</parameter>
    <parameter key="doctrine_mongodb.odm.proxy_dir">/cocorico/var/cache/dev/doctrine/odm/mongodb/Proxies</parameter>
    <parameter key="doctrine_mongodb.odm.auto_generate_proxy_classes">0</parameter>
    <parameter key="doctrine_mongodb.odm.hydrator_namespace">Hydrators</parameter>
    <parameter key="doctrine_mongodb.odm.hydrator_dir">/cocorico/var/cache/dev/doctrine/odm/mongodb/Hydrators</parameter>
    <parameter key="doctrine_mongodb.odm.auto_generate_hydrator_classes">0</parameter>
    <parameter key="doctrine_mongodb.odm.default_commit_options" type="collection"/>
    <parameter key="doctrine_mongodb.odm.persistent_collection_dir">/cocorico/var/cache/dev/doctrine/odm/mongodb/PersistentCollections</parameter>
    <parameter key="doctrine_mongodb.odm.persistent_collection_namespace">PersistentCollections</parameter>
    <parameter key="doctrine_mongodb.odm.auto_generate_persistent_collection_classes">0</parameter>
    <parameter key="doctrine_mongodb.odm.fixture_loader">Symfony\Bridge\Doctrine\DataFixtures\ContainerAwareLoader</parameter>
    <parameter key="doctrine_mongodb.odm.connections" type="collection">
      <parameter key="default">doctrine_mongodb.odm.default_connection</parameter>
    </parameter>
    <parameter key="doctrine_mongodb.odm.document_managers" type="collection">
      <parameter key="default">doctrine_mongodb.odm.default_document_manager</parameter>
    </parameter>
    <parameter key="sonata.admin.twig.extension.x_editable_type_mapping" type="collection">
      <parameter key="choice">select</parameter>
      <parameter key="boolean">select</parameter>
      <parameter key="text">text</parameter>
      <parameter key="textarea">textarea</parameter>
      <parameter key="html">textarea</parameter>
      <parameter key="email">email</parameter>
      <parameter key="string">text</parameter>
      <parameter key="smallint">text</parameter>
      <parameter key="bigint">text</parameter>
      <parameter key="integer">number</parameter>
      <parameter key="decimal">number</parameter>
      <parameter key="currency">number</parameter>
      <parameter key="percent">number</parameter>
      <parameter key="url">url</parameter>
      <parameter key="date">date</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.global_search.empty_boxes">show</parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="user_block">CocoricoSonataAdminBundle::user_block.html.twig</parameter>
      <parameter key="layout">CocoricoSonataAdminBundle::standard_layout.html.twig</parameter>
      <parameter key="add_block">SonataAdminBundle:Core:add_block.html.twig</parameter>
      <parameter key="ajax">SonataAdminBundle::ajax_layout.html.twig</parameter>
      <parameter key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</parameter>
      <parameter key="search">SonataAdminBundle:Core:search.html.twig</parameter>
      <parameter key="list">SonataAdminBundle:CRUD:list.html.twig</parameter>
      <parameter key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      <parameter key="show">SonataAdminBundle:CRUD:show.html.twig</parameter>
      <parameter key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</parameter>
      <parameter key="edit">SonataAdminBundle:CRUD:edit.html.twig</parameter>
      <parameter key="preview">SonataAdminBundle:CRUD:preview.html.twig</parameter>
      <parameter key="history">SonataAdminBundle:CRUD:history.html.twig</parameter>
      <parameter key="acl">SonataAdminBundle:CRUD:acl.html.twig</parameter>
      <parameter key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</parameter>
      <parameter key="action">SonataAdminBundle:CRUD:action.html.twig</parameter>
      <parameter key="select">SonataAdminBundle:CRUD:list__select.html.twig</parameter>
      <parameter key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</parameter>
      <parameter key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</parameter>
      <parameter key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</parameter>
      <parameter key="delete">SonataAdminBundle:CRUD:delete.html.twig</parameter>
      <parameter key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</parameter>
      <parameter key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</parameter>
      <parameter key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</parameter>
      <parameter key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</parameter>
      <parameter key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</parameter>
      <parameter key="pager_links">SonataAdminBundle:Pager:links.html.twig</parameter>
      <parameter key="pager_results">SonataAdminBundle:Pager:results.html.twig</parameter>
      <parameter key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</parameter>
      <parameter key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</parameter>
      <parameter key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</parameter>
      <parameter key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</parameter>
      <parameter key="button_create">SonataAdminBundle:Button:create_button.html.twig</parameter>
      <parameter key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</parameter>
      <parameter key="button_history">SonataAdminBundle:Button:history_button.html.twig</parameter>
      <parameter key="button_list">SonataAdminBundle:Button:list_button.html.twig</parameter>
      <parameter key="button_show">SonataAdminBundle:Button:show_button.html.twig</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.admin_services" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection"/>
    <parameter key="sonata.admin.configuration.sort_admins">false</parameter>
    <parameter key="sonata.admin.configuration.breadcrumbs" type="collection">
      <parameter key="child_admin_route">edit</parameter>
    </parameter>
    <parameter key="sonata.admin.security.acl_user_manager">fos_user.user_manager</parameter>
    <parameter key="sonata.admin.configuration.security.role_admin">ROLE_SONATA_ADMIN</parameter>
    <parameter key="sonata.admin.configuration.security.role_super_admin">ROLE_SUPER_ADMIN</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection"/>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection">
      <parameter key="admins" type="collection"/>
      <parameter key="excludes" type="collection"/>
      <parameter key="implements" type="collection"/>
      <parameter key="extends" type="collection"/>
      <parameter key="instanceof" type="collection"/>
      <parameter key="uses" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="sonata.admin.configuration.show.mosaic.button">true</parameter>
    <parameter key="sonata.admin.configuration.translate_group_label">false</parameter>
    <parameter key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.core.form_type">standard</parameter>
    <parameter key="sonata.core.form.mapping.type" type="collection"/>
    <parameter key="sonata.core.form.mapping.extension" type="collection"/>
    <parameter key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</parameter>
    <parameter key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</parameter>
    <parameter key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</parameter>
    <parameter key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</parameter>
    <parameter key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</parameter>
    <parameter key="sonata.block.service.template.class">Sonata\BlockBundle\Block\Service\TemplateBlockService</parameter>
    <parameter key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</parameter>
    <parameter key="sonata.block.container.types" type="collection">
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.page.block.container</parameter>
      <parameter>sonata.dashboard.block.container</parameter>
      <parameter>cmf.block.container</parameter>
      <parameter>cmf.block.slideshow</parameter>
    </parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.search_result" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.menu" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.account" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.text" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_block.cache_blocks" type="collection">
      <parameter key="by_type" type="collection">
        <parameter key="sonata.admin.block.admin_list">sonata.cache.noop</parameter>
        <parameter key="sonata.admin.block.search_result">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.menu">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.account">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.text">sonata.cache.noop</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata_doctrine_orm_admin.audit.force">false</parameter>
    <parameter key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</parameter>
    <parameter key="sonata_doctrine_orm_admin.entity_manager">null</parameter>
    <parameter key="sonata_doctrine_orm_admin.templates" type="collection">
      <parameter key="types" type="collection">
        <parameter key="list" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:list_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</parameter>
          <parameter key="date">SonataAdminBundle:CRUD:list_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:list_time.html.twig</parameter>
          <parameter key="datetime">SonataAdminBundle:CRUD:list_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:list_email.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="smallint">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="bigint">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="integer">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="decimal">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="currency">SonataAdminBundle:CRUD:list_currency.html.twig</parameter>
          <parameter key="percent">SonataAdminBundle:CRUD:list_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:list_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:list_html.html.twig</parameter>
        </parameter>
        <parameter key="show" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:show_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</parameter>
          <parameter key="date">SonataAdminBundle:CRUD:show_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:show_time.html.twig</parameter>
          <parameter key="datetime">SonataAdminBundle:CRUD:show_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:show_email.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="smallint">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="bigint">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="integer">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="decimal">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="currency">SonataAdminBundle:CRUD:show_currency.html.twig</parameter>
          <parameter key="percent">SonataAdminBundle:CRUD:show_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:show_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:show_html.html.twig</parameter>
        </parameter>
      </parameter>
      <parameter key="form" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</parameter>
      </parameter>
      <parameter key="filter" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.user.admin.groupname">Users</parameter>
    <parameter key="sonata.user.admin.label_catalogue">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.groupicon">&lt;i class='fa fa-users'&gt;&lt;/i&gt;</parameter>
    <parameter key="sonata.user.admin.user.class">Cocorico\UserBundle\Admin\UserAdmin</parameter>
    <parameter key="sonata.user.admin.group.class">Cocorico\UserBundle\Admin\GroupAdmin</parameter>
    <parameter key="sonata.user.admin.user.entity">Cocorico\UserBundle\Entity\User</parameter>
    <parameter key="sonata.user.admin.group.entity">Cocorico\UserBundle\Entity\Group</parameter>
    <parameter key="sonata.user.admin.user.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.group.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.user.controller">CocoricoUserBundle:Admin\UserAdmin</parameter>
    <parameter key="sonata.user.admin.group.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.default_avatar">bundles/sonatauser/default_avatar.png</parameter>
    <parameter key="sonata.user.impersonating" type="collection">
      <parameter key="route">cocorico_home</parameter>
      <parameter key="parameters" type="collection"/>
    </parameter>
    <parameter key="sonata.user.google.authenticator.enabled">false</parameter>
    <parameter key="a2lix_translation_form.locales" type="collection">
      <parameter>en</parameter>
      <parameter>fr</parameter>
    </parameter>
    <parameter key="a2lix_translation_form.required_locales" type="collection">
      <parameter>en</parameter>
      <parameter>fr</parameter>
    </parameter>
    <parameter key="a2lix_translation_form.default.service.translation.class">A2lix\TranslationFormBundle\TranslationForm\TranslationForm</parameter>
    <parameter key="a2lix_translation_form.default.service.parameter_locale_provider.class">A2lix\TranslationFormBundle\Locale\DefaultProvider</parameter>
    <parameter key="a2lix_translation_form.default.listener.translations.class">A2lix\TranslationFormBundle\Form\EventListener\TranslationsListener</parameter>
    <parameter key="a2lix_translation_form.default.listener.translationsForms.class">A2lix\TranslationFormBundle\Form\EventListener\TranslationsFormsListener</parameter>
    <parameter key="a2lix_translation_form.default.type.translations.class">A2lix\TranslationFormBundle\Form\Type\TranslationsType</parameter>
    <parameter key="a2lix_translation_form.default.type.translationsFields.class">A2lix\TranslationFormBundle\Form\Type\TranslationsFieldsType</parameter>
    <parameter key="a2lix_translation_form.default.type.translationsForms.class">A2lix\TranslationFormBundle\Form\Type\TranslationsFormsType</parameter>
    <parameter key="a2lix_translation_form.default.type.translationsLocalesSelector.class">A2lix\TranslationFormBundle\Form\Type\TranslationsLocalesSelectorType</parameter>
    <parameter key="a2lix_translation_form.default.type.translatedEntity.class">A2lix\TranslationFormBundle\Form\Type\TranslatedEntityType</parameter>
    <parameter key="a2lix_translation_form.locale_provider">default</parameter>
    <parameter key="a2lix_translation_form.default_locale">fr</parameter>
    <parameter key="a2lix_translation_form.templating">CocoricoCoreBundle:Form:fields_translations.html.twig</parameter>
    <parameter key="oneup_uploader.chunks.manager.class">Oneup\UploaderBundle\Uploader\Chunk\ChunkManager</parameter>
    <parameter key="oneup_uploader.chunks_storage.gaufrette.class">Oneup\UploaderBundle\Uploader\Chunk\Storage\GaufretteStorage</parameter>
    <parameter key="oneup_uploader.chunks_storage.flysystem.class">Oneup\UploaderBundle\Uploader\Chunk\Storage\FlysystemStorage</parameter>
    <parameter key="oneup_uploader.chunks_storage.filesystem.class">Oneup\UploaderBundle\Uploader\Chunk\Storage\FilesystemStorage</parameter>
    <parameter key="oneup_uploader.namer.urlsafename.class">Oneup\UploaderBundle\Uploader\Naming\UrlSafeNamer</parameter>
    <parameter key="oneup_uploader.namer.uniqid.class">Oneup\UploaderBundle\Uploader\Naming\UniqidNamer</parameter>
    <parameter key="oneup_uploader.routing.loader.class">Oneup\UploaderBundle\Routing\RouteLoader</parameter>
    <parameter key="oneup_uploader.storage.gaufrette.class">Oneup\UploaderBundle\Uploader\Storage\GaufretteStorage</parameter>
    <parameter key="oneup_uploader.storage.flysystem.class">Oneup\UploaderBundle\Uploader\Storage\FlysystemStorage</parameter>
    <parameter key="oneup_uploader.storage.filesystem.class">Oneup\UploaderBundle\Uploader\Storage\FilesystemStorage</parameter>
    <parameter key="oneup_uploader.orphanage.class">Oneup\UploaderBundle\Uploader\Storage\FilesystemOrphanageStorage</parameter>
    <parameter key="oneup_uploader.orphanage.manager.class">Oneup\UploaderBundle\Uploader\Orphanage\OrphanageManager</parameter>
    <parameter key="oneup_uploader.controller.fineuploader.class">Oneup\UploaderBundle\Controller\FineUploaderController</parameter>
    <parameter key="oneup_uploader.controller.blueimp.class">Oneup\UploaderBundle\Controller\BlueimpController</parameter>
    <parameter key="oneup_uploader.controller.uploadify.class">Oneup\UploaderBundle\Controller\UploadifyController</parameter>
    <parameter key="oneup_uploader.controller.yui3.class">Oneup\UploaderBundle\Controller\YUI3Controller</parameter>
    <parameter key="oneup_uploader.controller.fancyupload.class">Oneup\UploaderBundle\Controller\FancyUploadController</parameter>
    <parameter key="oneup_uploader.controller.mooupload.class">Oneup\UploaderBundle\Controller\MooUploadController</parameter>
    <parameter key="oneup_uploader.controller.plupload.class">Oneup\UploaderBundle\Controller\PluploadController</parameter>
    <parameter key="oneup_uploader.controller.dropzone.class">Oneup\UploaderBundle\Controller\DropzoneController</parameter>
    <parameter key="oneup_uploader.error_handler.noop.class">Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler</parameter>
    <parameter key="oneup_uploader.error_handler.blueimp.class">Oneup\UploaderBundle\Uploader\ErrorHandler\BlueimpErrorHandler</parameter>
    <parameter key="oneup_uploader.error_handler.plupload.class">Oneup\UploaderBundle\Uploader\ErrorHandler\PluploadErrorHandler</parameter>
    <parameter key="oneup_uploader.error_handler.dropzone.class">Oneup\UploaderBundle\Uploader\ErrorHandler\DropzoneErrorHandler</parameter>
    <parameter key="oneup_uploader.chunks" type="collection">
      <parameter key="maxage">604800</parameter>
      <parameter key="storage" type="collection">
        <parameter key="type">filesystem</parameter>
        <parameter key="filesystem">null</parameter>
        <parameter key="directory">/cocorico/var/cache/dev/uploader/chunks</parameter>
        <parameter key="stream_wrapper">null</parameter>
        <parameter key="sync_buffer_size">100K</parameter>
        <parameter key="prefix">chunks</parameter>
      </parameter>
      <parameter key="load_distribution">true</parameter>
    </parameter>
    <parameter key="oneup_uploader.orphanage" type="collection">
      <parameter key="maxage">604800</parameter>
      <parameter key="directory">/cocorico/var/cache/dev/uploader/orphanage</parameter>
    </parameter>
    <parameter key="oneup_uploader.config.listing_images" type="collection">
      <parameter key="max_size">10000000</parameter>
      <parameter key="frontend">blueimp</parameter>
      <parameter key="allowed_mimetypes" type="collection">
        <parameter>image/gif</parameter>
        <parameter>image/jpg</parameter>
        <parameter>image/jpeg</parameter>
        <parameter>image/png</parameter>
      </parameter>
      <parameter key="enable_progress">true</parameter>
      <parameter key="namer">cocorico.namer.image_namer</parameter>
      <parameter key="storage" type="collection">
        <parameter key="directory">/cocorico/app/../web/uploads/listings/images/</parameter>
        <parameter key="service">null</parameter>
        <parameter key="type">filesystem</parameter>
        <parameter key="filesystem">null</parameter>
        <parameter key="stream_wrapper">null</parameter>
        <parameter key="sync_buffer_size">100K</parameter>
      </parameter>
      <parameter key="custom_frontend" type="collection">
        <parameter key="name">null</parameter>
        <parameter key="class">null</parameter>
      </parameter>
      <parameter key="route_prefix"></parameter>
      <parameter key="endpoints" type="collection">
        <parameter key="upload">null</parameter>
        <parameter key="progress">null</parameter>
        <parameter key="cancel">null</parameter>
      </parameter>
      <parameter key="disallowed_mimetypes" type="collection"/>
      <parameter key="error_handler">null</parameter>
      <parameter key="use_orphanage">false</parameter>
      <parameter key="enable_cancelation">false</parameter>
      <parameter key="root_folder">false</parameter>
    </parameter>
    <parameter key="oneup_uploader.config.user_images" type="collection">
      <parameter key="max_size">8000000</parameter>
      <parameter key="frontend">blueimp</parameter>
      <parameter key="allowed_mimetypes" type="collection">
        <parameter>image/gif</parameter>
        <parameter>image/jpeg</parameter>
        <parameter>image/png</parameter>
      </parameter>
      <parameter key="enable_progress">true</parameter>
      <parameter key="namer">cocorico.namer.image_namer</parameter>
      <parameter key="storage" type="collection">
        <parameter key="directory">/cocorico/app/../web/uploads/users/images/</parameter>
        <parameter key="service">null</parameter>
        <parameter key="type">filesystem</parameter>
        <parameter key="filesystem">null</parameter>
        <parameter key="stream_wrapper">null</parameter>
        <parameter key="sync_buffer_size">100K</parameter>
      </parameter>
      <parameter key="custom_frontend" type="collection">
        <parameter key="name">null</parameter>
        <parameter key="class">null</parameter>
      </parameter>
      <parameter key="route_prefix"></parameter>
      <parameter key="endpoints" type="collection">
        <parameter key="upload">null</parameter>
        <parameter key="progress">null</parameter>
        <parameter key="cancel">null</parameter>
      </parameter>
      <parameter key="disallowed_mimetypes" type="collection"/>
      <parameter key="error_handler">null</parameter>
      <parameter key="use_orphanage">false</parameter>
      <parameter key="enable_cancelation">false</parameter>
      <parameter key="root_folder">false</parameter>
    </parameter>
    <parameter key="oneup_uploader.config" type="collection">
      <parameter key="mappings" type="collection">
        <parameter key="listing_images" type="collection">
          <parameter key="max_size">10000000</parameter>
          <parameter key="frontend">blueimp</parameter>
          <parameter key="allowed_mimetypes" type="collection">
            <parameter>image/gif</parameter>
            <parameter>image/jpg</parameter>
            <parameter>image/jpeg</parameter>
            <parameter>image/png</parameter>
          </parameter>
          <parameter key="enable_progress">true</parameter>
          <parameter key="namer">cocorico.namer.image_namer</parameter>
          <parameter key="storage" type="collection">
            <parameter key="directory">/cocorico/app/../web/uploads/listings/images/</parameter>
            <parameter key="service">null</parameter>
            <parameter key="type">filesystem</parameter>
            <parameter key="filesystem">null</parameter>
            <parameter key="stream_wrapper">null</parameter>
            <parameter key="sync_buffer_size">100K</parameter>
          </parameter>
          <parameter key="custom_frontend" type="collection">
            <parameter key="name">null</parameter>
            <parameter key="class">null</parameter>
          </parameter>
          <parameter key="route_prefix"></parameter>
          <parameter key="endpoints" type="collection">
            <parameter key="upload">null</parameter>
            <parameter key="progress">null</parameter>
            <parameter key="cancel">null</parameter>
          </parameter>
          <parameter key="disallowed_mimetypes" type="collection"/>
          <parameter key="error_handler">null</parameter>
          <parameter key="use_orphanage">false</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="root_folder">false</parameter>
        </parameter>
        <parameter key="user_images" type="collection">
          <parameter key="max_size">8000000</parameter>
          <parameter key="frontend">blueimp</parameter>
          <parameter key="allowed_mimetypes" type="collection">
            <parameter>image/gif</parameter>
            <parameter>image/jpeg</parameter>
            <parameter>image/png</parameter>
          </parameter>
          <parameter key="enable_progress">true</parameter>
          <parameter key="namer">cocorico.namer.image_namer</parameter>
          <parameter key="storage" type="collection">
            <parameter key="directory">/cocorico/app/../web/uploads/users/images/</parameter>
            <parameter key="service">null</parameter>
            <parameter key="type">filesystem</parameter>
            <parameter key="filesystem">null</parameter>
            <parameter key="stream_wrapper">null</parameter>
            <parameter key="sync_buffer_size">100K</parameter>
          </parameter>
          <parameter key="custom_frontend" type="collection">
            <parameter key="name">null</parameter>
            <parameter key="class">null</parameter>
          </parameter>
          <parameter key="route_prefix"></parameter>
          <parameter key="endpoints" type="collection">
            <parameter key="upload">null</parameter>
            <parameter key="progress">null</parameter>
            <parameter key="cancel">null</parameter>
          </parameter>
          <parameter key="disallowed_mimetypes" type="collection"/>
          <parameter key="error_handler">null</parameter>
          <parameter key="use_orphanage">false</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="root_folder">false</parameter>
        </parameter>
      </parameter>
      <parameter key="chunks" type="collection">
        <parameter key="maxage">604800</parameter>
        <parameter key="storage" type="collection">
          <parameter key="type">filesystem</parameter>
          <parameter key="filesystem">null</parameter>
          <parameter key="directory">/cocorico/var/cache/dev/uploader/chunks</parameter>
          <parameter key="stream_wrapper">null</parameter>
          <parameter key="sync_buffer_size">100K</parameter>
          <parameter key="prefix">chunks</parameter>
        </parameter>
        <parameter key="load_distribution">true</parameter>
      </parameter>
      <parameter key="orphanage" type="collection">
        <parameter key="maxage">604800</parameter>
        <parameter key="directory">/cocorico/var/cache/dev/uploader/orphanage</parameter>
      </parameter>
      <parameter key="twig">true</parameter>
    </parameter>
    <parameter key="oneup_uploader.controllers" type="collection">
      <parameter key="listing_images" type="collection">
        <parameter>oneup_uploader.controller.listing_images</parameter>
        <parameter type="collection">
          <parameter key="enable_progress">true</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="route_prefix"></parameter>
          <parameter key="endpoints" type="collection">
            <parameter key="upload">null</parameter>
            <parameter key="progress">null</parameter>
            <parameter key="cancel">null</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="user_images" type="collection">
        <parameter>oneup_uploader.controller.user_images</parameter>
        <parameter type="collection">
          <parameter key="enable_progress">true</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="route_prefix"></parameter>
          <parameter key="endpoints" type="collection">
            <parameter key="upload">null</parameter>
            <parameter key="progress">null</parameter>
            <parameter key="cancel">null</parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="oneup_uploader.maxsize" type="collection">
      <parameter key="listing_images">10000000</parameter>
      <parameter key="user_images">8000000</parameter>
    </parameter>
    <parameter key="liip_imagine.filter.configuration.class">Liip\ImagineBundle\Imagine\Filter\FilterConfiguration</parameter>
    <parameter key="liip_imagine.filter.manager.class">Liip\ImagineBundle\Imagine\Filter\FilterManager</parameter>
    <parameter key="liip_imagine.data.manager.class">Liip\ImagineBundle\Imagine\Data\DataManager</parameter>
    <parameter key="liip_imagine.cache.manager.class">Liip\ImagineBundle\Imagine\Cache\CacheManager</parameter>
    <parameter key="liip_imagine.cache.signer.class">Liip\ImagineBundle\Imagine\Cache\Signer</parameter>
    <parameter key="liip_imagine.binary.mime_type_guesser.class">Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser</parameter>
    <parameter key="liip_imagine.controller.class">Liip\ImagineBundle\Controller\ImagineController</parameter>
    <parameter key="liip_imagine.twig.extension.class">Liip\ImagineBundle\Templating\ImagineExtension</parameter>
    <parameter key="liip_imagine.templating.helper.class">Liip\ImagineBundle\Templating\Helper\ImagineHelper</parameter>
    <parameter key="liip_imagine.gd.class">Imagine\Gd\Imagine</parameter>
    <parameter key="liip_imagine.imagick.class">Imagine\Imagick\Imagine</parameter>
    <parameter key="liip_imagine.gmagick.class">Imagine\Gmagick\Imagine</parameter>
    <parameter key="liip_imagine.filter.loader.relative_resize.class">Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.resize.class">Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.thumbnail.class">Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.crop.class">Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.paste.class">Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.watermark.class">Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.strip.class">Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.background.class">Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.upscale.class">Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.downscale.class">Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.auto_rotate.class">Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.rotate.class">Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.interlace.class">Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader</parameter>
    <parameter key="liip_imagine.binary.loader.filesystem.class">Liip\ImagineBundle\Binary\Loader\FileSystemLoader</parameter>
    <parameter key="liip_imagine.binary.loader.stream.class">Liip\ImagineBundle\Binary\Loader\StreamLoader</parameter>
    <parameter key="liip_imagine.binary.loader.flysystem.class">Liip\ImagineBundle\Binary\Loader\FlysystemLoader</parameter>
    <parameter key="liip_imagine.cache.resolver.web_path.class">Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.no_cache_web_path.class">Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.aws_s3.class">Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver</parameter>
    <parameter key="liip_imagine.cache.resolver.cache.class">Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.proxy.class">Liip\ImagineBundle\Imagine\Cache\Resolver\ProxyResolver</parameter>
    <parameter key="liip_imagine.form.type.image.class">Liip\ImagineBundle\Form\Type\ImageType</parameter>
    <parameter key="liip_imagine.meta_data.reader.class">Imagine\Image\Metadata\ExifMetadataReader</parameter>
    <parameter key="liip_imagine.filter.post_processor.jpegoptim.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor</parameter>
    <parameter key="liip_imagine.jpegoptim.binary">/usr/bin/jpegoptim</parameter>
    <parameter key="liip_imagine.filter.post_processor.optipng.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor</parameter>
    <parameter key="liip_imagine.optipng.binary">/usr/bin/optipng</parameter>
    <parameter key="liip_imagine.cache.resolver.default">null</parameter>
    <parameter key="liip_imagine.default_image">null</parameter>
    <parameter key="liip_imagine.filter_sets" type="collection">
      <parameter key="listing_xsmall" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>90</parameter>
              <parameter>67</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="listing_small" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>100</parameter>
              <parameter>75</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="listing_xxmedium" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>150</parameter>
              <parameter>112</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="listing_xmedium" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>200</parameter>
              <parameter>150</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="listing_medium" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>275</parameter>
              <parameter>206</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="listing_xxlarge" type="collection">
        <parameter key="quality">80</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>680</parameter>
              <parameter>510</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="listing_xlarge" type="collection">
        <parameter key="quality">85</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="upscale" type="collection">
            <parameter key="min" type="collection">
              <parameter>527</parameter>
              <parameter>395</parameter>
            </parameter>
          </parameter>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>527</parameter>
              <parameter>395</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
            <parameter key="allow_upscale">true</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="listing_large" type="collection">
        <parameter key="quality">90</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="upscale" type="collection">
            <parameter key="min" type="collection">
              <parameter>384</parameter>
              <parameter>288</parameter>
            </parameter>
          </parameter>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>384</parameter>
              <parameter>288</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
            <parameter key="allow_upscale">true</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="user_xsmall" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>60</parameter>
              <parameter>45</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="user_small" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>150</parameter>
              <parameter>112</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="user_medium" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>200</parameter>
              <parameter>150</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="user_contact" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>213</parameter>
              <parameter>160</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="user_profile" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>308</parameter>
              <parameter>231</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="cache_type">public</parameter>
            <parameter key="cache_expires">1 months</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="liip_imagine.binary.loader.default">default</parameter>
    <parameter key="liip_imagine.controller.filter_action">liip_imagine.controller:filterAction</parameter>
    <parameter key="liip_imagine.controller.filter_runtime_action">liip_imagine.controller:filterRuntimeAction</parameter>
    <parameter key="lexik_currency.currency_extension.class">Lexik\Bundle\CurrencyBundle\Twig\Extension\CurrencyExtension</parameter>
    <parameter key="lexik_currency.converter.class">Lexik\Bundle\CurrencyBundle\Currency\Converter</parameter>
    <parameter key="lexik_currency.formatter.class">Lexik\Bundle\CurrencyBundle\Currency\Formatter</parameter>
    <parameter key="lexik_currency.subscriber.locale.class">Lexik\Bundle\CurrencyBundle\EventListener\LocaleListener</parameter>
    <parameter key="lexik_currency.adapter_collector.class">Lexik\Bundle\CurrencyBundle\Adapter\AdapterCollector</parameter>
    <parameter key="lexik_currency.adapter_factory.class">Lexik\Bundle\CurrencyBundle\Adapter\AdapterFactory</parameter>
    <parameter key="lexik_currency.abstract_adapter.class">Lexik\Bundle\CurrencyBundle\Adapter\AbstractCurrencyAdapter</parameter>
    <parameter key="lexik_currency.ecb_adapter.class">Lexik\Bundle\CurrencyBundle\Adapter\EcbCurrencyAdapter</parameter>
    <parameter key="lexik_currency.oer_adapter.class">Lexik\Bundle\CurrencyBundle\Adapter\OerCurrencyAdapter</parameter>
    <parameter key="lexik_currency.yahoo_adapter.class">Lexik\Bundle\CurrencyBundle\Adapter\YahooCurrencyAdapter</parameter>
    <parameter key="lexik_currency.doctrine.orm.entity_manager">default</parameter>
    <parameter key="lexik_currency.currencies.default">EUR</parameter>
    <parameter key="lexik_currency.currency_class">Lexik\Bundle\CurrencyBundle\Entity\Currency</parameter>
    <parameter key="lexik_currency.default_adapter">doctrine_currency_adapter</parameter>
    <parameter key="lexik_currency.ecb_url">http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml</parameter>
    <parameter key="lexik_currency.oer_url">http://openexchangerates.org/api/latest.json</parameter>
    <parameter key="lexik_currency.oer_app_id">null</parameter>
    <parameter key="lexik_currency.yahoo_url">https://query.yahooapis.com/v1/public/yql</parameter>
    <parameter key="lexik_currency.decimal_part.precision">0</parameter>
    <parameter key="lexik_currency.decimal_part.round_mode">up</parameter>
    <parameter key="lexik_currency.currencies.managed" type="collection">
      <parameter>EUR</parameter>
      <parameter>USD</parameter>
      <parameter>GBP</parameter>
      <parameter>CHF</parameter>
      <parameter>CAD</parameter>
      <parameter>JPY</parameter>
      <parameter>RUB</parameter>
      <parameter>AUD</parameter>
    </parameter>
    <parameter key="fos_message.message_meta_class">Cocorico\MessageBundle\Entity\MessageMetadata</parameter>
    <parameter key="fos_message.thread_meta_class">Cocorico\MessageBundle\Entity\ThreadMetadata</parameter>
    <parameter key="fos_message.message_class">Cocorico\MessageBundle\Entity\Message</parameter>
    <parameter key="fos_message.thread_class">Cocorico\MessageBundle\Entity\Thread</parameter>
    <parameter key="fos_message.new_thread_form.model">Cocorico\MessageBundle\FormModel\NewThreadMessage</parameter>
    <parameter key="fos_message.new_thread_form.name">message</parameter>
    <parameter key="fos_message.reply_form.model">FOS\MessageBundle\FormModel\ReplyMessage</parameter>
    <parameter key="fos_message.reply_form.name">message</parameter>
    <parameter key="knp_menu.factory.class">Knp\Menu\MenuFactory</parameter>
    <parameter key="knp_menu.factory_extension.routing.class">Knp\Menu\Integration\Symfony\RoutingExtension</parameter>
    <parameter key="knp_menu.helper.class">Knp\Menu\Twig\Helper</parameter>
    <parameter key="knp_menu.matcher.class">Knp\Menu\Matcher\Matcher</parameter>
    <parameter key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</parameter>
    <parameter key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</parameter>
    <parameter key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.listener.voters.class">Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener</parameter>
    <parameter key="knp_menu.voter.router.class">Knp\Menu\Matcher\Voter\RouteVoter</parameter>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">@KnpMenu/menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="white_october_breadcrumbs.options" type="collection">
      <parameter key="separator"></parameter>
      <parameter key="separatorClass">separator</parameter>
      <parameter key="listId">breadcrumbs</parameter>
      <parameter key="listClass">breadcrumb</parameter>
      <parameter key="itemClass"></parameter>
      <parameter key="linkRel"></parameter>
      <parameter key="translation_domain">cocorico_breadcrumbs</parameter>
      <parameter key="viewTemplate">WhiteOctoberBreadcrumbsBundle::breadcrumbs.html.twig</parameter>
      <parameter key="locale">null</parameter>
    </parameter>
    <parameter key="hwi_oauth.authentication.listener.oauth.class">HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener</parameter>
    <parameter key="hwi_oauth.authentication.provider.oauth.class">HWI\Bundle\OAuthBundle\Security\Core\Authentication\Provider\OAuthProvider</parameter>
    <parameter key="hwi_oauth.authentication.entry_point.oauth.class">HWI\Bundle\OAuthBundle\Security\Http\EntryPoint\OAuthEntryPoint</parameter>
    <parameter key="hwi_oauth.user.provider.class">HWI\Bundle\OAuthBundle\Security\Core\User\OAuthUserProvider</parameter>
    <parameter key="hwi_oauth.user.provider.entity.class">HWI\Bundle\OAuthBundle\Security\Core\User\EntityUserProvider</parameter>
    <parameter key="hwi_oauth.user.provider.fosub_bridge.class">HWI\Bundle\OAuthBundle\Security\Core\User\FOSUBUserProvider</parameter>
    <parameter key="hwi_oauth.registration.form.handler.fosub_bridge.class">HWI\Bundle\OAuthBundle\Form\FOSUBRegistrationFormHandler</parameter>
    <parameter key="hwi_oauth.resource_owner.oauth1.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GenericOAuth1ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.oauth2.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GenericOAuth2ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.amazon.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\AmazonResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.asana.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\AsanaResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.auth0.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\Auth0ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.azure.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\AzureResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.bitbucket.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BitbucketResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.bitbucket2.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\Bitbucket2ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.bitly.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BitlyResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.box.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BoxResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.bufferapp.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BufferAppResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.clever.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\CleverResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.dailymotion.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DailymotionResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.deviantart.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DeviantartResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.deezer.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DeezerResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.discogs.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DiscogsResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.disqus.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DisqusResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.dropbox.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DropboxResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.eve_online.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\EveOnlineResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.eventbrite.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\EventbriteResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.facebook.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FacebookResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.fiware.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FiwareResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.flickr.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FlickrResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.foursquare.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FoursquareResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.github.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GitHubResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.google.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GoogleResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.youtube.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\YoutubeResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.hubic.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\HubicResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.instagram.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\InstagramResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.jawbone.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\JawboneResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.jira.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\JiraResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.linkedin.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\LinkedinResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.mailru.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\MailRuResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.office365.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\Office365ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.paypal.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\PaypalResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.qq.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\QQResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.reddit.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\RedditResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.runkeeper.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\RunKeeperResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.salesforce.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SalesforceResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.sensio_connect.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SensioConnectResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.sina_weibo.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SinaWeiboResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.slack.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SlackResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.spotify.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SpotifyResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.soundcloud.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SoundcloudResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.stack_exchange.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\StackExchangeResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.stereomood.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\StereomoodResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.strava.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\StravaResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.toshl.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\ToshlResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.trakt.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TraktResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.trello.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TrelloResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.twitch.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TwitchResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.twitter.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TwitterResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.vkontakte.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\VkontakteResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.wechat.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\WechatResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.windows_live.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\WindowsLiveResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.wordpress.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\WordpressResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.wunderlist.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\WunderlistResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.xing.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\XingResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.yahoo.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\YahooResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.yandex.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\YandexResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.odnoklassniki.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\OdnoklassnikiResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.37signals.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\ThirtySevenSignalsResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.itembase.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\ItembaseResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_ownermap.class">HWI\Bundle\OAuthBundle\Security\Http\ResourceOwnerMap</parameter>
    <parameter key="hwi_oauth.security.oauth_utils.class">HWI\Bundle\OAuthBundle\Security\OAuthUtils</parameter>
    <parameter key="hwi_oauth.storage.session.class">HWI\Bundle\OAuthBundle\OAuth\RequestDataStorage\SessionStorage</parameter>
    <parameter key="hwi_oauth.templating.helper.oauth.class">HWI\Bundle\OAuthBundle\Templating\Helper\OAuthHelper</parameter>
    <parameter key="hwi_oauth.twig.extension.oauth.class">HWI\Bundle\OAuthBundle\Twig\Extension\OAuthExtension</parameter>
    <parameter key="hwi_oauth.http_client.class">Buzz\Client\Curl</parameter>
    <parameter key="hwi_oauth.firewall_names" type="collection">
      <parameter>main</parameter>
    </parameter>
    <parameter key="hwi_oauth.target_path_parameter">null</parameter>
    <parameter key="hwi_oauth.use_referer">false</parameter>
    <parameter key="hwi_oauth.failed_auth_path">hwi_oauth_connect</parameter>
    <parameter key="hwi_oauth.resource_owners" type="collection">
      <parameter key="facebook">facebook</parameter>
    </parameter>
    <parameter key="hwi_oauth.connect">true</parameter>
    <parameter key="hwi_oauth.fosub_enabled">false</parameter>
    <parameter key="hwi_oauth.connect.confirmation">true</parameter>
    <parameter key="hwi_oauth.templating.engine">twig</parameter>
    <parameter key="fm_elfinder.loader">FM\ElfinderBundle\Loader\ElFinderLoader</parameter>
    <parameter key="fm_elfinder.configurator">FM\ElfinderBundle\Configuration\ElFinderConfigurationReader</parameter>
    <parameter key="elfinder.form.type.class">FM\ElfinderBundle\Form\Type\ElFinderType</parameter>
    <parameter key="fm_elfinder" type="collection">
      <parameter key="instances" type="collection">
        <parameter key="ckeditor" type="collection">
          <parameter key="locale">fr</parameter>
          <parameter key="editor">ckeditor</parameter>
          <parameter key="fullscreen">true</parameter>
          <parameter key="theme">smoothness</parameter>
          <parameter key="include_assets">true</parameter>
          <parameter key="connector" type="collection">
            <parameter key="debug">false</parameter>
            <parameter key="roots" type="collection">
              <parameter key="uploads" type="collection">
                <parameter key="show_hidden">false</parameter>
                <parameter key="driver">LocalFileSystem</parameter>
                <parameter key="path">uploads</parameter>
                <parameter key="upload_allow" type="collection">
                  <parameter>image/png</parameter>
                  <parameter>image/jpg</parameter>
                  <parameter>image/jpeg</parameter>
                  <parameter>application/pdf</parameter>
                  <parameter>image/gif</parameter>
                </parameter>
                <parameter key="upload_deny" type="collection">
                  <parameter>all</parameter>
                </parameter>
                <parameter key="upload_max_size">12M</parameter>
                <parameter key="volume_id">0</parameter>
                <parameter key="start_path"></parameter>
                <parameter key="url"></parameter>
                <parameter key="alias"></parameter>
                <parameter key="mime_detect">auto</parameter>
                <parameter key="mimefile"></parameter>
                <parameter key="img_lib">auto</parameter>
                <parameter key="tmb_path">.tmb</parameter>
                <parameter key="tmb_path_mode">511</parameter>
                <parameter key="tmb_url"></parameter>
                <parameter key="tmb_size">48</parameter>
                <parameter key="tmb_crop">true</parameter>
                <parameter key="tmb_bg_color">#ffffff</parameter>
                <parameter key="copy_overwrite">true</parameter>
                <parameter key="copy_join">true</parameter>
                <parameter key="copy_from">true</parameter>
                <parameter key="copy_to">true</parameter>
                <parameter key="upload_overwrite">true</parameter>
                <parameter key="fileMode">420</parameter>
                <parameter key="upload_order" type="collection">
                  <parameter>deny</parameter>
                  <parameter>allow</parameter>
                </parameter>
                <parameter key="defaults" type="collection">
                  <parameter key="read">true</parameter>
                  <parameter key="write">true</parameter>
                </parameter>
                <parameter key="attributes" type="collection"/>
                <parameter key="accepted_name">/^\w[\w\s\.\%\-]*$/u</parameter>
                <parameter key="disabled_commands" type="collection"/>
                <parameter key="tree_deep">0</parameter>
                <parameter key="check_subfolders">true</parameter>
                <parameter key="separator">/</parameter>
                <parameter key="date_format">j M Y H:i</parameter>
                <parameter key="time_format">H:i</parameter>
                <parameter key="archive_mimes" type="collection"/>
                <parameter key="archivers" type="collection">
                  <parameter key="enabled">false</parameter>
                  <parameter key="create" type="collection"/>
                  <parameter key="extract" type="collection"/>
                </parameter>
                <parameter key="flysystem" type="collection">
                  <parameter key="enabled">false</parameter>
                  <parameter key="type"></parameter>
                  <parameter key="adapter_service"></parameter>
                </parameter>
                <parameter key="glide_url"></parameter>
                <parameter key="glide_key"></parameter>
                <parameter key="plugins" type="collection"/>
                <parameter key="driver_options" type="collection"/>
                <parameter key="dropbox_settings" type="collection">
                  <parameter key="enabled">false</parameter>
                </parameter>
                <parameter key="ftp_settings" type="collection">
                  <parameter key="enabled">false</parameter>
                </parameter>
                <parameter key="s3_settings" type="collection">
                  <parameter key="enabled">false</parameter>
                </parameter>
              </parameter>
            </parameter>
            <parameter key="binds" type="collection"/>
            <parameter key="plugins" type="collection"/>
          </parameter>
          <parameter key="cors_support">false</parameter>
          <parameter key="editor_template">null</parameter>
          <parameter key="tinymce_popup_path"></parameter>
          <parameter key="relative_path">true</parameter>
          <parameter key="path_prefix">/</parameter>
          <parameter key="visible_mime_types" type="collection"/>
        </parameter>
      </parameter>
      <parameter key="configuration_provider">fm_elfinder.configurator.default</parameter>
      <parameter key="assets_path">/assets</parameter>
      <parameter key="loader">fm_elfinder.loader.default</parameter>
    </parameter>
    <parameter key="simplethings.entityaudit.audited_entities" type="collection">
      <parameter>CocoricoConfigBundle\Entity\Parameter</parameter>
      <parameter>Cocorico\ConfigBundle\Entity\Parameter</parameter>
    </parameter>
    <parameter key="simplethings.entityaudit.global_ignore_columns" type="collection"/>
    <parameter key="simplethings.entityaudit.table_prefix"></parameter>
    <parameter key="simplethings.entityaudit.table_suffix">_audit</parameter>
    <parameter key="simplethings.entityaudit.revision_field_name">rev</parameter>
    <parameter key="simplethings.entityaudit.revision_type_field_name">revtype</parameter>
    <parameter key="simplethings.entityaudit.revision_table_name">revisions</parameter>
    <parameter key="simplethings.entityaudit.revision_id_field_type">integer</parameter>
    <parameter key="cocorico_user.account_created_user.email.template">CocoricoUserBundle:Mails/User:account_created_user.txt.twig</parameter>
    <parameter key="cocorico_user.forgot_password_user.email.template">CocoricoUserBundle:Mails/User:forgot_password_user.txt.twig</parameter>
    <parameter key="cocorico_user.account_creation_confirmation_user.email.template">CocoricoUserBundle:Mails/User:account_creation_confirmation_user.txt.twig</parameter>
    <parameter key="cocorico_user.profile_about_me.form.class">Cocorico\UserBundle\Form\Type\ProfileAboutMeFormType</parameter>
    <parameter key="cocorico_message.new_thread_message_user.email.template">CocoricoMessageBundle:Mails:new_thread_message_user.txt.twig</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="deploy.config" type="collection">
      <parameter key="prod" type="collection">
        <parameter key="rsync_options">-azC --force --delete --progress -h --checksum</parameter>
        <parameter key="host">185.62.185.32</parameter>
        <parameter key="dir">/var/www/demo.costocking.com</parameter>
        <parameter key="user">debian</parameter>
        <parameter key="port">22</parameter>
        <parameter key="timeout">120</parameter>
      </parameter>
    </parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="doctrine_mongodb.odm.data_collector.pretty" type="collection">
        <parameter>mongodb</parameter>
        <parameter>@DoctrineMongoDB/Collector/mongodb.html.twig</parameter>
      </parameter>
      <parameter key="sonata.block.data_collector" type="collection">
        <parameter>block</parameter>
        <parameter>SonataBlockBundle:Profiler:block.html.twig</parameter>
      </parameter>
      <parameter key="Bazinga\GeocoderBundle\DataCollector\GeocoderDataCollector" type="collection">
        <parameter>geocoder</parameter>
        <parameter>@BazingaGeocoder/Collector/geocoder.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_aboutcommand">console.command.about</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_assetsinstallcommand">console.command.assets_install</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cacheclearcommand">console.command.cache_clear</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cachepoolclearcommand">console.command.cache_pool_clear</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cachepoolprunecommand">console.command.cache_pool_prune</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cachewarmupcommand">console.command.cache_warmup</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_configdebugcommand">console.command.config_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_configdumpreferencecommand">console.command.config_dump_reference</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_containerdebugcommand">console.command.container_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_debugautowiringcommand">console.command.debug_autowiring</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_eventdispatcherdebugcommand">console.command.event_dispatcher_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_routerdebugcommand">console.command.router_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_routermatchcommand">console.command.router_match</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_translationdebugcommand">console.command.translation_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_translationupdatecommand">console.command.translation_update</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_xlifflintcommand">console.command.xliff_lint</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_yamllintcommand">console.command.yaml_lint</parameter>
      <parameter key="console.command.symfony_component_form_command_debugcommand">console.command.form_debug</parameter>
      <parameter key="console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand">security.command.user_password_encoder</parameter>
      <parameter key="console.command.symfony_bridge_twig_command_debugcommand">twig.command.debug</parameter>
      <parameter key="console.command.symfony_bundle_twigbundle_command_lintcommand">twig.command.lint</parameter>
      <parameter key="console.command.symfony_bundle_swiftmailerbundle_command_debugcommand">swiftmailer.command.debug</parameter>
      <parameter key="console.command.symfony_bundle_swiftmailerbundle_command_newemailcommand">swiftmailer.command.new_email</parameter>
      <parameter key="console.command.symfony_bundle_swiftmailerbundle_command_sendemailcommand">swiftmailer.command.send_email</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_containscommand">console.command.doctrine_bundle_doctrinecachebundle_command_containscommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_deletecommand">console.command.doctrine_bundle_doctrinecachebundle_command_deletecommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_flushcommand">console.command.doctrine_bundle_doctrinecachebundle_command_flushcommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_statscommand">console.command.doctrine_bundle_doctrinecachebundle_command_statscommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_createdatabasedoctrinecommand">doctrine.database_create_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_dropdatabasedoctrinecommand">doctrine.database_drop_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_generateentitiesdoctrinecommand">doctrine.generate_entities_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_importmappingdoctrinecommand">doctrine.mapping_import_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearmetadatacachedoctrinecommand">doctrine.cache_clear_metadata_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearquerycachedoctrinecommand">doctrine.cache_clear_query_cache_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearresultcachedoctrinecommand">doctrine.cache_clear_result_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_collectionregiondoctrinecommand">doctrine.cache_collection_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_convertmappingdoctrinecommand">doctrine.mapping_convert_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_createschemadoctrinecommand">doctrine.schema_create_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_dropschemadoctrinecommand">doctrine.schema_drop_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_ensureproductionsettingsdoctrinecommand">doctrine.ensure_production_settings_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_entityregioncachedoctrinecommand">doctrine.clear_entity_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_importdoctrinecommand">doctrine.database_import_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_infodoctrinecommand">doctrine.mapping_info_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_queryregioncachedoctrinecommand">doctrine.clear_query_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_rundqldoctrinecommand">doctrine.query_dql_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_runsqldoctrinecommand">doctrine.query_sql_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_updateschemadoctrinecommand">doctrine.schema_update_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_validateschemacommand">doctrine.schema_validate_command</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsdiffdoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsdiffdoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsexecutedoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsexecutedoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsgeneratedoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsgeneratedoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationslatestdoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationslatestdoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsmigratedoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsmigratedoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsstatusdoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsstatusdoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsversiondoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsversiondoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_clearmetadatacachedoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_clearmetadatacachedoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_createschemadoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_createschemadoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_dropschemadoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_dropschemadoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_generatedocumentsdoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_generatedocumentsdoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_generatehydratorsdoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_generatehydratorsdoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_generateproxiesdoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_generateproxiesdoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_infodoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_infodoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_loaddatafixturesdoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_loaddatafixturesdoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_querydoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_querydoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_sharddoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_sharddoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_tailcursordoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_tailcursordoctrineodmcommand</parameter>
      <parameter key="console.command.doctrine_bundle_mongodbbundle_command_updateschemadoctrineodmcommand">console.command.doctrine_bundle_mongodbbundle_command_updateschemadoctrineodmcommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_createclasscachecommand">Sonata\AdminBundle\Command\CreateClassCacheCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_explainadmincommand">Sonata\AdminBundle\Command\ExplainAdminCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_generateadmincommand">Sonata\AdminBundle\Command\GenerateAdminCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_generateobjectaclcommand">Sonata\AdminBundle\Command\GenerateObjectAclCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_listadmincommand">Sonata\AdminBundle\Command\ListAdminCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_setupaclcommand">Sonata\AdminBundle\Command\SetupAclCommand</parameter>
      <parameter key="console.command.sonata_corebundle_command_sonatadumpdoctrinemetacommand">console.command.sonata_corebundle_command_sonatadumpdoctrinemetacommand</parameter>
      <parameter key="console.command.sonata_corebundle_command_sonatalistformmappingcommand">console.command.sonata_corebundle_command_sonatalistformmappingcommand</parameter>
      <parameter key="console.command.sonata_blockbundle_command_debugblockscommand">console.command.sonata_blockbundle_command_debugblockscommand</parameter>
      <parameter key="console.command.ivory_ckeditorbundle_command_ckeditorinstallercommand">console.command.ivory_ckeditorbundle_command_ckeditorinstallercommand</parameter>
      <parameter key="console.command.doctrine_bundle_fixturesbundle_command_loaddatafixturesdoctrinecommand">doctrine.fixtures_load_command</parameter>
      <parameter key="console.command.sensiolabs_security_command_securitycheckercommand">console.command.sensiolabs_security_command_securitycheckercommand</parameter>
    </parameter>
    <parameter key="console.lazy_command.ids" type="collection">
      <parameter key="console.command.about">true</parameter>
      <parameter key="console.command.assets_install">true</parameter>
      <parameter key="console.command.cache_clear">true</parameter>
      <parameter key="console.command.cache_pool_clear">true</parameter>
      <parameter key="console.command.cache_pool_prune">true</parameter>
      <parameter key="console.command.cache_warmup">true</parameter>
      <parameter key="console.command.config_debug">true</parameter>
      <parameter key="console.command.config_dump_reference">true</parameter>
      <parameter key="console.command.container_debug">true</parameter>
      <parameter key="console.command.debug_autowiring">true</parameter>
      <parameter key="console.command.event_dispatcher_debug">true</parameter>
      <parameter key="console.command.router_debug">true</parameter>
      <parameter key="console.command.router_match">true</parameter>
      <parameter key="console.command.translation_debug">true</parameter>
      <parameter key="console.command.translation_update">true</parameter>
      <parameter key="console.command.xliff_lint">true</parameter>
      <parameter key="console.command.yaml_lint">true</parameter>
      <parameter key="console.command.form_debug">true</parameter>
      <parameter key="security.command.user_password_encoder">true</parameter>
      <parameter key="twig.command.debug">true</parameter>
      <parameter key="twig.command.lint">true</parameter>
      <parameter key="swiftmailer.command.debug">true</parameter>
      <parameter key="swiftmailer.command.new_email">true</parameter>
      <parameter key="swiftmailer.command.send_email">true</parameter>
      <parameter key="doctrine.database_create_command">true</parameter>
      <parameter key="doctrine.database_drop_command">true</parameter>
      <parameter key="doctrine.generate_entities_command">true</parameter>
      <parameter key="doctrine.mapping_import_command">true</parameter>
      <parameter key="doctrine.cache_clear_metadata_command">true</parameter>
      <parameter key="doctrine.cache_clear_query_cache_command">true</parameter>
      <parameter key="doctrine.cache_clear_result_command">true</parameter>
      <parameter key="doctrine.cache_collection_region_command">true</parameter>
      <parameter key="doctrine.mapping_convert_command">true</parameter>
      <parameter key="doctrine.schema_create_command">true</parameter>
      <parameter key="doctrine.schema_drop_command">true</parameter>
      <parameter key="doctrine.ensure_production_settings_command">true</parameter>
      <parameter key="doctrine.clear_entity_region_command">true</parameter>
      <parameter key="doctrine.database_import_command">true</parameter>
      <parameter key="doctrine.mapping_info_command">true</parameter>
      <parameter key="doctrine.clear_query_region_command">true</parameter>
      <parameter key="doctrine.query_dql_command">true</parameter>
      <parameter key="doctrine.query_sql_command">true</parameter>
      <parameter key="doctrine.schema_update_command">true</parameter>
      <parameter key="doctrine.schema_validate_command">true</parameter>
      <parameter key="doctrine.fixtures_load_command">true</parameter>
    </parameter>
    <parameter key="sonata.core.form.types" type="collection">
      <parameter>cocorico.form.type.listing_new</parameter>
      <parameter>cocorico.form.type.listing_edit</parameter>
      <parameter>cocorico.form.type.listing_edit_status</parameter>
      <parameter>cocorico.form.type.listing_edit_description</parameter>
      <parameter>cocorico.form.type.listing_edit_price</parameter>
      <parameter>cocorico.form.type.listing_edit_images</parameter>
      <parameter>cocorico.form.type.listing_edit_location</parameter>
      <parameter>cocorico.form.type.listing_edit_characteristic</parameter>
      <parameter>cocorico.form.type.listing_edit_availabilities</parameter>
      <parameter>cocorico.form.type.listing_edit_availabilities_status</parameter>
      <parameter>cocorico.form.type.listing_edit_availability_status</parameter>
      <parameter>cocorico.form.type.listing_edit_availabilities_prices</parameter>
      <parameter>cocorico.form.type.listing_edit_availability_price</parameter>
      <parameter>cocorico.form.type.listing_new_categories</parameter>
      <parameter>cocorico.form.type.listing_edit_categories</parameter>
      <parameter>cocorico.form.type.listing_edit_categories_ajax</parameter>
      <parameter>cocorico.form.type.country_filtered</parameter>
      <parameter>cocorico.form.type.language_filtered</parameter>
      <parameter>cocorico.form.type.price</parameter>
      <parameter>cocorico.form.type.price_range</parameter>
      <parameter>cocorico.form.type.entity_hidden</parameter>
      <parameter>cocorico.form.type.listing_category</parameter>
      <parameter>cocorico.form.type.listing_search_result</parameter>
      <parameter>cocorico.form.type.listing_search</parameter>
      <parameter>cocorico.form.type.listing_search_home</parameter>
      <parameter>cocorico.form.type.listing_characteristic</parameter>
      <parameter>cocorico.form.type.listing_listing_characteristic</parameter>
      <parameter>cocorico.form.type.listing_edit_duration</parameter>
      <parameter>cocorico.form.type.booking_new</parameter>
      <parameter>cocorico.form.type.booking_edit</parameter>
      <parameter>cocorico.form.type.booking_price</parameter>
      <parameter>cocorico.form.type.booking_user_address</parameter>
      <parameter>cocorico.form.booking.status_filter</parameter>
      <parameter>cocorico_user.form.type.login</parameter>
      <parameter>cocorico_user.form.type.register</parameter>
      <parameter>cocorico_user.form.type.user_address</parameter>
      <parameter>form.type.form</parameter>
      <parameter>form.type.choice</parameter>
      <parameter>form.type.entity</parameter>
      <parameter>fos_user.username_form_type</parameter>
      <parameter>fos_user.profile.form.type</parameter>
      <parameter>fos_user.registration.form.type</parameter>
      <parameter>fos_user.change_password.form.type</parameter>
      <parameter>fos_user.resetting.form.type</parameter>
      <parameter>fos_user.group.form.type</parameter>
      <parameter>form.type.mongodb_document</parameter>
      <parameter>sonata.admin.form.type.admin</parameter>
      <parameter>sonata.admin.form.type.model_choice</parameter>
      <parameter>sonata.admin.form.type.model_list</parameter>
      <parameter>sonata.admin.form.type.model_reference</parameter>
      <parameter>sonata.admin.form.type.model_hidden</parameter>
      <parameter>sonata.admin.form.type.model_autocomplete</parameter>
      <parameter>sonata.admin.form.type.collection</parameter>
      <parameter>sonata.admin.doctrine_orm.form.type.choice_field_mask</parameter>
      <parameter>sonata.admin.form.filter.type.number</parameter>
      <parameter>sonata.admin.form.filter.type.choice</parameter>
      <parameter>sonata.admin.form.filter.type.default</parameter>
      <parameter>sonata.admin.form.filter.type.date</parameter>
      <parameter>sonata.admin.form.filter.type.daterange</parameter>
      <parameter>sonata.admin.form.filter.type.datetime</parameter>
      <parameter>sonata.admin.form.filter.type.datetime_range</parameter>
      <parameter>sonata.core.form.type.array</parameter>
      <parameter>sonata.core.form.type.boolean</parameter>
      <parameter>sonata.core.form.type.collection</parameter>
      <parameter>sonata.core.form.type.translatable_choice</parameter>
      <parameter>sonata.core.form.type.date_range</parameter>
      <parameter>sonata.core.form.type.datetime_range</parameter>
      <parameter>sonata.core.form.type.date_picker</parameter>
      <parameter>sonata.core.form.type.datetime_picker</parameter>
      <parameter>sonata.core.form.type.date_range_picker</parameter>
      <parameter>sonata.core.form.type.datetime_range_picker</parameter>
      <parameter>sonata.core.form.type.equal</parameter>
      <parameter>sonata.core.form.type.color_selector</parameter>
      <parameter>sonata.core.form.type.color</parameter>
      <parameter>sonata.block.form.type.block</parameter>
      <parameter>sonata.block.form.type.container_template</parameter>
      <parameter>sonata.user.form.type.security_roles</parameter>
      <parameter>sonata.user.form.gender_list</parameter>
      <parameter>a2lix_translation_form.default.type.translations</parameter>
      <parameter>a2lix_translation_form.default.type.translationsFields</parameter>
      <parameter>a2lix_translation_form.default.type.translationsForms</parameter>
      <parameter>a2lix_translation_form.default.type.translationsLocalesSelector</parameter>
      <parameter>a2lix_translation_form.default.type.translatedEntity</parameter>
      <parameter>liip_imagine.form.type.image</parameter>
      <parameter>fos_message.recipients_selector</parameter>
      <parameter>ivory_ck_editor.form.type</parameter>
      <parameter>fm_elfinder.form.type</parameter>
      <parameter>cocorico_geo.form.type.geocoding</parameter>
      <parameter>cocorico_user.profile_about_me.form.type</parameter>
      <parameter>cocorico_message.new_thread.form.type</parameter>
      <parameter>cocorico_message.reply.form.type</parameter>
      <parameter>cocorico_contact.form.type.contact_new</parameter>
      <parameter>cocorico.star_rating.form.type</parameter>
      <parameter>cocorico.form.type.review_new</parameter>
      <parameter>cocorico_time.form.type.date_range</parameter>
      <parameter>cocorico_time.form.type.date_hidden</parameter>
      <parameter>cocorico_time.form.type.time_range</parameter>
      <parameter>cocorico_time.form.type.weekdays</parameter>
    </parameter>
    <parameter key="sonata.core.form.type_extensions" type="collection">
      <parameter>cocorico.image_type_extension</parameter>
      <parameter>form.type_extension.form.http_foundation</parameter>
      <parameter>form.type_extension.form.validator</parameter>
      <parameter>form.type_extension.repeated.validator</parameter>
      <parameter>form.type_extension.submit.validator</parameter>
      <parameter>form.type_extension.upload.validator</parameter>
      <parameter>form.type_extension.csrf</parameter>
      <parameter>form.type_extension.form.data_collector</parameter>
      <parameter>sonata.admin.form.extension.field</parameter>
      <parameter>sonata.admin.form.extension.field.mopa</parameter>
      <parameter>sonata.admin.form.extension.choice</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="Cocorico\CoreBundle\DataFixtures\ORM\CurrencyFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\CurrencyFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Cocorico\CoreBundle\DataFixtures\ORM\ListingCategoryFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCategoryFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicGroupFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicGroupFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicTypeFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicTypeFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicValueFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicValueFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Cocorico\CoreBundle\DataFixtures\ORM\ListingFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Cocorico\CoreBundle\DataFixtures\ORM\PageFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\PageFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Cocorico\CoreBundle\DataFixtures\ORM\UserFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\UserFixtures" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="cocorico.listing_search.manager" class="Cocorico\CoreBundle\Model\Manager\ListingSearchManager" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="doctrine_mongodb.odm.default_document_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection">
        <argument key="parameters" type="collection">
          <argument key="cocorico_booking_end_day_included">true</argument>
          <argument key="cocorico_time_unit">1440</argument>
          <argument key="cocorico_listing_search_max_per_page">10</argument>
          <argument key="cocorico_listing_availability_status">1</argument>
        </argument>
      </argument>
    </service>
    <service id="cocorico.listing.manager" class="Cocorico\CoreBundle\Model\Manager\ListingManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.token_storage"/>
      <argument>1</argument>
      <argument>10</argument>
      <argument type="service" id="cocorico.mailer.twig_swift"/>
    </service>
    <service id="cocorico.booking.manager" class="Cocorico\CoreBundle\Model\Manager\BookingManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="doctrine_mongodb.odm.default_document_manager"/>
      <argument type="service" id="cocorico.listing_availability.manager"/>
      <argument type="service" id="cocorico.mailer.twig_swift"/>
      <argument>null</argument>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection">
        <argument key="parameters" type="collection">
          <argument key="cocorico_fee_as_asker">0.1</argument>
          <argument key="cocorico_fee_as_offerer">0.05</argument>
          <argument key="cocorico_time_unit">1440</argument>
          <argument key="cocorico_time_max">8</argument>
          <argument key="cocorico_time_hours_available">%cocorico.time_hours_available%</argument>
          <argument key="cocorico_booking_expiration_delay">2880</argument>
          <argument key="cocorico_booking_acceptation_delay">240</argument>
          <argument key="cocorico_booking_allow_single_day">true</argument>
          <argument key="cocorico_booking_end_day_included">true</argument>
          <argument key="cocorico_booking_min_start_delay">0</argument>
          <argument key="cocorico_booking_min_start_time_delay">720</argument>
          <argument key="cocorico_booking_price_min">500</argument>
          <argument key="cocorico_dashboard_max_per_page">10</argument>
          <argument key="cocorico_listing_availability_status">1</argument>
          <argument key="cocorico_vat">0.2</argument>
          <argument key="cocorico_include_vat">false</argument>
          <argument key="cocorico_bundles">%kernel.bundles%</argument>
        </argument>
      </argument>
    </service>
    <service id="cocorico.booking_bank_wire.manager" class="Cocorico\CoreBundle\Model\Manager\BookingBankWireManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>false</argument>
      <argument type="service" id="cocorico.mailer.twig_swift"/>
      <argument>10</argument>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>%kernel.bundles%</argument>
    </service>
    <service id="cocorico.booking_payin_refund.manager" class="Cocorico\CoreBundle\Model\Manager\BookingPayinRefundManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>%cocorico.booking.cancelation_policy%</argument>
      <argument type="service" id="cocorico.mailer.twig_swift"/>
      <argument>10</argument>
      <argument>%kernel.bundles%</argument>
    </service>
    <service id="cocorico.language.manager" class="Cocorico\CoreBundle\Model\Manager\LanguageManager" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument>%cocorico.locales%</argument>
    </service>
    <service id="cocorico.listing_availability.manager" class="Cocorico\CoreBundle\Model\Manager\ListingAvailabilityManager">
      <argument type="service" id="doctrine_mongodb.odm.default_document_manager"/>
      <argument type="service" id="cocorico.listing_availability_time.manager"/>
      <argument>1440</argument>
      <argument>1</argument>
      <argument>true</argument>
    </service>
    <service id="cocorico.listing_availability_time.manager" class="Cocorico\CoreBundle\Model\Manager\ListingAvailabilityTimeManager">
      <argument type="service" id="doctrine_mongodb.odm.default_document_manager"/>
      <argument>1440</argument>
      <argument>1</argument>
    </service>
    <service id="cocorico.form.type.listing_new" class="Cocorico\CoreBundle\Form\Type\Frontend\ListingNewType">
      <tag name="form.type"/>
      <argument type="service" id="request_stack"/>
      <argument>%cocorico.locales%</argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico.form.type.listing_edit" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditType">
      <tag name="form.type"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="request_stack"/>
      <argument>%cocorico.locales%</argument>
      <argument type="service" id="cocorico.listing.manager"/>
      <argument>1440</argument>
    </service>
    <service id="cocorico.form.type.listing_edit_status" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditStatusType">
      <tag name="form.type"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="request_stack"/>
      <argument>%cocorico.locales%</argument>
      <argument type="service" id="cocorico.listing.manager"/>
      <argument>1440</argument>
    </service>
    <service id="cocorico.form.type.listing_edit_description" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditDescriptionType">
      <tag name="form.type"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="request_stack"/>
      <argument>%cocorico.locales%</argument>
      <argument type="service" id="cocorico.listing.manager"/>
      <argument>1440</argument>
    </service>
    <service id="cocorico.form.type.listing_edit_price" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditPriceType">
      <tag name="form.type"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico.form.type.listing_edit_images" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditImagesType">
      <tag name="form.type"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="request_stack"/>
      <argument>%cocorico.locales%</argument>
      <argument type="service" id="cocorico.listing.manager"/>
      <argument>1440</argument>
    </service>
    <service id="cocorico.form.type.listing_edit_location" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditLocationType">
      <tag name="form.type"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="request_stack"/>
      <argument>%cocorico.locales%</argument>
      <argument type="service" id="cocorico.listing.manager"/>
      <argument>1440</argument>
    </service>
    <service id="cocorico.form.type.listing_edit_characteristic" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditCharacteristicType">
      <tag name="form.type"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="request_stack"/>
      <argument>%cocorico.locales%</argument>
      <argument type="service" id="cocorico.listing.manager"/>
      <argument>1440</argument>
    </service>
    <service id="cocorico.form.type.listing_edit_availabilities" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilitiesType">
      <tag name="form.type"/>
      <argument>1440</argument>
      <argument>360</argument>
    </service>
    <service id="cocorico.form.type.listing_edit_availabilities_status" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilitiesStatusType">
      <tag name="form.type"/>
      <argument>1440</argument>
      <argument>360</argument>
    </service>
    <service id="cocorico.form.type.listing_edit_availability_status" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilityStatusType">
      <tag name="form.type"/>
    </service>
    <service id="cocorico.form.type.listing_edit_availabilities_prices" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilitiesPricesType">
      <tag name="form.type"/>
      <argument>1440</argument>
      <argument>360</argument>
    </service>
    <service id="cocorico.form.type.listing_edit_availability_price" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilityPriceType">
      <tag name="form.type"/>
    </service>
    <service id="cocorico.form.type.listing_new_categories" class="Cocorico\CoreBundle\Form\Type\Frontend\ListingNewCategoriesType">
      <tag name="form.type"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico.form.type.listing_edit_categories" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditCategoriesType">
      <tag name="form.type"/>
    </service>
    <service id="cocorico.form.type.listing_edit_categories_ajax" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditCategoriesAjaxType">
      <tag name="form.type"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico.form.type.country_filtered" class="Cocorico\CoreBundle\Form\Type\CountryFilteredType">
      <tag name="form.type"/>
      <argument type="collection"/>
      <argument>%cocorico.listing_favorite_countries%</argument>
    </service>
    <service id="cocorico.form.type.language_filtered" class="Cocorico\CoreBundle\Form\Type\LanguageFilteredType">
      <tag name="form.type"/>
      <argument>%cocorico.locales%</argument>
    </service>
    <service id="cocorico.form.type.price" class="Cocorico\CoreBundle\Form\Type\PriceType">
      <tag name="form.type"/>
      <argument>EUR</argument>
      <argument>2</argument>
      <argument type="service" id="lexik_currency.converter"/>
    </service>
    <service id="cocorico.form.type.price_range" class="Cocorico\CoreBundle\Form\Type\PriceRangeType">
      <tag name="form.type"/>
      <argument type="service" id="session"/>
      <argument>EUR</argument>
    </service>
    <service id="cocorico.form.type.entity_hidden" class="Cocorico\CoreBundle\Form\Type\EntityHiddenType">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="cocorico.form.type.listing_category" class="Cocorico\CoreBundle\Form\Type\ListingCategoryType">
      <tag name="form.type"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="cocorico.form.type.listing_search_result" class="Cocorico\CoreBundle\Form\Type\Frontend\ListingSearchResultType">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection">
        <argument key="parameters" type="collection">
          <argument key="cocorico_time_unit">1440</argument>
          <argument key="cocorico_time_unit_flexibility">0</argument>
          <argument key="cocorico_days_display_mode">range</argument>
          <argument key="cocorico_times_display_mode">duration</argument>
          <argument key="cocorico_booking_allow_single_day">true</argument>
          <argument key="cocorico_booking_end_day_included">true</argument>
          <argument key="cocorico_booking_min_start_delay">0</argument>
        </argument>
      </argument>
    </service>
    <service id="cocorico.form.type.listing_search" class="Cocorico\CoreBundle\Form\Type\Frontend\ListingSearchType">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection">
        <argument key="parameters" type="collection">
          <argument key="cocorico_time_unit">1440</argument>
          <argument key="cocorico_time_unit_flexibility">0</argument>
          <argument key="cocorico_days_display_mode">range</argument>
          <argument key="cocorico_times_display_mode">duration</argument>
          <argument key="cocorico_booking_allow_single_day">true</argument>
          <argument key="cocorico_booking_end_day_included">true</argument>
          <argument key="cocorico_booking_min_start_delay">0</argument>
        </argument>
      </argument>
    </service>
    <service id="cocorico.form.type.listing_search_home" class="Cocorico\CoreBundle\Form\Type\Frontend\ListingSearchHomeType">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection">
        <argument key="parameters" type="collection">
          <argument key="cocorico_time_unit">1440</argument>
          <argument key="cocorico_time_unit_flexibility">0</argument>
          <argument key="cocorico_days_display_mode">range</argument>
          <argument key="cocorico_times_display_mode">duration</argument>
          <argument key="cocorico_booking_allow_single_day">true</argument>
          <argument key="cocorico_booking_end_day_included">true</argument>
          <argument key="cocorico_booking_min_start_delay">0</argument>
        </argument>
      </argument>
    </service>
    <service id="cocorico.form.type.listing_characteristic" class="Cocorico\CoreBundle\Form\Type\ListingCharacteristicType">
      <tag name="form.type"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="cocorico.form.type.listing_listing_characteristic" class="Cocorico\CoreBundle\Form\Type\ListingListingCharacteristicType">
      <tag name="form.type"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="cocorico.form.type.listing_edit_duration" class="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditDurationType">
      <tag name="form.type"/>
    </service>
    <service id="cocorico.form.type.booking_new" class="Cocorico\CoreBundle\Form\Type\Frontend\BookingNewType">
      <tag name="form.type"/>
      <argument type="service" id="cocorico.booking.manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection">
        <argument key="parameters" type="collection">
          <argument key="cocorico_booking_allow_single_day">true</argument>
          <argument key="cocorico_booking_end_day_included">true</argument>
          <argument key="cocorico_booking_min_start_delay">0</argument>
          <argument key="cocorico_booking_min_start_time_delay">720</argument>
          <argument key="cocorico_currency">EUR</argument>
          <argument key="cocorico_user_address_delivery">true</argument>
        </argument>
      </argument>
    </service>
    <service id="cocorico.form.type.booking_edit" class="Cocorico\CoreBundle\Form\Type\Dashboard\BookingEditType">
      <tag name="form.type"/>
    </service>
    <service id="cocorico.form.type.booking_price" class="Cocorico\CoreBundle\Form\Type\Frontend\BookingPriceType">
      <tag name="form.type"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument>range</argument>
      <argument>duration</argument>
      <argument>1440</argument>
    </service>
    <service id="cocorico.form.type.booking_user_address" class="Cocorico\CoreBundle\Form\Type\Frontend\BookingUserAddressFormType">
      <tag name="form.type"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="cocorico.image_type_extension" class="Cocorico\CoreBundle\Form\Extension\ImageTypeExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FileType"/>
    </service>
    <service id="cocorico.form.booking.status_filter" class="Cocorico\CoreBundle\Form\Type\Dashboard\BookingStatusFilterType">
      <tag name="form.type"/>
    </service>
    <service id="cocorico.listing_image_upload_listener" class="Cocorico\CoreBundle\Listener\ListingImageUploadListener">
      <tag name="kernel.event_listener" event="oneup_uploader.post_upload" method="onUpload"/>
      <argument type="service" id="cocorico.listing.manager"/>
    </service>
    <service id="cocorico.listing_image_upload_validation_listener" class="Cocorico\CoreBundle\Listener\ListingImageUploadValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
      <argument>12</argument>
    </service>
    <service id="cocorico.ajax.authentication_listener" class="Cocorico\CoreBundle\Listener\AjaxAuthenticationListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onCoreException" priority="1000"/>
    </service>
    <service id="cocorico.authentication_success_listener" class="Cocorico\CoreBundle\Authentication\Handler\LoginSuccessHandler">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection">
        <argument key="target_path_parameter">redirect_to</argument>
        <argument key="login_path">cocorico_user_login</argument>
        <argument key="use_referer">true</argument>
      </argument>
    </service>
    <service id="cocorico.booking_user_address_entity_listener" class="Cocorico\CoreBundle\Listener\BookingUserAddressEntityListener">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico.listing_param_converter" class="Cocorico\CoreBundle\Request\ListingParamConverter">
      <tag name="request.param_converter" priority="0" converter="listing"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico.listing_availability_param_converter" class="Cocorico\CoreBundle\Request\ListingAvailabilityParamConverter">
      <tag name="request.param_converter" priority="-1" converter="listing_availability"/>
      <argument type="service" id="doctrine_mongodb.odm.default_document_manager"/>
    </service>
    <service id="twig.text_extension" class="Twig_Extensions_Extension_Text">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.intl" class="Twig_Extensions_Extension_Intl">
      <tag name="twig.extension"/>
    </service>
    <service id="cocorico.twig.core_extension" class="Cocorico\CoreBundle\Twig\CoreExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="lexik_currency.currency_extension"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="session"/>
      <argument type="collection">
        <argument key="parameters" type="collection">
          <argument key="cocorico_locales">%cocorico.locales%</argument>
          <argument key="cocorico_time_unit">1440</argument>
          <argument key="cocorico_time_zone">Europe/Paris</argument>
          <argument key="cocorico_time_unit_allday">true</argument>
          <argument key="cocorico_time_unit_flexibility">0</argument>
          <argument key="cocorico_time_hours_available">%cocorico.time_hours_available%</argument>
          <argument key="cocorico_days_display_mode">range</argument>
          <argument key="cocorico_times_display_mode">duration</argument>
          <argument key="cocorico_currencies">%cocorico.currencies%</argument>
          <argument key="cocorico_currency">EUR</argument>
          <argument key="cocorico_fee_as_offerer">0.05</argument>
          <argument key="cocorico_fee_as_asker">0.1</argument>
          <argument key="cocorico_listing_availability_status">1</argument>
          <argument key="cocorico_listing_price_precision">2</argument>
          <argument key="cocorico_listing_price_min">100</argument>
          <argument key="cocorico_listing_price_max">11000</argument>
          <argument key="cocorico_listing_map_display_marker">false</argument>
          <argument key="cocorico_listing_search_min_result">0</argument>
          <argument key="cocorico_listing_duplication">true</argument>
          <argument key="cocorico_booking_allow_single_day">true</argument>
          <argument key="cocorico_booking_end_day_included">true</argument>
          <argument key="cocorico_booking_expiration_delay">2880</argument>
          <argument key="cocorico_booking_acceptation_delay">240</argument>
          <argument key="cocorico_booking_validated_moment">start</argument>
          <argument key="cocorico_booking_validated_delay">0</argument>
          <argument key="cocorico_booking_price_min">500</argument>
          <argument key="cocorico_booking_min_start_delay">0</argument>
          <argument key="cocorico_booking_min_start_time_delay">720</argument>
          <argument key="cocorico_vat">0.2</argument>
          <argument key="cocorico_include_vat">false</argument>
          <argument key="cocorico_display_vat">true</argument>
          <argument key="cocorico_user_address_delivery">true</argument>
        </argument>
      </argument>
    </service>
    <service id="lexik_currency.currency_extension" class="Lexik\Bundle\CurrencyBundle\Twig\Extension\CurrencyExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="cocorico.twig.language_extension" class="Cocorico\CoreBundle\Twig\LanguageExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="cocorico.twig.country_extension" class="Cocorico\CoreBundle\Twig\CountryExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="cocorico.twig.extra_bundle_extension" class="Cocorico\CoreBundle\Twig\ExtraBundleExtension">
      <tag name="twig.extension"/>
      <argument>%kernel.bundles%</argument>
    </service>
    <service id="cocorico.listing_validator" class="Cocorico\CoreBundle\Validator\Constraints\ListingValidator">
      <tag name="validator.constraint_validator" alias="listing"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>24</argument>
      <argument>1</argument>
      <argument>1</argument>
      <argument>100</argument>
      <argument type="collection"/>
    </service>
    <service id="cocorico.times_range_overlap_validator" class="Cocorico\CoreBundle\Validator\Constraints\TimeRangesOverlapValidator">
      <tag name="validator.constraint_validator" alias="time_ranges_overlap"/>
    </service>
    <service id="cocorico.listing_availability_validator" class="Cocorico\CoreBundle\Validator\Constraints\ListingAvailabilityValidator">
      <tag name="validator.constraint_validator" alias="listing_availability"/>
      <argument>100</argument>
    </service>
    <service id="cocorico.listing_availabilities_price_validator" class="Cocorico\CoreBundle\Validator\Constraints\ListingAvailabilitiesPriceValidator">
      <tag name="validator.constraint_validator" alias="listing_availabilities_price"/>
      <argument>100</argument>
    </service>
    <service id="cocorico.booking_validator" class="Cocorico\CoreBundle\Validator\Constraints\BookingValidator">
      <tag name="validator.constraint_validator" alias="booking"/>
      <argument type="service" id="cocorico.booking.manager"/>
      <argument type="service" id="session"/>
      <argument>0</argument>
      <argument>720</argument>
      <argument>EUR</argument>
    </service>
    <service id="cocorico.listing_discount_validator" class="Cocorico\CoreBundle\Validator\Constraints\ListingDiscountValidator">
      <tag name="validator.constraint_validator" alias="listing_discount"/>
      <argument>1</argument>
      <argument>90</argument>
    </service>
    <service id="security.access.listing_voter" class="Cocorico\CoreBundle\Security\Voter\ListingVoter" public="false">
      <tag name="security.voter"/>
    </service>
    <service id="security.access.listing_image_voter" class="Cocorico\CoreBundle\Security\Voter\ListingImageVoter" public="false">
      <tag name="security.voter"/>
    </service>
    <service id="security.access.booking_voter" class="Cocorico\CoreBundle\Security\Voter\BookingVoter" public="false">
      <tag name="security.voter"/>
    </service>
    <service id="cocorico.form.handler.listing" class="Cocorico\CoreBundle\Form\Handler\Frontend\ListingFormHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico.listing.manager"/>
    </service>
    <service id="cocorico.form.handler.booking" class="Cocorico\CoreBundle\Form\Handler\Frontend\BookingFormHandler">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico.booking.manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico.form.handler.booking.dashboard" abstract="true">
      <call method="setRequest">
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setBookingManager">
        <argument type="service" id="cocorico.booking.manager"/>
      </call>
      <call method="setThreadManager">
        <argument type="service" id="cocorico_message.thread_manager"/>
      </call>
    </service>
    <service id="cocorico.form.handler.booking.offerer.dashboard" class="Cocorico\CoreBundle\Form\Handler\Dashboard\BookingOffererFormHandler">
      <call method="setRequest">
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setBookingManager">
        <argument type="service" id="cocorico.booking.manager"/>
      </call>
      <call method="setThreadManager">
        <argument type="service" id="cocorico_message.thread_manager"/>
      </call>
    </service>
    <service id="cocorico.form.handler.booking.asker.dashboard" class="Cocorico\CoreBundle\Form\Handler\Dashboard\BookingAskerFormHandler">
      <call method="setRequest">
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setBookingManager">
        <argument type="service" id="cocorico.booking.manager"/>
      </call>
      <call method="setThreadManager">
        <argument type="service" id="cocorico_message.thread_manager"/>
      </call>
    </service>
    <service id="cocorico.form.handler.booking_price" class="Cocorico\CoreBundle\Form\Handler\Frontend\BookingPriceFormHandler">
      <argument type="service" id="session"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico.listing_search_request"/>
      <argument type="service" id="cocorico.booking.manager"/>
    </service>
    <service id="cocorico.form.handler.listing_availability.dashboard" abstract="true">
      <call method="setRequest">
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setListingAvailabilityManager">
        <argument type="service" id="cocorico.listing_availability.manager"/>
      </call>
      <call method="setEntityManager">
        <argument type="service" id="doctrine.orm.default_entity_manager"/>
      </call>
    </service>
    <service id="cocorico.form.handler.listing_availability.price.dashboard" class="Cocorico\CoreBundle\Form\Handler\Dashboard\ListingAvailabilityPriceFormHandler">
      <call method="setRequest">
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setListingAvailabilityManager">
        <argument type="service" id="cocorico.listing_availability.manager"/>
      </call>
      <call method="setEntityManager">
        <argument type="service" id="doctrine.orm.default_entity_manager"/>
      </call>
    </service>
    <service id="cocorico.form.handler.listing_availability.status.dashboard" class="Cocorico\CoreBundle\Form\Handler\Dashboard\ListingAvailabilityStatusFormHandler">
      <call method="setRequest">
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setListingAvailabilityManager">
        <argument type="service" id="cocorico.listing_availability.manager"/>
      </call>
      <call method="setEntityManager">
        <argument type="service" id="doctrine.orm.default_entity_manager"/>
      </call>
    </service>
    <service id="cocorico.mailer.twig_swift" class="Cocorico\CoreBundle\Mailer\TwigSwiftMailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="translator.default"/>
      <argument type="collection">
        <argument key="parameters" type="collection">
          <argument key="cocorico_time_unit">1440</argument>
          <argument key="cocorico_locales">%cocorico.locales%</argument>
          <argument key="cocorico_locale">fr</argument>
          <argument key="cocorico_time_zone">Europe/Paris</argument>
          <argument key="cocorico_from_email">no-reply@cocorico.io</argument>
          <argument key="cocorico_contact_email">contact@costocking.com</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="templates" type="collection">
          <argument key="listing_activated_offerer">CocoricoCoreBundle:Mails/Offerer:listing_activated_offerer.txt.twig</argument>
          <argument key="booking_request_offerer">CocoricoCoreBundle:Mails/Offerer:booking_request_offerer.txt.twig</argument>
          <argument key="booking_accepted_offerer">CocoricoCoreBundle:Mails/Offerer:booking_accepted_offerer.txt.twig</argument>
          <argument key="booking_canceled_by_asker_offerer">CocoricoCoreBundle:Mails/Offerer:booking_canceled_by_asker_offerer.txt.twig</argument>
          <argument key="booking_canceled_by_asker_asker">CocoricoCoreBundle:Mails/Asker:booking_canceled_by_asker_asker.txt.twig</argument>
          <argument key="booking_request_expired_offerer">CocoricoCoreBundle:Mails/Offerer:booking_request_expired_offerer.txt.twig</argument>
          <argument key="booking_request_expired_asker">CocoricoCoreBundle:Mails/Asker:booking_request_expired_asker.txt.twig</argument>
          <argument key="booking_request_asker">CocoricoCoreBundle:Mails/Asker:booking_request_asker.txt.twig</argument>
          <argument key="booking_accepted_asker">CocoricoCoreBundle:Mails/Asker:booking_accepted_asker.txt.twig</argument>
          <argument key="booking_refused_asker">CocoricoCoreBundle:Mails/Asker:booking_refused_asker.txt.twig</argument>
          <argument key="booking_refused_offerer">CocoricoCoreBundle:Mails/Offerer:booking_refused_offerer.txt.twig</argument>
          <argument key="booking_imminent_offerer">CocoricoCoreBundle:Mails/Offerer:booking_imminent_offerer.txt.twig</argument>
          <argument key="booking_imminent_asker">CocoricoCoreBundle:Mails/Asker:booking_imminent_asker.txt.twig</argument>
          <argument key="booking_request_expiration_alert_offerer">CocoricoCoreBundle:Mails/Offerer:booking_request_expiration_alert_offerer.txt.twig</argument>
          <argument key="booking_bank_wire_transfer_offerer">CocoricoCoreBundle:Mails/Offerer:booking_bank_wire_transfer_offerer.txt.twig</argument>
          <argument key="reminder_to_rate_asker_offerer">CocoricoCoreBundle:Mails/Offerer:reminder_to_rate_asker_offerer.txt.twig</argument>
          <argument key="reminder_to_rate_offerer_asker">CocoricoCoreBundle:Mails/Asker:reminder_to_rate_offerer_asker.txt.twig</argument>
          <argument key="update_your_calendar_offerer">CocoricoCoreBundle:Mails/Offerer:update_your_calendar_offerer.txt.twig</argument>
          <argument key="payment_error_asker">CocoricoCoreBundle:Mails/Asker:payment_error_asker.txt.twig</argument>
          <argument key="admin_message">CocoricoCoreBundle:Mails:admin_message.txt.twig</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.admin.listing" class="Cocorico\CoreBundle\Admin\ListingAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Listings" label="Listings"/>
      <argument>sonata.admin.listing</argument>
      <argument>Cocorico\CoreBundle\Entity\Listing</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setIncludeVat">
        <argument>false</argument>
      </call>
      <call method="setBundlesEnabled">
        <argument>%kernel.bundles%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Listings</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.booking" class="Cocorico\CoreBundle\Admin\BookingAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Bookings" label="Bookings"/>
      <argument>sonata.admin.booking</argument>
      <argument>Cocorico\CoreBundle\Entity\Booking</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setTimeUnit">
        <argument>1440</argument>
      </call>
      <call method="setBookingExpirationDelay">
        <argument>2880</argument>
      </call>
      <call method="setBookingAcceptationDelay">
        <argument>240</argument>
      </call>
      <call method="setIncludeVat">
        <argument>false</argument>
      </call>
      <call method="setBundlesEnabled">
        <argument>%kernel.bundles%</argument>
      </call>
      <call method="setTimezone">
        <argument>Europe/Paris</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Bookings</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.listing_characteristic" class="Cocorico\CoreBundle\Admin\ListingCharacteristicAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Listings" label="Characteristic"/>
      <argument>sonata.admin.listing_characteristic</argument>
      <argument>Cocorico\CoreBundle\Entity\ListingCharacteristic</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Characteristic</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.listing_characteristic_group" class="Cocorico\CoreBundle\Admin\ListingCharacteristicGroupAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Listings" label="Characteristic Group"/>
      <argument>sonata.admin.listing_characteristic_group</argument>
      <argument>Cocorico\CoreBundle\Entity\ListingCharacteristicGroup</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Characteristic Group</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.listing_characteristic_type" class="Cocorico\CoreBundle\Admin\ListingCharacteristicTypeAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Listings" label="Characteristic Type"/>
      <argument>sonata.admin.listing_characteristic_type</argument>
      <argument>Cocorico\CoreBundle\Entity\ListingCharacteristicType</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Characteristic Type</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.listing_characteristic_value" class="Cocorico\CoreBundle\Admin\ListingCharacteristicValueAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard=""/>
      <argument>sonata.admin.listing_characteristic_value</argument>
      <argument>Cocorico\CoreBundle\Entity\ListingCharacteristicValue</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>-</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.listing_category" class="Cocorico\CoreBundle\Admin\ListingCategoryAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Listings" label="Category"/>
      <argument>sonata.admin.listing_category</argument>
      <argument>Cocorico\CoreBundle\Entity\ListingCategory</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setBundlesEnabled">
        <argument>%kernel.bundles%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Category</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.booking_bank_wire" class="Cocorico\CoreBundle\Admin\BookingBankWireAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Bookings" label="Bank Wires"/>
      <argument>sonata.admin.booking_bank_wire</argument>
      <argument>Cocorico\CoreBundle\Entity\BookingBankWire</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setTimeUnit">
        <argument>1440</argument>
      </call>
      <call method="setCurrency">
        <argument>EUR</argument>
      </call>
      <call method="setBookingBankWireManager">
        <argument type="service" id="cocorico.booking_bank_wire.manager"/>
      </call>
      <call method="setBundlesEnabled">
        <argument>%kernel.bundles%</argument>
      </call>
      <call method="setTimezone">
        <argument>Europe/Paris</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Bank Wires</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.booking_payin_refund" class="Cocorico\CoreBundle\Admin\BookingPayinRefundAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Bookings" label="Payin Refunds"/>
      <argument>sonata.admin.booking_payin_refund</argument>
      <argument>Cocorico\CoreBundle\Entity\BookingPayinRefund</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setTimeUnit">
        <argument>1440</argument>
      </call>
      <call method="setBundlesEnabled">
        <argument>%kernel.bundles%</argument>
      </call>
      <call method="setTimezone">
        <argument>Europe/Paris</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Payin Refunds</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.booking_user_address" class="Cocorico\CoreBundle\Admin\BookingUserAddressAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard=""/>
      <argument>sonata.admin.booking_user_address</argument>
      <argument>Cocorico\CoreBundle\Entity\BookingUserAddress</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>cocorico_user</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>-</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="cocorico.booking.subscriber" class="Cocorico\CoreBundle\Event\BookingSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="cocorico.booking.manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico.booking_payin_refund.subscriber" class="Cocorico\CoreBundle\Event\BookingPayinRefundSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="cocorico.booking_payin_refund.manager"/>
    </service>
    <service id="cocorico.booking_validate.subscriber" class="Cocorico\CoreBundle\Event\BookingValidateSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="cocorico.booking_bank_wire.manager"/>
    </service>
    <service id="cocorico.booking_bank_wire.subscriber" class="Cocorico\CoreBundle\Event\BookingBankWireSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="cocorico.booking_bank_wire.manager"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="cocorico.listing_search_request" class="Cocorico\CoreBundle\Model\ListingSearchRequest" public="true">
      <argument type="service" id="request_stack"/>
      <argument>10</argument>
    </service>
    <service id="cocorico.namer.image_namer" class="Cocorico\CoreBundle\Namer\ImageNamer">
      <tag name="image_namer"/>
    </service>
    <service id="cocorico.translator.entity.extractor" class="Cocorico\CoreBundle\Translator\EntityExtractor">
      <tag name="jms_translation.file_visitor"/>
    </service>
    <service id="cocorico.translator.admin.extractor" class="Cocorico\CoreBundle\Translator\AdminExtractor">
      <tag name="jms_translation.file_visitor"/>
    </service>
    <service id="cocorico.helper.global" class="Cocorico\CoreBundle\Helper\GlobalHelper">
      <argument>dev</argument>
    </service>
    <service id="cocorico.translator.manager" class="Cocorico\CoreBundle\Model\Manager\TranslateManager">
      <argument>null</argument>
      <argument>https://api.cognitive.microsoft.com/sts/v1.0/issueToken</argument>
      <argument>http://api.microsofttranslator.com/v2/Http.svc/TranslateArray</argument>
    </service>
    <service id="cocorico.extra_bundle.routing_loader" class="Cocorico\CoreBundle\Routing\ExtraBundleLoader">
      <tag name="routing.loader"/>
      <argument>%kernel.bundles%</argument>
      <argument>dev</argument>
    </service>
    <service id="knp.doctrine_behaviors.reflection.class_analyzer" class="Knp\DoctrineBehaviors\Reflection\ClassAnalyzer" public="false"/>
    <service id="knp.doctrine_behaviors.translatable_subscriber" class="Knp\DoctrineBehaviors\ORM\Translatable\TranslatableSubscriber" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="knp.doctrine_behaviors.reflection.class_analyzer"/>
      <argument type="service" id="knp.doctrine_behaviors.translatable_subscriber.current_locale_callable"/>
      <argument type="service" id="knp.doctrine_behaviors.translatable_subscriber.default_locale_callable"/>
      <argument>Knp\DoctrineBehaviors\Model\Translatable\Translatable</argument>
      <argument>Knp\DoctrineBehaviors\Model\Translatable\Translation</argument>
      <argument>EAGER</argument>
      <argument>EAGER</argument>
    </service>
    <service id="knp.doctrine_behaviors.translatable_subscriber.current_locale_callable" class="Knp\DoctrineBehaviors\ORM\Translatable\CurrentLocaleCallable" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="knp.doctrine_behaviors.translatable_subscriber.default_locale_callable" class="Knp\DoctrineBehaviors\ORM\Translatable\DefaultLocaleCallable" public="false">
      <argument>fr</argument>
    </service>
    <service id="knp.doctrine_behaviors.softdeletable_subscriber" class="Knp\DoctrineBehaviors\ORM\SoftDeletable\SoftDeletableSubscriber" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="knp.doctrine_behaviors.reflection.class_analyzer"/>
      <argument>true</argument>
      <argument>Knp\DoctrineBehaviors\Model\SoftDeletable\SoftDeletable</argument>
    </service>
    <service id="knp.doctrine_behaviors.timestampable_subscriber" class="Knp\DoctrineBehaviors\ORM\Timestampable\TimestampableSubscriber" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="knp.doctrine_behaviors.reflection.class_analyzer"/>
      <argument>true</argument>
      <argument>Knp\DoctrineBehaviors\Model\Timestampable\Timestampable</argument>
      <argument>datetime</argument>
    </service>
    <service id="knp.doctrine_behaviors.tree_subscriber" class="Knp\DoctrineBehaviors\ORM\Tree\TreeSubscriber" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="knp.doctrine_behaviors.reflection.class_analyzer"/>
      <argument>true</argument>
      <argument>Knp\DoctrineBehaviors\Model\Tree\Node</argument>
    </service>
    <service id="knp.doctrine_behaviors.sortable_subscriber" class="Knp\DoctrineBehaviors\ORM\Sortable\SortableSubscriber" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="knp.doctrine_behaviors.reflection.class_analyzer"/>
      <argument>true</argument>
      <argument>Knp\DoctrineBehaviors\Model\Sortable\Sortable</argument>
    </service>
    <service id="knp.doctrine_behaviors.blameable_subscriber" class="Knp\DoctrineBehaviors\ORM\Blameable\BlameableSubscriber" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="knp.doctrine_behaviors.reflection.class_analyzer"/>
      <argument>true</argument>
      <argument>Knp\DoctrineBehaviors\Model\Blameable\Blameable</argument>
      <argument type="service" id="knp.doctrine_behaviors.blameable_subscriber.user_callable"/>
      <argument>null</argument>
    </service>
    <service id="knp.doctrine_behaviors.blameable_subscriber.user_callable" class="Knp\DoctrineBehaviors\ORM\Blameable\UserCallable" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="knp.doctrine_behaviors.loggable_subscriber" class="Knp\DoctrineBehaviors\ORM\Loggable\LoggableSubscriber" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="knp.doctrine_behaviors.reflection.class_analyzer"/>
      <argument>true</argument>
      <argument type="service" id="knp.doctrine_behaviors.loggable_subscriber.logger_callable"/>
    </service>
    <service id="knp.doctrine_behaviors.loggable_subscriber.logger_callable" class="Knp\DoctrineBehaviors\ORM\Loggable\LoggerCallable" public="false">
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="knp.doctrine_behaviors.geocodable_subscriber" class="Knp\DoctrineBehaviors\ORM\Geocodable\GeocodableSubscriber" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="knp.doctrine_behaviors.reflection.class_analyzer"/>
      <argument>true</argument>
      <argument>Knp\DoctrineBehaviors\Model\Geocodable\Geocodable</argument>
      <argument>null</argument>
    </service>
    <service id="knp.doctrine_behaviors.sluggable_subscriber" class="Knp\DoctrineBehaviors\ORM\Sluggable\SluggableSubscriber" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="knp.doctrine_behaviors.reflection.class_analyzer"/>
      <argument>true</argument>
      <argument>Knp\DoctrineBehaviors\Model\Sluggable\Sluggable</argument>
    </service>
    <service id="cocorico_user.form.type.login" class="Cocorico\UserBundle\Form\Type\LoginFormType">
      <tag name="form.type" alias="user_login"/>
    </service>
    <service id="cocorico_user.form.type.register" class="Cocorico\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="user_registration"/>
    </service>
    <service id="cocorico_user.form.type.user_address" class="Cocorico\UserBundle\Form\Type\UserAddressFormType">
      <tag name="form.type" alias="user_address"/>
    </service>
    <service id="cocorico_user.form.handler.registration" class="Cocorico\UserBundle\Form\Handler\RegistrationFormHandler" public="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico_user.user_manager"/>
      <argument type="service" id="cocorico_user.mailer.twig_swift"/>
      <argument type="service" id="fos_user.util.token_generator.default"/>
      <argument type="service" id="cocorico_user.login_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico_user.form.handler.bank_account" class="Cocorico\UserBundle\Form\Handler\BankAccountFormHandler" public="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico_user.user_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico_user.form.handler.contact" class="Cocorico\UserBundle\Form\Handler\ContactFormHandler" public="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico_user.user_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>true</argument>
    </service>
    <service id="security.access.user_image_voter" class="Cocorico\UserBundle\Security\Voter\UserImageVoter" public="false">
      <tag name="security.voter"/>
    </service>
    <service id="cocorico_user.security.access.user_image_voter" class="Cocorico\UserBundle\Security\Voter\UserImageVoter" public="false">
      <tag name="security.voter"/>
    </service>
    <service id="cocorico_user.user.validator" class="Cocorico\UserBundle\Validator\Constraints\UserValidator">
      <tag name="validator.constraint_validator" alias="user"/>
      <argument>6</argument>
      <argument>1</argument>
    </service>
    <service id="cocorico_user.login_manager" class="Cocorico\UserBundle\Security\LoginManager">
      <argument type="service" id="cocorico_user.user_manager"/>
      <argument type="service" id="fos_user.security.login_manager"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>main</argument>
    </service>
    <service id="cocorico_user.oauth.user.provider.entity" class="Cocorico\UserBundle\Security\OAuthUserProvider">
      <argument type="service" id="cocorico_user.user_manager"/>
    </service>
    <service id="cocorico_user.user_manager" class="Cocorico\UserBundle\Model\UserManager" public="true">
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
      <argument type="service" id="fos_user.object_manager"/>
      <argument>Cocorico\UserBundle\Entity\User</argument>
      <argument>/cocorico/app</argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="cocorico_user.authentication_subscriber" class="Cocorico\UserBundle\Event\UserAuthenticationSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="session"/>
      <argument>Europe/Paris</argument>
    </service>
    <service id="cocorico_user.user_request.listener" class="Cocorico\UserBundle\Listener\UserRequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="0"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.token_storage"/>
      <argument>Europe/Paris</argument>
    </service>
    <service id="cocorico_user.user_entity_listener" class="Cocorico\UserBundle\Listener\UserEntityListener">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="session"/>
      <argument>Europe/Paris</argument>
    </service>
    <service id="cocorico_user.user_image_upload_listener" class="Cocorico\UserBundle\Listener\UserImageUploadListener">
      <tag name="kernel.event_listener" event="oneup_uploader.post_upload" method="onUpload"/>
      <argument type="service" id="cocorico_user.user_manager"/>
    </service>
    <service id="cocorico_user.listing_image_upload_validation_listener" class="Cocorico\UserBundle\Listener\UserImageUploadValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
      <argument>12</argument>
    </service>
    <service id="sonata.admin.user_address" class="Cocorico\UserBundle\Admin\UserAddressAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard=""/>
      <argument>sonata.admin.user_address</argument>
      <argument>Cocorico\UserBundle\Entity\UserAddress</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>cocorico_user</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>-</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="cocorico_user.namer.image_namer" class="Cocorico\UserBundle\Namer\ImageNamer">
      <tag name="image_namer"/>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="100"/>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="service_locator.sr6ctxe"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-100"/>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-150"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>fr</argument>
      <argument type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="controller_name_converter"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged" tag="kernel.cache_warmer"/>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <argument type="collection">
        <argument>Symfony\Component\HttpFoundation\ParameterBag</argument>
        <argument>Symfony\Component\HttpFoundation\HeaderBag</argument>
        <argument>Symfony\Component\HttpFoundation\FileBag</argument>
        <argument>Symfony\Component\HttpFoundation\ServerBag</argument>
        <argument>Symfony\Component\HttpFoundation\Request</argument>
        <argument>Symfony\Component\HttpKernel\Kernel</argument>
      </argument>
      <deprecated>The "%service_id%" option is deprecated since version 3.3, to be removed in 4.0.</deprecated>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged" tag="kernel.cache_clearer"/>
    </service>
    <service id="kernel" public="true" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/cocorico/app/Resources</argument>
      <argument type="collection">
        <argument>/cocorico/app</argument>
      </argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="profiler">reset</argument>
        <argument key="debug.validator">reset</argument>
        <argument key="debug.stopwatch">reset</argument>
        <argument key="security.token_storage">setToken</argument>
        <argument key="form.type.entity">reset</argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id="service_locator.o0cobhk"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/cocorico/translations</argument>
      <argument>/cocorico/templates</argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>fr</argument>
      <argument>/cocorico/translations</argument>
      <argument>/cocorico/templates</argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>V0d-JmWKqK4A4VMxbhLmky</argument>
      <argument>/cocorico/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>V0d-JmWKqK4A4VMxbhLmky</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/cocorico/var/cache/dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="kernel.cache_clearer"/>
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id="2_ServiceLocator~ktqo1xx" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="1_NativeFileSessionHandler~ktqo1xx" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/cocorico/var/cache/dev/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument>%session.storage.options%</argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/cocorico/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id="1_NativeFileSessionHandler~ktqo1xx"/>
    </service>
    <service id="session.handler.write_check" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.4 and will be removed in 4.0. Use the `session.lazy_write` ini setting instead.</deprecated>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="2_ServiceLocator~ktqo1xx"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service" id="1_ResolvedFormTypeFactory~supjq51"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="true">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.range" class="Symfony\Component\Form\Extension\Core\Type\RangeType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="deprecated.form.registry" class="stdClass">
      <property name="registry" type="collection"/>
      <deprecated>The service "%service_id%" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0</deprecated>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="deprecated.form.registry.csrf" class="stdClass">
      <property name="registry" type="collection"/>
      <deprecated>The service "%service_id%" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\UrlPackage" public="false">
      <argument type="collection">
        <argument>http://192.168.100.171</argument>
      </argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="templating.engine.delegating" class="Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/cocorico/var/cache/dev</argument>
    </service>
    <service id="templating.finder" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="templating.filename_parser"/>
      <argument>/cocorico/app/Resources</argument>
    </service>
    <service id="templating.cache_warmer.template_paths" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="20"/>
      <argument type="service" id="templating.finder"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.filesystem" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader" public="false">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.cache" class="Symfony\Component\Templating\Loader\CacheLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <argument type="service" id="templating.loader.wrapped"/>
      <argument>null</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="templating.loader.chain" class="Symfony\Component\Templating\Loader\ChainLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="2_ApcCache~xwahvja" class="Doctrine\Common\Cache\ApcCache" public="false">
      <call method="setNamespace">
        <argument></argument>
      </call>
    </service>
    <service id="1_PhpArrayAdapter~xwahvja" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/cocorico/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
          <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/config/validation.xml</argument>
          <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service" id="fos_user.validator.initializer"/>
          <argument type="service" id="doctrine_odm.mongodb.validator_initializer"/>
        </argument>
      </call>
      <call method="addXmlMapping">
        <argument>/cocorico/vendor/friendsofsymfony/user-bundle/DependencyInjection/Compiler/../../Resources/config/storage-validation/orm.xml</argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/cocorico/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id="1_PhpArrayAdapter~xwahvja"/>
    </service>
    <service id="validator.mapping.cache.doctrine.apc" class="Symfony\Component\Validator\Mapping\Cache\DoctrineCache" public="false">
      <argument type="service" id="2_ApcCache~xwahvja"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.4 and will be removed in 4.0. Use a Psr6 cache like "validator.mapping.cache.symfony" instead.</deprecated>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id="service_locator.f0e7oam"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_locator.yepb.pt"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>fr</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/cocorico/var/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.af.yml</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ar.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ar.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ar.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.ar.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.ar.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/validators.ar.yml</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.bg.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.bg.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.bg.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.bg.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.bg.xliff</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ca.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ca.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ca.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.ca.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.ca.xliff</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.cs.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.cs.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.cs.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.cs.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.cs.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.cs.yml</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.da.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.da.yml</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.de.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.de.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.de.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.de.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.de.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.de.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.de.yml</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.de.yml</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.el.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.el.yml</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.en.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.en.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.en.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.en.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.en.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.en.xliff</argument>
            <argument>/cocorico/vendor/oneup/uploader-bundle/Oneup/UploaderBundle/Resources/translations/OneupUploaderBundle.en.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.en.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/validators.en.yml</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.en.yml</argument>
            <argument>/cocorico/app/Resources/translations/FOSUserBundle.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/SonataAdminBundle.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/SonataUserBundle.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_booking.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_breadcrumbs.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_contact.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_geo.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_home.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_listing.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_mail.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_message.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_meta.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_review.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_user.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/messages.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/routes.en.xliff</argument>
            <argument>/cocorico/app/Resources/translations/validators.en.xliff</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.es.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.es.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.es.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.es.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.es.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.es.yml</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.es.yml</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.et.yml</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.eu.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.eu.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.eu.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.eu.xliff</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fa.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fa.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.fa.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.fa.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.fa.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.fa.yml</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.fa.yml</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fi.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fi.yml</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.fi.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.fi.xliff</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fr.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fr.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.fr.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.fr.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.fr.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.fr.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.fr.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/validators.fr.yml</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.fr.yml</argument>
            <argument>/cocorico/app/Resources/translations/FOSUserBundle.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/SonataAdminBundle.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/SonataUserBundle.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_booking.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_breadcrumbs.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_contact.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_geo.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_home.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_listing.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_mail.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_message.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_meta.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_review.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_user.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/messages.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/routes.fr.xliff</argument>
            <argument>/cocorico/app/Resources/translations/validators.fr.xliff</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.gl.yml</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.he.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.he.yml</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hr.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hr.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.hr.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.hr.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hu.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hu.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.hu.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.hu.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.hu.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.hu.xliff</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.hu.yml</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.id.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.id.yml</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.it.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.it.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.it.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.it.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.it.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.it.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.it.yml</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.it.yml</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ja.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ja.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ja.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.ja.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.ja.xliff</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lb.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.lb.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.lb.xliff</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lt.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lt.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.lt.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.lt.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.lt.xliff</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lv.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lv.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.lv.xliff</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nl.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nl.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.nl.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.nl.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.nl.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.nl.yml</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.nl.yml</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pl.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pl.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.pl.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.pl.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.pl.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.pl.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/validators.pl.yml</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.pl.yml</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.pt.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.pt.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.pt.xliff</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt_BR.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt_BR.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.pt_BR.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.pt_BR.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.pt_BR.xliff</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ro.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ro.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ro.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.ro.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.ro.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ru.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ru.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ru.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.ru.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.ru.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/FOSUserBundle.ru.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.ru.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.ru.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/validators.ru.yml</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.ru.yml</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sk.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sk.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sk.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.sk.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.sk.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.sk.yml</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sl.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sl.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sl.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.sl.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.sl.xliff</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.sl.yml</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sr_Latn.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sr_Latn.yml</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sv.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sv.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/translations/FOSMessageBundle.sv.yml</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.th.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.th.yml</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.tr.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.tr.yml</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.tr.yml</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.uk.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.uk.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.uk.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.uk.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.uk.xliff</argument>
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.uk.yml</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.vi.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.vi.yml</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.zh_CN.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.zh_CN.yml</argument>
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.zh_CN.xliff</argument>
            <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.zh_CN.xliff</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.zh_TW.xliff</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ua.xlf</argument>
          </argument>
          <argument key="bn" type="collection">
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.bn.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.bn.yml</argument>
          </argument>
          <argument key="bn_BD" type="collection">
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.bn_BD.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.bn_BD.yml</argument>
          </argument>
          <argument key="eo" type="collection">
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.eo.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.eo.yml</argument>
          </argument>
          <argument key="ky" type="collection">
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ky.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ky.yml</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nb.yml</argument>
            <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nb.yml</argument>
          </argument>
          <argument key="sv_SE" type="collection">
            <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sv_SE.xliff</argument>
          </argument>
          <argument key="zh" type="collection">
            <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.zh.yml</argument>
          </argument>
          <argument key="php" type="collection">
            <argument>/cocorico/app/Resources/translations/FOSUserBundle.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/SonataAdminBundle.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/SonataUserBundle.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_booking.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_breadcrumbs.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_contact.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_geo.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_home.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_listing.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_mail.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_message.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_meta.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_review.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/cocorico_user.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/messages.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/routes.php.xliff</argument>
            <argument>/cocorico/app/Resources/translations/validators.php.xliff</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>fr</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="translator.selector"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="JMS\TranslationBundle\Translation\Loader\Symfony\XliffLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.4 and will be removed in 4.0. Use "translation.reader" instead.</deprecated>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" key="translator" id="translator.logging.inner"/>
      <tag name="container.service_subscriber.locator" id="service_locator.s.m3yzc"/>
      <argument type="service" id="service_locator.s.m3yzc"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="swiftmailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="doctrine_mongodb.odm.data_collector.pretty"/>
      </call>
      <call method="add">
        <argument type="service" id="sonata.block.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="Bazinga\GeocoderBundle\DataCollector\GeocoderDataCollector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:/cocorico/var/cache/dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Bundle\FrameworkBundle\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/cocorico/var/cache/dev/appDevDebugProjectContainer</argument>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
    </service>
    <service id="1_ResolvedFormTypeFactory~supjq51" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator" public="false">
      <argument type="service" id="translator.logging"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="cache_connection.gd_mszc" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache_connection.jke6kex" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>-1</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>phpstorm://open?file=%%f&amp;line=%%l</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/cocorico</argument>
      <argument>/_profiler/open?file=%%f&amp;line=%%l#line%%l</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListener">
        <argument>oneup_uploader.post_upload</argument>
        <argument type="collection">
          <argument type="service" id="cocorico.listing_image_upload_listener"/>
          <argument>onUpload</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument type="service" id="cocorico.listing_image_upload_validation_listener"/>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="cocorico.ajax.authentication_listener"/>
          <argument>onCoreException</argument>
        </argument>
        <argument>1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="cocorico_user.user_request.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.post_upload</argument>
        <argument type="collection">
          <argument type="service" id="cocorico_user.user_image_upload_listener"/>
          <argument>onUpload</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument type="service" id="cocorico_user.listing_image_upload_validation_listener"/>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="jms_i18n_routing.locale_choosing_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="jms_i18n_routing.cookie_setting_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sonata.block.cache.handler.default"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument type="service" id="oneup_uploader.validation_listener.max_size"/>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument type="service" id="oneup_uploader.validation_listener.allowed_mimetype"/>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument type="service" id="oneup_uploader.validation_listener.disallowed_mimetype"/>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="knp_menu.listener.voters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>cocorico.booking_new.submitted</argument>
        <argument type="collection">
          <argument type="service" id="cocorico.booking.subscriber"/>
          <argument>onBookingNewSubmitted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>cocorico.booking.refund</argument>
        <argument type="collection">
          <argument type="service" id="cocorico.booking_payin_refund.subscriber"/>
          <argument>onBookingRefund</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>cocorico.booking.validate</argument>
        <argument type="collection">
          <argument type="service" id="cocorico.booking_validate.subscriber"/>
          <argument>onBookingValidate</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>cocorico.booking_bank_wire.check</argument>
        <argument type="collection">
          <argument type="service" id="cocorico.booking_bank_wire.subscriber"/>
          <argument>onBookingBankWireCheck</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="cocorico_user.authentication_subscriber"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="resolve_controller_name_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session.save_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fragment.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>48</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.security.implicit_login</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.security.interactive_login_listener"/>
          <argument>onImplicitLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.security.interactive_login_listener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.confirmed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.change_password.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.create.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.delete.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.profile.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.initialize</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetInitialize</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.success</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="lexik_currency.subscriber.locale"/>
          <argument>setCurrencyFormatterLocale</argument>
        </argument>
        <argument>17</argument>
      </call>
      <call method="addListener">
        <argument>cocorico.booking_new.created</argument>
        <argument type="collection">
          <argument type="service" id="cocorico_message.booking.subscriber"/>
          <argument>onBookingNewCreated</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>cocorico_message.post_send</argument>
        <argument type="collection">
          <argument type="service" id="cocorico_message.message.subscriber"/>
          <argument>onMessagePostSend</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <argument type="service" id="jms_di_extra.controller_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false"/>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="cocorico.extra_bundle.routing_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.service"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_dir"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sonata.admin.route_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="oneup_uploader.routing.loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Config\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="routing.resolver"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <argument type="service" id="service_container"/>
      <argument>/cocorico/app/config/routing_dev.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/cocorico/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>192.168.100.171</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber.locator" id="service_locator.lluwcxp"/>
      <argument type="service" id="service_locator.lluwcxp"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/cocorico</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument type="service" id="templating.engine.twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="3_PhpArrayAdapter~guzrwpr" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/cocorico/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="2_ArrayCache~guzrwpr" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="1_AnnotationRegistry~guzrwpr" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="1_AnnotationRegistry~guzrwpr"/>
      </call>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/cocorico/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!AbstractController$|Controller$))#</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id="3_PhpArrayAdapter~guzrwpr"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
    </service>
    <service id="1_ServiceLocator~ametled" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="true">
      <tag name="kernel.reset" method="setToken"/>
    </service>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id="1_ServiceLocator~ametled"/>
    </service>
    <service id="security.user_value_resolver" class="Symfony\Bundle\SecurityBundle\SecurityUserValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.dao.admin"/>
        <argument type="service" id="security.authentication.provider.anonymous.admin"/>
        <argument type="service" id="security.authentication.provider.dao.main"/>
        <argument type="service" id="hwi_oauth.authentication.provider.oauth.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="FOS\UserBundle\Model\UserInterface" type="collection">
          <argument key="algorithm">sha512</argument>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
          <argument key="cost">13</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id="service_locator.zwnb1bl"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.admin" type="service" id="security.request_matcher.hwsmhqp"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.request_matcher.atg4mne"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.request_matcher.zfhj2lw"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="jms_i18n_routing.router" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>admin</argument>
        <argument>/admin/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>admin</argument>
      </call>
      <call method="registerListener">
        <argument>main</argument>
        <argument>cocorico_user_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>frontend</argument>
      </call>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Security\Core\User\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="jms_i18n_routing.router" on-invalid="null"/>
      <argument type="service" id="jms_i18n_routing.router" on-invalid="null"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.authentication.digest_entry_point" class="Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id="security.request_matcher.jjmzzqg"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.bpx0ytz"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.qpgqlkd"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.yk6k2aj"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.0qgquk2"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.kmatd_b"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.rxbsaoi"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.qmz.nu_"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.kpxw15u"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.0k25txh"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.102qta_"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.p1bsrzn"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="fos_user.user_provider.username"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.digest" class="Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.firewall.map.config.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>admin</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.hwsmhqp</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>fos_user.user_provider.username</argument>
      <argument>admin</argument>
      <argument>security.authentication.form_entry_point.admin</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>logout</argument>
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="security.request_matcher.hwsmhqp" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="fos_user.user_provider.username"/>
      </argument>
      <argument>admin</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <call method="setLogoutOnUserChange">
        <argument>false</argument>
      </call>
    </service>
    <service id="security.logout_listener.admin" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.admin"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/admin/logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.admin" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/admin/</argument>
    </service>
    <service id="security.authentication.provider.dao.admin" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="fos_user.user_provider.username"/>
      <argument type="service" id="security.user_checker"/>
      <argument>admin</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.admin.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/admin/login</argument>
          <argument key="default_target_path">/admin/</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="target_path_parameter">_target_path</argument>
          <argument key="use_referer">false</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>admin</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.admin.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/admin/login</argument>
          <argument key="failure_path">/admin/login</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.admin" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="admin" provider="fos_user.user_provider.username"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin</argument>
      <argument type="service" id="security.authentication.success_handler.admin.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.admin.form_login"/>
      <argument type="collection">
        <argument key="use_forward">false</argument>
        <argument key="check_path">/admin/login_check</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="security.authentication.form_entry_point.admin" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/admin/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.admin" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>5cf912c990e8f6.37583431</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.admin" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>5cf912c990e8f6.37583431</argument>
    </service>
    <service id="security.exception_listener.admin" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin</argument>
      <argument type="service" id="security.authentication.form_entry_point.admin"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.logout_listener.admin"/>
        <argument type="service" id="security.authentication.listener.form.admin"/>
        <argument type="service" id="security.authentication.listener.anonymous.admin"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.admin"/>
      <argument type="service" id="security.firewall.map.config.admin"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.atg4mne</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>fos_user.user_provider.username</argument>
      <argument>frontend</argument>
      <argument>hwi_oauth.authentication.entry_point.oauth.main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>logout</argument>
        <argument>switch_user</argument>
        <argument>form_login</argument>
        <argument>oauth</argument>
        <argument>anonymous</argument>
      </argument>
      <argument type="collection">
        <argument key="role">ROLE_SUPER_ADMIN</argument>
        <argument key="parameter">_become_who_you_are</argument>
        <argument key="stateless">false</argument>
      </argument>
    </service>
    <service id="security.request_matcher.atg4mne" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(en|fr)</argument>
    </service>
    <service id="security.context_listener.1" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="fos_user.user_provider.username"/>
      </argument>
      <argument>frontend</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <call method="setLogoutOnUserChange">
        <argument>false</argument>
      </call>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">cocorico_user_logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.main" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>cocorico_home</argument>
    </service>
    <service id="security.authentication.provider.dao.main" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="fos_user.user_provider.username"/>
      <argument type="service" id="security.user_checker"/>
      <argument>main</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false">
      <argument type="service" id="cocorico.authentication_success_listener"/>
      <argument type="collection">
        <argument key="login_path">cocorico_user_login</argument>
        <argument key="use_referer">true</argument>
        <argument key="always_use_default_target_path">false</argument>
        <argument key="default_target_path">/</argument>
        <argument key="target_path_parameter">redirect_to</argument>
      </argument>
      <argument>main</argument>
    </service>
    <service id="security.authentication.failure_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">cocorico_user_login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.main" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="fos_user.user_provider.username"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.success_handler.main.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.main.form_login"/>
      <argument type="collection">
        <argument key="csrf_parameter">_token</argument>
        <argument key="csrf_token_id">authentication</argument>
        <argument key="check_path">cocorico_user_login_check</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.authentication.form_entry_point.main" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>cocorico_user_login</argument>
      <argument>false</argument>
    </service>
    <service id="hwi_oauth.resource_ownermap.main" class="HWI\Bundle\OAuthBundle\Security\Http\ResourceOwnerMap">
      <argument type="service" id="security.http_utils"/>
      <argument>%hwi_oauth.resource_owners%</argument>
      <argument>%hwi_oauth.resource_ownermap.configured.main%</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="hwi_oauth.authentication.provider.oauth.main" class="HWI\Bundle\OAuthBundle\Security\Core\Authentication\Provider\OAuthProvider" public="false">
      <argument type="service" id="cocorico_user.oauth.user.provider.entity"/>
      <argument type="service" id="hwi_oauth.resource_ownermap.main"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.authentication.success_handler.main.oauth" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">cocorico_user_login</argument>
          <argument key="use_referer">true</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>main</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.main.oauth" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">cocorico_user_login</argument>
          <argument key="failure_path">cocorico_user_login</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="hwi_oauth.authentication.listener.oauth.main" class="HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="fos_user.user_provider.username"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.success_handler.main.oauth"/>
      <argument type="service" id="security.authentication.failure_handler.main.oauth"/>
      <argument type="collection">
        <argument key="check_path">cocorico_user_login_check</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <call method="setResourceOwnerMap">
        <argument type="service" id="hwi_oauth.resource_ownermap.main"/>
      </call>
      <call method="setCheckPaths">
        <argument type="collection">
          <argument>/fr/oauth/fb-login</argument>
        </argument>
      </call>
    </service>
    <service id="hwi_oauth.authentication.entry_point.oauth.main" class="HWI\Bundle\OAuthBundle\Security\Http\EntryPoint\OAuthEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>cocorico_user_login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>5cf912c990e8f6.37583431</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>5cf912c990e8f6.37583431</argument>
    </service>
    <service id="security.authentication.switchuser_listener.main" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="fos_user.user_provider.username"/>
      <argument type="service" id="security.user_checker"/>
      <argument>main</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_become_who_you_are</argument>
      <argument>ROLE_SUPER_ADMIN</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="hwi_oauth.authentication.entry_point.oauth.main"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.1"/>
        <argument type="service" id="security.logout_listener.main"/>
        <argument type="service" id="security.authentication.listener.form.main"/>
        <argument type="service" id="hwi_oauth.authentication.listener.oauth.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.authentication.switchuser_listener.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.zfhj2lw</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.request_matcher.zfhj2lw" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="service_locator.zwnb1bl" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.admin" type="service" id="security.firewall.map.context.admin"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id="security.request_matcher.jjmzzqg" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/login$</argument>
    </service>
    <service id="security.request_matcher.bpx0ytz" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/logout$</argument>
    </service>
    <service id="security.request_matcher.qpgqlkd" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/login-check$</argument>
    </service>
    <service id="security.request_matcher.yk6k2aj" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin</argument>
    </service>
    <service id="security.request_matcher.0qgquk2" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/efconnect</argument>
    </service>
    <service id="security.request_matcher.kmatd_b" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/elfinder</argument>
    </service>
    <service id="security.request_matcher.rxbsaoi" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(en|fr)/login$</argument>
    </service>
    <service id="security.request_matcher.qmz.nu_" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(en|fr)/register</argument>
    </service>
    <service id="security.request_matcher.kpxw15u" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(en|fr)/resetting</argument>
    </service>
    <service id="security.request_matcher.0k25txh" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(en|fr)/oauth/fb-login</argument>
    </service>
    <service id="security.request_matcher.102qta_" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(en|fr)/(dashboard|tableau-de-bord)/</argument>
    </service>
    <service id="security.request_matcher.p1bsrzn" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/.*</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>FOS\UserBundle\Model\UserInterface</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.filesystem"/>
      <argument type="collection">
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>SonataUserBundle:Form:form_admin_fields.html.twig</argument>
          <argument>CocoricoCoreBundle:Form:fields.html.twig</argument>
          <argument>CocoricoCoreBundle:Form:fields_collection.html.twig</argument>
          <argument>CocoricoCoreBundle:Form:fields_category.html.twig</argument>
          <argument>CocoricoCoreBundle:Form:fields_price.html.twig</argument>
          <argument>SonataCoreBundle:Form:datepicker.html.twig</argument>
          <argument>CocoricoTimeBundle:Form:fields_date_time.html.twig</argument>
        </argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="exception_controller">twig.controller.exception:showAction</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/cocorico/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="default_path">/cocorico/templates</argument>
        <argument key="paths" type="collection"/>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.text_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.intl"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="cocorico.twig.core_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="lexik_currency.currency_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="cocorico.twig.language_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="cocorico.twig.country_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="cocorico.twig.extra_bundle_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="assetic.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_translation.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.wrapping"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.block.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="oneup_uploader.twig.extension.uploader"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="liip_imagine.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="fos_message.twig_extension.default"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_menu.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="white_october_breadcrumbs.twig"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="hwi_oauth.twig.extension.oauth"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="ivory_ck_editor.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.fm_elfinder_init"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="cocorico_geo.twig.cocorico_geo_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="cocorico.star_rating.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="cocorico_time.twig.time_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="cocorico_time.twig.intl_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>cocorico_site_name</argument>
        <argument>Costocking.com</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_phone</argument>
        <argument>+33(0) 7 77 98 93 52</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_address</argument>
        <argument>null</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_short_description</argument>
        <argument>Costocking est la marketplace de services logistique</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_contact_mail</argument>
        <argument>contact@costocking.com</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_contact_mail_obfuscated</argument>
        <argument>&amp;#099;&amp;#111;&amp;#110;&amp;#116;&amp;#097;&amp;#099;&amp;#116;&amp;#064;&amp;#099;&amp;#111;&amp;#099;&amp;#111;&amp;#114;&amp;#105;&amp;#099;&amp;#111;&amp;#046;&amp;#105;&amp;#111;</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_from_email</argument>
        <argument>no-reply@cocorico.io</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_vat_number</argument>
        <argument>FR 12 123 456 789</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_facebook_id</argument>
        <argument>352775691816092</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_google_analytics</argument>
        <argument>UA</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_google_tag_manager</argument>
        <argument>false</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_admin_translation</argument>
        <argument>false</argument>
      </call>
      <call method="addGlobal">
        <argument>cocorico_listing_countries</argument>
        <argument type="collection"/>
      </call>
      <call method="addGlobal">
        <argument>listing_img_max</argument>
        <argument>24</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_max_upload_size</argument>
        <argument>12</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_xsmall_w</argument>
        <argument>90</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_xsmall_h</argument>
        <argument>67</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_small_w</argument>
        <argument>100</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_small_h</argument>
        <argument>75</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_xxmedium_w</argument>
        <argument>150</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_xxmedium_h</argument>
        <argument>112</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_xmedium_w</argument>
        <argument>200</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_xmedium_h</argument>
        <argument>150</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_medium_w</argument>
        <argument>275</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_medium_h</argument>
        <argument>206</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_large_w</argument>
        <argument>384</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_img_large_h</argument>
        <argument>288</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_new_map_w</argument>
        <argument>100</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_new_map_h</argument>
        <argument>300</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_edit_map_w</argument>
        <argument>100</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_edit_map_h</argument>
        <argument>418</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_show_map_w</argument>
        <argument>100</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_show_map_h</argument>
        <argument>480</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_search_map_w</argument>
        <argument>100%</argument>
      </call>
      <call method="addGlobal">
        <argument>listing_search_map_h</argument>
        <argument>1000</argument>
      </call>
      <call method="addGlobal">
        <argument>upload_image_w</argument>
        <argument>120</argument>
      </call>
      <call method="addGlobal">
        <argument>upload_image_h</argument>
        <argument>90</argument>
      </call>
      <call method="addGlobal">
        <argument>user_img_max</argument>
        <argument>6</argument>
      </call>
      <call method="addGlobal">
        <argument>user_img_max_upload_size</argument>
        <argument>12</argument>
      </call>
      <call method="addGlobal">
        <argument>sonata_admin</argument>
        <argument type="service" id="sonata.admin.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_user</argument>
        <argument type="service" id="sonata.user.twig.global"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.service_subscriber.locator" id="service_locator.c7_qahl"/>
      <argument type="service" id="service_locator.c7_qahl"/>
      <argument type="service" id="templating.finder" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="/cocorico/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/cocorico/app</argument>
      <argument type="collection">
        <argument key="/cocorico/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.service_subscriber.locator" id="service_locator.2m3e4be"/>
      <argument type="service" id="service_locator.2m3e4be"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <argument type="collection"/>
      <argument>/cocorico</argument>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/app/Resources/TwigBundle/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/jms/translation-bundle/JMS/TranslationBundle/Resources/views</argument>
        <argument>JMSTranslation</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/jms/translation-bundle/JMS/TranslationBundle/Resources/views</argument>
        <argument>!JMSTranslation</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>!FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/doctrine/mongodb-odm-bundle/Resources/views</argument>
        <argument>DoctrineMongoDB</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/doctrine/mongodb-odm-bundle/Resources/views</argument>
        <argument>!DoctrineMongoDB</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/SonataAdminBundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
        <argument>!SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/views</argument>
        <argument>!SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/block-bundle/src/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/block-bundle/src/Resources/views</argument>
        <argument>!SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/doctrine-orm-admin-bundle/src/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/doctrine-orm-admin-bundle/src/Resources/views</argument>
        <argument>!SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/SonataUserBundle/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/views</argument>
        <argument>!SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/a2lix/translation-form-bundle/A2lix/TranslationFormBundle/Resources/views</argument>
        <argument>A2lixTranslationForm</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/a2lix/translation-form-bundle/A2lix/TranslationFormBundle/Resources/views</argument>
        <argument>!A2lixTranslationForm</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/liip/imagine-bundle/Resources/views</argument>
        <argument>LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/liip/imagine-bundle/Resources/views</argument>
        <argument>!LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/willdurand/geocoder-bundle/Resources/views</argument>
        <argument>BazingaGeocoder</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/willdurand/geocoder-bundle/Resources/views</argument>
        <argument>!BazingaGeocoder</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/MessageBundle/Resources/views</argument>
        <argument>FOSMessage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/views</argument>
        <argument>FOSMessage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/views</argument>
        <argument>!FOSMessage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>!KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/whiteoctober/breadcrumbs-bundle/WhiteOctober/BreadcrumbsBundle/Resources/views</argument>
        <argument>WhiteOctoberBreadcrumbs</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/whiteoctober/breadcrumbs-bundle/WhiteOctober/BreadcrumbsBundle/Resources/views</argument>
        <argument>!WhiteOctoberBreadcrumbs</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/views</argument>
        <argument>HWIOAuth</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/views</argument>
        <argument>!HWIOAuth</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/egeloen/ckeditor-bundle/Resources/views</argument>
        <argument>IvoryCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/egeloen/ckeditor-bundle/Resources/views</argument>
        <argument>!IvoryCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/helios-ag/fm-elfinder-bundle/Resources/views</argument>
        <argument>FMElfinder</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/helios-ag/fm-elfinder-bundle/Resources/views</argument>
        <argument>!FMElfinder</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/views</argument>
        <argument>SimpleThingsEntityAudit</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/views</argument>
        <argument>!SimpleThingsEntityAudit</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/CoreBundle/Resources/views</argument>
        <argument>CocoricoCore</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/CoreBundle/Resources/views</argument>
        <argument>!CocoricoCore</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/GeoBundle/Resources/views</argument>
        <argument>CocoricoGeo</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/GeoBundle/Resources/views</argument>
        <argument>!CocoricoGeo</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/UserBundle/Resources/views</argument>
        <argument>CocoricoUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/UserBundle/Resources/views</argument>
        <argument>!CocoricoUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/PageBundle/Resources/views</argument>
        <argument>CocoricoPage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/PageBundle/Resources/views</argument>
        <argument>!CocoricoPage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/CMSBundle/Resources/views</argument>
        <argument>CocoricoCMS</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/CMSBundle/Resources/views</argument>
        <argument>!CocoricoCMS</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/BreadcrumbBundle/Resources/views</argument>
        <argument>CocoricoBreadcrumb</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/BreadcrumbBundle/Resources/views</argument>
        <argument>!CocoricoBreadcrumb</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/SonataAdminBundle/Resources/views</argument>
        <argument>CocoricoSonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/SonataUserBundle/Resources/views</argument>
        <argument>CocoricoSonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/MessageBundle/Resources/views</argument>
        <argument>CocoricoMessage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ContactBundle/Resources/views</argument>
        <argument>CocoricoContact</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ContactBundle/Resources/views</argument>
        <argument>!CocoricoContact</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ReviewBundle/Resources/views</argument>
        <argument>CocoricoReview</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ReviewBundle/Resources/views</argument>
        <argument>!CocoricoReview</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ConfigBundle/Resources/views</argument>
        <argument>CocoricoConfig</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ConfigBundle/Resources/views</argument>
        <argument>!CocoricoConfig</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/TimeBundle/Resources/views</argument>
        <argument>CocoricoTime</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/TimeBundle/Resources/views</argument>
        <argument>!CocoricoTime</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Cocorico\CoreBundle\Twig\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <call method="setCheckTranslation">
        <argument>false</argument>
      </call>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/cocorico/app</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="jms_i18n_routing.router"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception:showAction</argument>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id="service_locator.0nzls3h"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.loader.filesystem" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <argument>/cocorico</argument>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/app/Resources/TwigBundle/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/jms/translation-bundle/JMS/TranslationBundle/Resources/views</argument>
        <argument>JMSTranslation</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/jms/translation-bundle/JMS/TranslationBundle/Resources/views</argument>
        <argument>!JMSTranslation</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>!FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/doctrine/mongodb-odm-bundle/Resources/views</argument>
        <argument>DoctrineMongoDB</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/doctrine/mongodb-odm-bundle/Resources/views</argument>
        <argument>!DoctrineMongoDB</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/SonataAdminBundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
        <argument>!SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/core-bundle/src/Resources/views</argument>
        <argument>!SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/block-bundle/src/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/block-bundle/src/Resources/views</argument>
        <argument>!SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/doctrine-orm-admin-bundle/src/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/doctrine-orm-admin-bundle/src/Resources/views</argument>
        <argument>!SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/SonataUserBundle/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/sonata-project/user-bundle/src/Resources/views</argument>
        <argument>!SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/a2lix/translation-form-bundle/A2lix/TranslationFormBundle/Resources/views</argument>
        <argument>A2lixTranslationForm</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/a2lix/translation-form-bundle/A2lix/TranslationFormBundle/Resources/views</argument>
        <argument>!A2lixTranslationForm</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/liip/imagine-bundle/Resources/views</argument>
        <argument>LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/liip/imagine-bundle/Resources/views</argument>
        <argument>!LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/willdurand/geocoder-bundle/Resources/views</argument>
        <argument>BazingaGeocoder</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/willdurand/geocoder-bundle/Resources/views</argument>
        <argument>!BazingaGeocoder</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/MessageBundle/Resources/views</argument>
        <argument>FOSMessage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/views</argument>
        <argument>FOSMessage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/views</argument>
        <argument>!FOSMessage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>!KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/whiteoctober/breadcrumbs-bundle/WhiteOctober/BreadcrumbsBundle/Resources/views</argument>
        <argument>WhiteOctoberBreadcrumbs</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/whiteoctober/breadcrumbs-bundle/WhiteOctober/BreadcrumbsBundle/Resources/views</argument>
        <argument>!WhiteOctoberBreadcrumbs</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/views</argument>
        <argument>HWIOAuth</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/hwi/oauth-bundle/Resources/views</argument>
        <argument>!HWIOAuth</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/egeloen/ckeditor-bundle/Resources/views</argument>
        <argument>IvoryCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/egeloen/ckeditor-bundle/Resources/views</argument>
        <argument>!IvoryCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/helios-ag/fm-elfinder-bundle/Resources/views</argument>
        <argument>FMElfinder</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/helios-ag/fm-elfinder-bundle/Resources/views</argument>
        <argument>!FMElfinder</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/views</argument>
        <argument>SimpleThingsEntityAudit</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/views</argument>
        <argument>!SimpleThingsEntityAudit</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/CoreBundle/Resources/views</argument>
        <argument>CocoricoCore</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/CoreBundle/Resources/views</argument>
        <argument>!CocoricoCore</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/GeoBundle/Resources/views</argument>
        <argument>CocoricoGeo</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/GeoBundle/Resources/views</argument>
        <argument>!CocoricoGeo</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/UserBundle/Resources/views</argument>
        <argument>CocoricoUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/UserBundle/Resources/views</argument>
        <argument>!CocoricoUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/PageBundle/Resources/views</argument>
        <argument>CocoricoPage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/PageBundle/Resources/views</argument>
        <argument>!CocoricoPage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/CMSBundle/Resources/views</argument>
        <argument>CocoricoCMS</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/CMSBundle/Resources/views</argument>
        <argument>!CocoricoCMS</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/BreadcrumbBundle/Resources/views</argument>
        <argument>CocoricoBreadcrumb</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/BreadcrumbBundle/Resources/views</argument>
        <argument>!CocoricoBreadcrumb</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/SonataAdminBundle/Resources/views</argument>
        <argument>CocoricoSonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/SonataUserBundle/Resources/views</argument>
        <argument>CocoricoSonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/MessageBundle/Resources/views</argument>
        <argument>CocoricoMessage</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ContactBundle/Resources/views</argument>
        <argument>CocoricoContact</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ContactBundle/Resources/views</argument>
        <argument>!CocoricoContact</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ReviewBundle/Resources/views</argument>
        <argument>CocoricoReview</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ReviewBundle/Resources/views</argument>
        <argument>!CocoricoReview</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ConfigBundle/Resources/views</argument>
        <argument>CocoricoConfig</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/ConfigBundle/Resources/views</argument>
        <argument>!CocoricoConfig</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/TimeBundle/Resources/views</argument>
        <argument>CocoricoTime</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/src/Cocorico/TimeBundle/Resources/views</argument>
        <argument>!CocoricoTime</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
      <call method="addPath">
        <argument>/cocorico/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
    </service>
    <service id="templating.engine.twig" class="Symfony\Bundle\TwigBundle\TwigEngine" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/cocorico</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\RotatingFileHandler">
      <argument>/cocorico/var/logs/dev.log</argument>
      <argument>0</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
      <call method="setFilenameFormat">
        <argument>{filename}-{date}</argument>
        <argument>Y-m-d</argument>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~ncuwxu6" class="Swift_Transport_Esmtp_Auth_NTLMAuthenticator" public="false"/>
    <service id="3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~ncuwxu6" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id="2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~ncuwxu6" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id="1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~ncuwxu6" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id="1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~ncuwxu6"/>
        <argument type="service" id="2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~ncuwxu6"/>
        <argument type="service" id="3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~ncuwxu6"/>
        <argument type="service" id="4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~ncuwxu6"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument>/cocorico/app/../data/swiftmailer/spool</argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.command.debug" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand">
      <tag name="console.command" command="debug:swiftmailer"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="swiftmailer.command.new_email" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand">
      <tag name="console.command" command="swiftmailer:email:send"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="swiftmailer.command.send_email" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand">
      <tag name="console.command" command="swiftmailer:spool:send"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default.transport.authhandler" class="Swift_Transport_Esmtp_AuthHandler" public="false">
      <argument type="collection">
        <argument type="service" id="1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~ncuwxu6"/>
        <argument type="service" id="2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~ncuwxu6"/>
        <argument type="service" id="3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~ncuwxu6"/>
        <argument type="service" id="4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~ncuwxu6"/>
      </argument>
      <call method="setUsername">
        <argument>null</argument>
      </call>
      <call method="setPassword">
        <argument>null</argument>
      </call>
      <call method="setAuthMode">
        <argument>null</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.buffer" class="Swift_Transport_StreamBuffer" public="false">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.configurator.default" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false">
      <argument>null</argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.smtp" class="Swift_Transport_EsmtpTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.buffer"/>
      <argument type="collection">
        <argument type="service" id="swiftmailer.mailer.default.transport.authhandler"/>
      </argument>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <call method="setHost">
        <argument>127.0.0.1</argument>
      </call>
      <call method="setPort">
        <argument>25</argument>
      </call>
      <call method="setEncryption">
        <argument>null</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
      <configurator service="swiftmailer.transport.configurator.default" method="configure"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer" public="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.default.spool.file" class="Swift_FileSpool" public="false">
      <argument>/cocorico/app/spool/default</argument>
    </service>
    <service id="swiftmailer.mailer.default.transport.spool" class="Swift_Transport_SpoolTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool.file"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="assetic.filter_manager" class="Symfony\Bundle\AsseticBundle\FilterManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="cssrewrite">assetic.filter.cssrewrite</argument>
        <argument key="minifycsscompressor">assetic.filter.minifycsscompressor</argument>
        <argument key="jsqueeze">assetic.filter.jsqueeze</argument>
      </argument>
    </service>
    <service id="assetic.asset_manager" class="Assetic\Factory\LazyAssetManager">
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="collection">
        <argument key="twig" type="service" id="assetic.twig_formula_loader"/>
      </argument>
      <call method="addResource">
        <argument type="service" id="assetic.twig_directory_resource.CocoricoCoreBundle"/>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service" id="assetic.twig_directory_resource.CocoricoUserBundle"/>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service" id="assetic.twig_directory_resource.kernel"/>
        <argument>twig</argument>
      </call>
    </service>
    <service id="assetic.asset_factory" class="Symfony\Bundle\AsseticBundle\Factory\AssetFactory" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="assetic.parameter_bag"/>
      <argument>/cocorico/app/../web</argument>
      <argument>true</argument>
    </service>
    <service id="assetic.config_cache" class="Assetic\Cache\ConfigCache" public="false">
      <argument>/cocorico/var/cache/dev/assetic/config</argument>
    </service>
    <service id="assetic.asset_manager_cache_warmer" class="Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="10"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="assetic.worker.ensure_filter" class="Assetic\Factory\Worker\EnsureFilterWorker" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assetic.worker.cache_busting" class="Assetic\Factory\Worker\CacheBustingWorker" public="false"/>
    <service id="assetic.parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ParameterBag" public="false">
      <factory service="service_container" method="getParameterBag"/>
    </service>
    <service id="assetic.value_supplier.default" class="Symfony\Bundle\AsseticBundle\DefaultValueSupplier" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="assetic.twig_extension" class="Symfony\Bundle\AsseticBundle\Twig\AsseticExtension" public="false">
      <tag name="twig.extension"/>
      <tag name="assetic.templating.twig"/>
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="service" id="templating.name_parser"/>
      <argument>false</argument>
      <argument type="collection"/>
      <argument>%assetic.bundles%</argument>
      <argument type="service" id="assetic.value_supplier.default" on-invalid="null"/>
    </service>
    <service id="assetic.twig_formula_loader" class="Assetic\Factory\Loader\CachedFormulaLoader" public="false">
      <tag name="assetic.formula_loader" alias="twig"/>
      <tag name="assetic.templating.twig"/>
      <argument type="service" id="assetic.twig_formula_loader.real"/>
      <argument type="service" id="assetic.config_cache"/>
      <argument>true</argument>
    </service>
    <service id="assetic.twig_formula_loader.real" class="Assetic\Extension\Twig\TwigFormulaLoader" public="false">
      <tag name="assetic.templating.twig"/>
      <tag name="monolog.logger" channel="assetic"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="monolog.logger.assetic" on-invalid="ignore"/>
    </service>
    <service id="assetic.filter.cssrewrite" class="Assetic\Filter\CssRewriteFilter">
      <tag name="assetic.filter" alias="cssrewrite"/>
    </service>
    <service id="assetic.filter.minifycsscompressor" class="Assetic\Filter\MinifyCssCompressorFilter">
      <tag name="assetic.filter" alias="minifycsscompressor"/>
    </service>
    <service id="assetic.filter.jsqueeze" class="Assetic\Filter\JSqueezeFilter">
      <tag name="assetic.filter" alias="jsqueeze"/>
      <call method="setSingleLine">
        <argument>true</argument>
      </call>
      <call method="keepImportantComments">
        <argument>true</argument>
      </call>
      <call method="setSpecialVarRx">
        <argument>false</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_class" class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_dir" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="cocorico.listing_param_converter"/>
        <argument>0</argument>
        <argument>listing</argument>
      </call>
      <call method="add">
        <argument type="service" id="cocorico.listing_availability_param_converter"/>
        <argument>-1</argument>
        <argument>listing_availability</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter" public="false">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter" public="false">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter" public="false">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="doctrine_cache.abstract.apc" class="Doctrine\Common\Cache\ApcCache" abstract="true"/>
    <service id="doctrine_cache.abstract.apcu" class="Doctrine\Common\Cache\ApcuCache" abstract="true"/>
    <service id="doctrine_cache.abstract.array" class="Doctrine\Common\Cache\ArrayCache" abstract="true"/>
    <service id="doctrine_cache.abstract.chain" class="Doctrine\Common\Cache\ChainCache" abstract="true"/>
    <service id="doctrine_cache.abstract.couchbase" class="Doctrine\Common\Cache\CouchbaseCache" abstract="true"/>
    <service id="doctrine_cache.abstract.file_system" class="Doctrine\Common\Cache\FilesystemCache" abstract="true"/>
    <service id="doctrine_cache.abstract.php_file" class="Doctrine\Common\Cache\PhpFileCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcache" class="Doctrine\Common\Cache\MemcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcached" class="Doctrine\Common\Cache\MemcachedCache" abstract="true"/>
    <service id="doctrine_cache.abstract.mongodb" class="Doctrine\Common\Cache\MongoDBCache" abstract="true"/>
    <service id="doctrine_cache.abstract.redis" class="Doctrine\Common\Cache\RedisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.predis" class="Doctrine\Common\Cache\PredisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.riak" class="Doctrine\Common\Cache\RiakCache" abstract="true"/>
    <service id="doctrine_cache.abstract.sqlite3" class="Doctrine\Common\Cache\SQLite3Cache" abstract="true"/>
    <service id="doctrine_cache.abstract.void" class="Doctrine\Common\Cache\VoidCache" abstract="true"/>
    <service id="doctrine_cache.abstract.wincache" class="Doctrine\Common\Cache\WinCacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.xcache" class="Doctrine\Common\Cache\XcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.zenddata" class="Doctrine\Common\Cache\ZendDataCache" abstract="true"/>
    <service id="doctrine_cache.contains_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.delete_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.flush_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.stats_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.generate_entities_command" class="Doctrine\Bundle\DoctrineBundle\Command\GenerateEntitiesDoctrineCommand">
      <tag name="console.command" command="doctrine:generate:entities"/>
      <call method="setName">
        <argument>doctrine:generate:entities</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id="service_container"/>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.tree"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="sonata.easy_extends.doctrine.mapper"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="doctrine.orm.listeners.resolve_target_entity"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="fos_user.user_listener"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="knp.doctrine_behaviors.sluggable_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="cocorico_user.user_entity_listener"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="knp.doctrine_behaviors.loggable_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="knp.doctrine_behaviors.translatable_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="knp.doctrine_behaviors.sortable_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="knp.doctrine_behaviors.blameable_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="knp.doctrine_behaviors.tree_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="knp.doctrine_behaviors.timestampable_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="knp.doctrine_behaviors.softdeletable_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="simplethings_entityaudit.log_revisions_listener"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="knp.doctrine_behaviors.geocodable_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="simplethings_entityaudit.create_schema_listener"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="cocorico.booking_user_address_entity_listener"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">172.19.0.2</argument>
        <argument key="port">3306</argument>
        <argument key="dbname">costocking_dev</argument>
        <argument key="user">cocorico</argument>
        <argument key="password">cocorico</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id="service_locator.sr6ctxe"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Cocorico\CoreBundle\Listener\ResolveTargetEntityListener" public="false">
      <tag name="doctrine.event_subscriber"/>
      <call method="addResolveTargetEntity">
        <argument>Cocorico\CoreBundle\Model\ListingOptionInterface</argument>
        <argument>none</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Cocorico\CoreBundle\Model\BookingOptionInterface</argument>
        <argument>none</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Cocorico\CoreBundle\Model\ListingCategoryFieldInterface</argument>
        <argument>none</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Cocorico\CoreBundle\Model\ListingCategoryFieldValueInterface</argument>
        <argument>none</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Cocorico\CoreBundle\Model\ListingCategoryListingCategoryFieldInterface</argument>
        <argument>none</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Cocorico\CoreBundle\Model\BookingDepositRefundInterface</argument>
        <argument>none</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Cocorico\UserBundle\Model\ListingAlertInterface</argument>
        <argument>none</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Cocorico\UserBundle\Model\BookingDepositRefundAsAskerInterface</argument>
        <argument>none</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Cocorico\UserBundle\Model\BookingDepositRefundAsOffererInterface</argument>
        <argument>none</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Cocorico\UserBundle\Model\UserCardInterface</argument>
        <argument>none</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="GedmoTree">Gedmo\Tree\Entity</argument>
          <argument key="SonataUserBundle">Sonata\UserBundle\Entity</argument>
          <argument key="LexikCurrencyBundle">Lexik\Bundle\CurrencyBundle\Entity</argument>
          <argument key="FOSMessageBundle">FOS\MessageBundle\Entity</argument>
          <argument key="CocoricoCoreBundle">Cocorico\CoreBundle\Entity</argument>
          <argument key="CocoricoGeoBundle">Cocorico\GeoBundle\Entity</argument>
          <argument key="CocoricoUserBundle">Cocorico\UserBundle\Entity</argument>
          <argument key="CocoricoPageBundle">Cocorico\PageBundle\Entity</argument>
          <argument key="CocoricoCMSBundle">Cocorico\CMSBundle\Entity</argument>
          <argument key="CocoricoMessageBundle">Cocorico\MessageBundle\Entity</argument>
          <argument key="CocoricoContactBundle">Cocorico\ContactBundle\Entity</argument>
          <argument key="CocoricoReviewBundle">Cocorico\ReviewBundle\Entity</argument>
          <argument key="CocoricoConfigBundle">Cocorico\ConfigBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/cocorico/var/cache/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.default"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
      <call method="addCustomStringFunction">
        <argument>CAST</argument>
        <argument>Cocorico\CoreBundle\DQL\CastFunction</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>GEO_DISTANCE</argument>
        <argument>Cocorico\CoreBundle\DQL\GeoDistanceFunction</argument>
      </call>
      <call method="addCustomDatetimeFunction">
        <argument>DATE_FORMAT</argument>
        <argument>Cocorico\CoreBundle\DQL\DateFormatFunction</argument>
      </call>
      <call method="addCustomDatetimeFunction">
        <argument>TIME_DIFF</argument>
        <argument>Cocorico\CoreBundle\DQL\TimeDiffFunction</argument>
      </call>
      <call method="addCustomDatetimeFunction">
        <argument>TIMESTAMP_DIFF</argument>
        <argument>Cocorico\CoreBundle\DQL\TimestampDiffFunction</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/cocorico/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity</argument>
        <argument>/cocorico/src/Cocorico/CoreBundle/Entity</argument>
        <argument>/cocorico/src/Cocorico/GeoBundle/Entity</argument>
        <argument>/cocorico/src/Cocorico/UserBundle/Entity</argument>
        <argument>/cocorico/src/Cocorico/PageBundle/Entity</argument>
        <argument>/cocorico/src/Cocorico/CMSBundle/Entity</argument>
        <argument>/cocorico/src/Cocorico/MessageBundle/Entity</argument>
        <argument>/cocorico/src/Cocorico/ContactBundle/Entity</argument>
        <argument>/cocorico/src/Cocorico/ReviewBundle/Entity</argument>
        <argument>/cocorico/src/Cocorico/ConfigBundle/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_xml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
      <argument type="collection">
        <argument key="/cocorico/vendor/sonata-project/user-bundle/src/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
        <argument key="/cocorico/vendor/lexik/currency-bundle/Resources/config/doctrine">Lexik\Bundle\CurrencyBundle\Entity</argument>
        <argument key="/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/config/doctrine">FOS\MessageBundle\Entity</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Gedmo\Tree\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Cocorico\CoreBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Cocorico\GeoBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Cocorico\UserBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Cocorico\PageBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Cocorico\CMSBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Cocorico\MessageBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Cocorico\ContactBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Cocorico\ReviewBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Cocorico\ConfigBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Sonata\UserBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Lexik\Bundle\CurrencyBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>FOS\MessageBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service">
          <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                <argument type="collection">
                  <argument key="/cocorico/vendor/friendsofsymfony/user-bundle/Resources/config/doctrine-mapping">FOS\UserBundle\Model</argument>
                </argument>
                <argument>.orm.xml</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument>FOS\UserBundle\Model</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf_orm_default_d1a6e31563d7ed697ada65a73a33a9a5681f2b3bc7ffda952a9da1be315bf4e8</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf_orm_default_d1a6e31563d7ed697ada65a73a33a9a5681f2b3bc7ffda952a9da1be315bf4e8</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf_orm_default_d1a6e31563d7ed697ada65a73a33a9a5681f2b3bc7ffda952a9da1be315bf4e8</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver" public="true">
      <argument type="service" id="service_container"/>
      <call method="register">
        <argument type="service" id="cocorico.review.listener"/>
      </call>
      <call method="register">
        <argument type="service" id="cocorico.review.listener"/>
      </call>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="EntityManager5cf912c9b08d5_546a8d27f194334ee012bfe64f629947b07e4919\__CG__\Doctrine\ORM\EntityManager">
      <file>/cocorico/var/cache/dev/jms_diextra/doctrine/EntityManager_5cf912c9b08d5.php</file>
      <argument type="service" id="doctrine.orm.default_entity_manager.delegate"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.metadata_factory" class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager.metadata_factory"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="jms_i18n_routing.locale_resolver.default" class="JMS\I18nRoutingBundle\Router\DefaultLocaleResolver" public="false">
      <argument>hl</argument>
    </service>
    <service id="jms_i18n_routing.router" class="JMS\I18nRoutingBundle\Router\I18nRouter" public="false">
      <argument type="service" id="service_container"/>
      <argument>/cocorico/app/config/routing_dev.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/cocorico/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setLocaleResolver">
        <argument type="service" id="jms_i18n_routing.locale_resolver.default"/>
      </call>
      <call method="setI18nLoaderId">
        <argument>jms_i18n_routing.loader</argument>
      </call>
      <call method="setDefaultLocale">
        <argument>fr</argument>
      </call>
      <call method="setRedirectToHost">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_i18n_routing.locale_choosing_listener" class="JMS\I18nRoutingBundle\EventListener\LocaleChoosingListener" public="true">
      <tag name="kernel.event_listener" event="kernel.exception" priority="128"/>
      <argument>fr</argument>
      <argument>%jms_i18n_routing.locales%</argument>
      <argument type="service" id="jms_i18n_routing.locale_resolver.default"/>
    </service>
    <service id="jms_i18n_routing.cookie_setting_listener" class="JMS\I18nRoutingBundle\EventListener\CookieSettingListener" public="true">
      <tag name="kernel.event_listener" event="kernel.response" priority="256"/>
      <tag name="container.hot_path"/>
      <argument>hl</argument>
      <argument>31536000</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="jms_i18n_routing.route_exclusion_strategy" class="JMS\I18nRoutingBundle\Router\DefaultRouteExclusionStrategy" public="false"/>
    <service id="jms_i18n_routing.pattern_generation_strategy.default" class="JMS\I18nRoutingBundle\Router\DefaultPatternGenerationStrategy" public="false">
      <argument>prefix</argument>
      <argument type="service" id="translator.data_collector"/>
      <argument>%jms_i18n_routing.locales%</argument>
      <argument>/cocorico/var/cache/dev</argument>
      <argument>routes</argument>
      <argument>fr</argument>
    </service>
    <service id="jms_i18n_routing.loader" class="JMS\I18nRoutingBundle\Router\I18nLoader" public="true">
      <argument type="service" id="jms_i18n_routing.route_exclusion_strategy"/>
      <argument type="service" id="jms_i18n_routing.pattern_generation_strategy.default"/>
    </service>
    <service id="jms_i18n_routing.route_translation_extractor" class="JMS\I18nRoutingBundle\Translation\RouteTranslationExtractor" public="false">
      <tag name="jms_translation.extractor" alias="jms_i18n_routing"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="jms_i18n_routing.route_exclusion_strategy"/>
    </service>
    <service id="jms_translation.updater" class="JMS\TranslationBundle\Translation\Updater">
      <argument type="service" id="jms_translation.loader_manager"/>
      <argument type="service" id="jms_translation.extractor_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="jms_translation.file_writer"/>
    </service>
    <service id="jms_translation.config_factory" class="JMS\TranslationBundle\Translation\ConfigFactory">
      <argument type="collection">
        <argument key="cocorico" type="service">
          <service class="JMS\TranslationBundle\Translation\ConfigBuilder">
            <call method="setTranslationsDir">
              <argument>/cocorico/app/Resources/translations</argument>
            </call>
            <call method="setScanDirs">
              <argument type="collection">
                <argument>/cocorico/app</argument>
                <argument>/cocorico/app/../src</argument>
              </argument>
            </call>
            <call method="setIgnoredDomains">
              <argument type="collection"/>
            </call>
            <call method="setDomains">
              <argument type="collection"/>
            </call>
            <call method="setEnabledExtractors">
              <argument type="collection">
                <argument key="jms_i18n_routing">true</argument>
                <argument key="cocorico_breadcrumbs">true</argument>
                <argument key="sonata_admin">true</argument>
              </argument>
            </call>
            <call method="setExcludedDirs">
              <argument type="collection">
                <argument>cache</argument>
                <argument>data</argument>
                <argument>logs</argument>
                <argument>Tests</argument>
              </argument>
            </call>
            <call method="setExcludedNames">
              <argument type="collection">
                <argument>*TestCase.php</argument>
                <argument>*Test.php</argument>
                <argument>TranslationExtension.php</argument>
              </argument>
            </call>
            <call method="setKeepOldTranslations">
              <argument>false</argument>
            </call>
            <call method="setLoadResources">
              <argument type="collection"/>
            </call>
          </service>
        </argument>
      </argument>
    </service>
    <service id="jms_translation.file_source_factory" class="JMS\TranslationBundle\Translation\FileSourceFactory">
      <argument>/cocorico/app</argument>
    </service>
    <service id="jms_translation.file_writer" class="JMS\TranslationBundle\Translation\FileWriter" public="false">
      <argument type="collection">
        <argument key="php" type="service" id="jms_translation.dumper.php_dumper"/>
        <argument key="xlf" type="service" id="jms_translation.dumper.xlf_dumper"/>
        <argument key="po" type="service" id="jms_translation.dumper.wrapped_symfony_dumper.2"/>
        <argument key="mo" type="service" id="jms_translation.dumper.wrapped_symfony_dumper.3"/>
        <argument key="yml" type="service" id="jms_translation.dumper.yaml_dumper"/>
        <argument key="yaml" type="service" id="jms_translation.dumper.wrapped_symfony_dumper.5"/>
        <argument key="ts" type="service" id="jms_translation.dumper.wrapped_symfony_dumper.6"/>
        <argument key="csv" type="service" id="jms_translation.dumper.wrapped_symfony_dumper.7"/>
        <argument key="ini" type="service" id="jms_translation.dumper.wrapped_symfony_dumper.8"/>
        <argument key="json" type="service" id="jms_translation.dumper.wrapped_symfony_dumper.9"/>
        <argument key="res" type="service" id="jms_translation.dumper.wrapped_symfony_dumper.10"/>
        <argument key="xliff" type="service" id="jms_translation.dumper.xliff_dumper"/>
      </argument>
    </service>
    <service id="jms_translation.loader.symfony_adapter" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false" abstract="true"/>
    <service id="jms_translation.loader_manager" class="JMS\TranslationBundle\Translation\LoaderManager">
      <argument type="collection">
        <argument key="php" type="service" id="jms_translation.loader.wrapped_symfony_loader.0"/>
        <argument key="yaml" type="service" id="jms_translation.loader.wrapped_symfony_loader.1"/>
        <argument key="xlf" type="service" id="jms_translation.loader.wrapped_symfony_loader.2"/>
        <argument key="po" type="service" id="jms_translation.loader.wrapped_symfony_loader.3"/>
        <argument key="mo" type="service" id="jms_translation.loader.wrapped_symfony_loader.4"/>
        <argument key="ts" type="service" id="jms_translation.loader.wrapped_symfony_loader.5"/>
        <argument key="csv" type="service" id="jms_translation.loader.wrapped_symfony_loader.6"/>
        <argument key="res" type="service" id="jms_translation.loader.wrapped_symfony_loader.7"/>
        <argument key="dat" type="service" id="jms_translation.loader.wrapped_symfony_loader.8"/>
        <argument key="ini" type="service" id="jms_translation.loader.wrapped_symfony_loader.9"/>
        <argument key="json" type="service" id="jms_translation.loader.wrapped_symfony_loader.10"/>
        <argument key="xliff" type="service" id="jms_translation.loader.xliff_loader"/>
      </argument>
    </service>
    <service id="jms_translation.loader.xliff_loader" class="JMS\TranslationBundle\Translation\Loader\XliffLoader" public="false">
      <tag name="jms_translation.loader" format="xliff"/>
    </service>
    <service id="jms_translation.dumper.php_dumper" class="JMS\TranslationBundle\Translation\Dumper\PhpDumper" public="false">
      <tag name="jms_translation.dumper" format="php"/>
    </service>
    <service id="jms_translation.dumper.xliff_dumper" class="JMS\TranslationBundle\Translation\Dumper\XliffDumper" public="false">
      <tag name="jms_translation.dumper" format="xliff"/>
      <call method="setSourceLanguage">
        <argument>en</argument>
      </call>
      <call method="setAddDate">
        <argument>false</argument>
      </call>
      <call method="setAddReference">
        <argument>false</argument>
      </call>
    </service>
    <service id="jms_translation.dumper.xlf_dumper" class="JMS\TranslationBundle\Translation\Dumper\XliffDumper" public="false">
      <tag name="jms_translation.dumper" format="xlf"/>
      <call method="setSourceLanguage">
        <argument>en</argument>
      </call>
      <call method="setAddDate">
        <argument>false</argument>
      </call>
      <call method="setAddReference">
        <argument>false</argument>
      </call>
    </service>
    <service id="jms_translation.dumper.yaml_dumper" class="JMS\TranslationBundle\Translation\Dumper\YamlDumper" public="false">
      <tag name="jms_translation.dumper" format="yml"/>
    </service>
    <service id="jms_translation.dumper.symfony_adapter" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false" abstract="true"/>
    <service id="jms_translation.extractor_manager" class="JMS\TranslationBundle\Translation\ExtractorManager" public="false">
      <argument type="service" id="jms_translation.extractor.file_extractor"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="collection">
        <argument key="jms_i18n_routing" type="service" id="jms_i18n_routing.route_translation_extractor"/>
        <argument key="sonata_admin" type="service" id="sonata.admin.translator.extractor.jms_translator_bundle"/>
        <argument key="cocorico_breadcrumbs" type="service" id="cocorico.translator.breadcrumbs_extractor"/>
      </argument>
    </service>
    <service id="jms_translation.extractor.file_extractor" class="JMS\TranslationBundle\Translation\Extractor\FileExtractor" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="collection">
        <argument type="service" id="cocorico.translator.entity.extractor"/>
        <argument type="service" id="cocorico.translator.admin.extractor"/>
        <argument type="service" id="jms_translation.extractor.file.default_php_extractor"/>
        <argument type="service" id="jms_translation.extractor.file.form_extractor"/>
        <argument type="service" id="jms_translation.extractor.file.translation_container_extractor"/>
        <argument type="service" id="jms_translation.extractor.file.twig_extractor"/>
        <argument type="service" id="jms_translation.extractor.file.validation_extractor"/>
        <argument type="service" id="jms_translation.extractor.file.authentication_message_extractor"/>
      </argument>
    </service>
    <service id="jms_translation.extractor.file.default_php_extractor" class="JMS\TranslationBundle\Translation\Extractor\File\DefaultPhpFileExtractor" public="false">
      <tag name="jms_translation.file_visitor"/>
      <argument type="service" id="jms_translation.doc_parser"/>
      <argument type="service" id="jms_translation.file_source_factory"/>
    </service>
    <service id="jms_translation.extractor.file.form_extractor" class="JMS\TranslationBundle\Translation\Extractor\File\FormExtractor" public="false">
      <tag name="jms_translation.file_visitor"/>
      <argument type="service" id="jms_translation.doc_parser"/>
      <argument type="service" id="jms_translation.file_source_factory"/>
    </service>
    <service id="jms_translation.extractor.file.translation_container_extractor" class="JMS\TranslationBundle\Translation\Extractor\File\TranslationContainerExtractor" public="false">
      <tag name="jms_translation.file_visitor"/>
    </service>
    <service id="jms_translation.extractor.file.twig_extractor" class="JMS\TranslationBundle\Translation\Extractor\File\Twig2FileExtractor" public="false">
      <tag name="jms_translation.file_visitor"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="jms_translation.file_source_factory"/>
    </service>
    <service id="jms_translation.extractor.file.validation_extractor" class="JMS\TranslationBundle\Translation\Extractor\File\ValidationExtractor" public="false">
      <tag name="jms_translation.file_visitor"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="jms_translation.extractor.file.authentication_message_extractor" class="JMS\TranslationBundle\Translation\Extractor\File\AuthenticationMessagesExtractor" public="false">
      <tag name="jms_translation.file_visitor"/>
      <argument type="service" id="jms_translation.doc_parser"/>
      <argument type="service" id="jms_translation.file_source_factory"/>
    </service>
    <service id="jms_translation.doc_parser" class="Doctrine\Common\Annotations\DocParser" public="false">
      <call method="setImports">
        <argument type="collection">
          <argument key="desc">JMS\TranslationBundle\Annotation\Desc</argument>
          <argument key="meaning">JMS\TranslationBundle\Annotation\Meaning</argument>
          <argument key="ignore">JMS\TranslationBundle\Annotation\Ignore</argument>
        </argument>
      </call>
      <call method="setIgnoreNotImportedAnnotations">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_translation.twig_extension" class="JMS\TranslationBundle\Twig2\TranslationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>true</argument>
    </service>
    <service id="jms_aop.pointcut_container" class="JMS\AopBundle\Aop\PointcutContainer"/>
    <service id="jms_aop.interceptor_loader" class="JMS\AopBundle\Aop\InterceptorLoader">
      <argument type="service" id="service_container"/>
    </service>
    <service id="jms_di_extra.metadata.driver.annotation_driver" class="JMS\DiExtraBundle\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="jms_di_extra.service_naming_strategy.default"/>
    </service>
    <service id="jms_di_extra.service_naming_strategy.default" class="JMS\DiExtraBundle\Metadata\DefaultNamingStrategy" public="false"/>
    <service id="jms_di_extra.metadata.driver.configured_controller_injections" class="JMS\DiExtraBundle\Metadata\Driver\ConfiguredControllerInjectionsDriver" public="false">
      <argument type="service" id="jms_di_extra.metadata.driver.annotation_driver"/>
    </service>
    <service id="jms_di_extra.metadata.driver.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver" public="false">
      <argument type="service" id="service_container"/>
      <argument>jms_di_extra.metadata_driver</argument>
    </service>
    <service id="jms_di_extra.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>/cocorico/var/cache/dev/jms_diextra/metadata</argument>
    </service>
    <service id="jms_di_extra.metadata.metadata_factory" class="Metadata\MetadataFactory">
      <argument type="service" id="jms_di_extra.metadata.driver.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="jms_di_extra.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="jms_di_extra.metadata.converter" class="JMS\DiExtraBundle\Metadata\MetadataConverter"/>
    <service id="jms_di_extra.controller_resolver" class="JMS\DiExtraBundle\HttpKernel\ControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="jms_di_extra.controller_injectors_warmer" class="JMS\DiExtraBundle\HttpKernel\ControllerInjectorsWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="jms_di_extra.controller_resolver"/>
      <argument type="collection"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_user.user_manager.default" class="FOS\UserBundle\Doctrine\UserManager" public="false">
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
      <argument type="service" id="fos_user.object_manager"/>
      <argument>Cocorico\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.object_manager" class="Doctrine\Common\Persistence\ObjectManager" public="false">
      <argument>null</argument>
      <factory service="doctrine" method="getManager"/>
    </service>
    <service id="fos_user.user_listener" class="FOS\UserBundle\Doctrine\UserListener" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
    </service>
    <service id="fos_user.validator.initializer" class="FOS\UserBundle\Validator\Initializer" public="false">
      <tag name="validator.initializer"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\EventListener\LastLoginListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="cocorico_user.user_manager"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="fos_user.user_provider.username" class="FOS\UserBundle\Security\UserProvider" public="false">
      <argument type="service" id="cocorico_user.user_manager"/>
    </service>
    <service id="fos_user.user_provider.username_email" class="FOS\UserBundle\Security\EmailUserProvider" public="false">
      <argument type="service" id="cocorico_user.user_manager"/>
    </service>
    <service id="fos_user.util.canonicalizer.default" class="FOS\UserBundle\Util\Canonicalizer" public="false"/>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="cocorico_user.user_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fos_user.util.token_generator.default" class="FOS\UserBundle\Util\TokenGenerator" public="false"/>
    <service id="fos_user.util.password_updater" class="FOS\UserBundle\Util\PasswordUpdater" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="fos_user.util.canonical_fields_updater" class="FOS\UserBundle\Util\CanonicalFieldsUpdater" public="false">
      <argument type="service" id="fos_user.util.canonicalizer.default"/>
      <argument type="service" id="fos_user.util.canonicalizer.default"/>
    </service>
    <service id="fos_user.mailer.default" class="FOS\UserBundle\Mailer\Mailer" public="false">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="collection">
        <argument key="confirmation.template">@FOSUser/Registration/email.txt.twig</argument>
        <argument key="resetting.template">@FOSUser/Resetting/email.txt.twig</argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation">%fos_user.registration.confirmation.from_email%</argument>
          <argument key="resetting">%fos_user.resetting.email.from_email%</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.mailer.twig_swift" class="FOS\UserBundle\Mailer\TwigSwiftMailer" public="false">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="template" type="collection">
          <argument key="confirmation">@FOSUser/Registration/email.txt.twig</argument>
          <argument key="resetting">@FOSUser/Resetting/email.txt.twig</argument>
        </argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation">%fos_user.registration.confirmation.from_email%</argument>
          <argument key="resetting">%fos_user.resetting.email.from_email%</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.mailer.noop" class="FOS\UserBundle\Mailer\NoopMailer" public="false"/>
    <service id="fos_user.listener.authentication" class="FOS\UserBundle\EventListener\AuthenticationListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.security.login_manager"/>
      <argument>main</argument>
    </service>
    <service id="fos_user.listener.flash" class="FOS\UserBundle\EventListener\FlashListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service" id="fos_user.user_to_username_transformer"/>
    </service>
    <service id="fos_user.user_to_username_transformer" class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
      <argument type="service" id="cocorico_user.user_manager"/>
    </service>
    <service id="fos_user.profile.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>user_profile</argument>
      <argument>Cocorico\UserBundle\Form\Type\ProfileAboutMeFormType</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups">%fos_user.profile.form.validation_groups%</argument>
      </argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>Cocorico\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.registration.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>user_registration</argument>
      <argument>Cocorico\UserBundle\Form\Type\RegistrationFormType</argument>
      <argument>%fos_user.registration.form.validation_groups%</argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>Cocorico\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.change_password.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_change_password_form</argument>
      <argument>FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
      <argument>%fos_user.change_password.form.validation_groups%</argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
      <argument>Cocorico\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.resetting.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>user_resetting</argument>
      <argument>Cocorico\UserBundle\Form\Type\ResettingFormType</argument>
      <argument>%fos_user.resetting.form.validation_groups%</argument>
    </service>
    <service id="fos_user.resetting.form.type" class="Cocorico\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="user_resetting"/>
      <argument>Cocorico\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.listener.resetting" class="FOS\UserBundle\EventListener\ResettingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument>86400</argument>
    </service>
    <service id="fos_user.group.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_group_form</argument>
      <argument>FOS\UserBundle\Form\Type\GroupFormType</argument>
      <argument>%fos_user.group.form.validation_groups%</argument>
    </service>
    <service id="fos_user.group.form.type" class="FOS\UserBundle\Form\Type\GroupFormType">
      <tag name="form.type" alias="fos_user_group"/>
      <argument>Cocorico\UserBundle\Entity\Group</argument>
    </service>
    <service id="fos_user.group_manager.default" class="FOS\UserBundle\Doctrine\GroupManager" public="false">
      <argument type="service" id="fos_user.object_manager"/>
      <argument>Cocorico\UserBundle\Entity\Group</argument>
    </service>
    <service id="stof_doctrine_extensions.listener.timestampable" class="Gedmo\Timestampable\TimestampableListener" public="false">
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.blameable" class="Gedmo\Blameable\BlameableListener" public="false">
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.tree" class="Gedmo\Tree\TreeListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.sluggable" class="Gedmo\Sluggable\SluggableListener" public="false">
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.translatable" class="Gedmo\Translatable\TranslatableListener" public="false">
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="setDefaultLocale">
        <argument>fr</argument>
      </call>
      <call method="setTranslatableLocale">
        <argument>fr</argument>
      </call>
      <call method="setTranslationFallback">
        <argument>false</argument>
      </call>
      <call method="setPersistDefaultLocaleTranslation">
        <argument>false</argument>
      </call>
      <call method="setSkipOnLoad">
        <argument>false</argument>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.loggable" class="Gedmo\Loggable\LoggableListener" public="false">
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.sortable" class="Gedmo\Sortable\SortableListener" public="false">
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.softdeleteable" class="Gedmo\SoftDeleteable\SoftDeleteableListener" public="false">
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.uploadable" class="Gedmo\Uploadable\UploadableListener" public="false">
      <argument type="service" id="stof_doctrine_extensions.uploadable.mime_type_guesser"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="setDefaultFileInfoClass">
        <argument>Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.reference_integrity" class="Gedmo\ReferenceIntegrity\ReferenceIntegrityListener" public="false">
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.event_listener.locale" class="Stof\DoctrineExtensionsBundle\EventListener\LocaleListener" public="false">
      <argument type="service" id="stof_doctrine_extensions.listener.translatable"/>
    </service>
    <service id="stof_doctrine_extensions.event_listener.logger" class="Stof\DoctrineExtensionsBundle\EventListener\LoggerListener" public="false">
      <argument type="service" id="stof_doctrine_extensions.listener.loggable"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="stof_doctrine_extensions.event_listener.blame" class="Stof\DoctrineExtensionsBundle\EventListener\BlameListener" public="false">
      <argument type="service" id="stof_doctrine_extensions.listener.blameable"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="stof_doctrine_extensions.uploadable.mime_type_guesser" class="Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter" public="false"/>
    <service id="stof_doctrine_extensions.uploadable.manager" class="Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager">
      <argument type="service" id="stof_doctrine_extensions.listener.uploadable"/>
      <argument>Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\ClearMetadataCacheDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\ClearMetadataCacheDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\CreateSchemaDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\CreateSchemaDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\DropSchemaDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\DropSchemaDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\GenerateDocumentsDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\GenerateDocumentsDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\GenerateHydratorsDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\GenerateHydratorsDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\GenerateProxiesDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\GenerateProxiesDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\InfoDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\InfoDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\LoadDataFixturesDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\LoadDataFixturesDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\QueryDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\QueryDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\ShardDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\ShardDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\TailCursorDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\TailCursorDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="Doctrine\Bundle\MongoDBBundle\Command\UpdateSchemaDoctrineODMCommand" class="Doctrine\Bundle\MongoDBBundle\Command\UpdateSchemaDoctrineODMCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_mongodb.odm.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="form.type.mongodb_document" class="Doctrine\Bundle\MongoDBBundle\Form\Type\DocumentType">
      <tag name="form.type" alias="document"/>
      <argument type="service" id="doctrine_mongodb"/>
    </service>
    <service id="form.type_guesser.doctrine.mongodb" class="Doctrine\Bundle\MongoDBBundle\Form\DoctrineMongoDBTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine_mongodb"/>
    </service>
    <service id="doctrine_mongodb.odm.metadata.chain" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain"/>
    <service id="doctrine_mongodb.odm.metadata.annotation" class="Doctrine\ODM\MongoDB\Mapping\Driver\AnnotationDriver">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine_mongodb.odm.metadata.xml" class="Doctrine\Bundle\MongoDBBundle\Mapping\Driver\XmlDriver">
      <argument type="collection"/>
    </service>
    <service id="doctrine_mongodb.odm.metadata.yml" class="Doctrine\Bundle\MongoDBBundle\Mapping\Driver\YamlDriver">
      <argument type="collection"/>
    </service>
    <service id="doctrine_mongodb.odm.manager_configurator.abstract" class="Doctrine\Bundle\MongoDBBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
    </service>
    <service id="doctrine_mongodb.odm.cache.array" class="Doctrine\Common\Cache\ArrayCache"/>
    <service id="doctrine_mongodb.odm.logger" class="Doctrine\Bundle\MongoDBBundle\Logger\Logger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <call method="setBatchInsertThreshold">
        <argument>4</argument>
      </call>
    </service>
    <service id="doctrine_mongodb.odm.logger.aggregate" class="Doctrine\Bundle\MongoDBBundle\Logger\AggregateLogger" public="false">
      <argument type="collection">
        <argument type="service" id="doctrine_mongodb.odm.logger"/>
        <argument type="service" id="doctrine_mongodb.odm.data_collector.pretty"/>
      </argument>
    </service>
    <service id="doctrine_mongodb.odm.data_collector.standard" class="Doctrine\Bundle\MongoDBBundle\DataCollector\StandardDataCollector" public="false"/>
    <service id="doctrine_mongodb.odm.data_collector.pretty" class="Doctrine\Bundle\MongoDBBundle\DataCollector\PrettyDataCollector" public="false">
      <tag name="data_collector" id="mongodb" template="@DoctrineMongoDB/Collector/mongodb.html.twig"/>
      <call method="setBatchInsertThreshold">
        <argument>4</argument>
      </call>
    </service>
    <service id="doctrine_mongodb.odm.proxy_cache_warmer" class="Doctrine\Bundle\MongoDBBundle\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="25"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_mongodb.odm.hydrator_cache_warmer" class="Doctrine\Bundle\MongoDBBundle\CacheWarmer\HydratorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="25"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_mongodb.odm.persistent_collection_cache_warmer" class="Doctrine\Bundle\MongoDBBundle\CacheWarmer\PersistentCollectionCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="25"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_odm.mongodb.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine_odm.mongodb.unique"/>
      <argument type="service" id="doctrine_mongodb"/>
    </service>
    <service id="doctrine_odm.mongodb.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine_mongodb"/>
    </service>
    <service id="doctrine_mongodb.odm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine_mongodb"/>
    </service>
    <service id="doctrine_mongodb" class="Doctrine\Bundle\MongoDBBundle\ManagerRegistry" public="true">
      <argument>MongoDB</argument>
      <argument>%doctrine_mongodb.odm.connections%</argument>
      <argument>%doctrine_mongodb.odm.document_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
      <argument>Doctrine\ODM\MongoDB\Proxy\Proxy</argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_mongodb.odm.listeners.resolve_target_document" class="Doctrine\ODM\MongoDB\Tools\ResolveTargetDocumentListener" public="false"/>
    <service id="doctrine_mongodb.odm.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_mongodb.odm.default_connection" class="Doctrine\MongoDB\Connection" public="true">
      <argument>mongodb://172.19.0.2:27017</argument>
      <argument type="collection"/>
      <argument type="service" id="doctrine_mongodb.odm.default_configuration"/>
      <argument type="service" id="doctrine_mongodb.odm.default_connection.event_manager"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine_mongodb.odm.default_configuration" class="Doctrine\ODM\MongoDB\Configuration">
      <call method="setDocumentNamespaces">
        <argument type="collection">
          <argument key="SonataUserBundle">Sonata\UserBundle\Document</argument>
          <argument key="FOSMessageBundle">FOS\MessageBundle\Document</argument>
          <argument key="CocoricoCoreBundle">Cocorico\CoreBundle\Document</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine_mongodb.odm.default_metadata_cache"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine_mongodb.odm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/cocorico/var/cache/dev/doctrine/odm/mongodb/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>MongoDBODMProxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>0</argument>
      </call>
      <call method="setHydratorDir">
        <argument>/cocorico/var/cache/dev/doctrine/odm/mongodb/Hydrators</argument>
      </call>
      <call method="setHydratorNamespace">
        <argument>Hydrators</argument>
      </call>
      <call method="setAutoGenerateHydratorClasses">
        <argument>0</argument>
      </call>
      <call method="setDefaultDB">
        <argument>costocking_dev</argument>
      </call>
      <call method="setDefaultCommitOptions">
        <argument type="collection"/>
      </call>
      <call method="setRetryConnect">
        <argument>0</argument>
      </call>
      <call method="setRetryQuery">
        <argument>0</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ODM\MongoDB\DocumentRepository</argument>
      </call>
      <call method="setPersistentCollectionDir">
        <argument>/cocorico/var/cache/dev/doctrine/odm/mongodb/PersistentCollections</argument>
      </call>
      <call method="setPersistentCollectionNamespace">
        <argument>PersistentCollections</argument>
      </call>
      <call method="setAutoGeneratePersistentCollectionClasses">
        <argument>0</argument>
      </call>
      <call method="setLoggerCallable">
        <argument type="collection">
          <argument type="service" id="doctrine_mongodb.odm.logger.aggregate"/>
          <argument>logQuery</argument>
        </argument>
      </call>
    </service>
    <service id="doctrine_mongodb.odm.default_xml_metadata_driver" class="Doctrine\Bundle\MongoDBBundle\Mapping\Driver\XmlDriver" public="false">
      <argument type="collection">
        <argument key="/cocorico/vendor/sonata-project/user-bundle/src/Resources/config/doctrine">Sonata\UserBundle\Document</argument>
        <argument key="/cocorico/vendor/friendsofsymfony/message-bundle/FOS/MessageBundle/Resources/config/doctrine">FOS\MessageBundle\Document</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="doctrine_mongodb.odm.default_annotation_metadata_driver" class="Doctrine\ODM\MongoDB\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/cocorico/src/Cocorico/CoreBundle/Document</argument>
      </argument>
    </service>
    <service id="doctrine_mongodb.odm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine_mongodb.odm.default_xml_metadata_driver"/>
        <argument>Sonata\UserBundle\Document</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine_mongodb.odm.default_xml_metadata_driver"/>
        <argument>FOS\MessageBundle\Document</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine_mongodb.odm.default_annotation_metadata_driver"/>
        <argument>Cocorico\CoreBundle\Document</argument>
      </call>
    </service>
    <service id="doctrine_mongodb.odm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache" public="false">
      <call method="setNamespace">
        <argument>sf_mongodb_default_bvazuei</argument>
      </call>
    </service>
    <service id="doctrine_mongodb.odm.default_manager_configurator" class="Doctrine\Bundle\MongoDBBundle\ManagerConfigurator">
      <argument type="collection"/>
    </service>
    <service id="doctrine_mongodb.odm.default_document_manager" class="Doctrine\ODM\MongoDB\DocumentManager" public="true">
      <tag name="doctrine_mongodb.odm.document_manager"/>
      <argument type="service" id="doctrine_mongodb.odm.default_connection"/>
      <argument type="service" id="doctrine_mongodb.odm.default_configuration"/>
      <argument type="service" id="doctrine_mongodb.odm.default_connection.event_manager"/>
      <factory class="Doctrine\ODM\MongoDB\DocumentManager" method="create"/>
      <configurator service="doctrine_mongodb.odm.default_manager_configurator" method="configure"/>
    </service>
    <service id="sonata.admin.twig.extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension" public="true">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setXEditableTypeMapping">
        <argument>%sonata.admin.twig.extension.x_editable_type_mapping%</argument>
      </call>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool" public="true">
      <argument type="service" id="service_container"/>
      <argument>Costocking.com administration</argument>
      <argument>/images/logo2.gif</argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="lock_protection">false</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/vendor/readmore-js/readmore.min.js</argument>
          <argument>bundles/sonataadmin/vendor/masonry/dist/masonry.pkgd.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
        </argument>
        <argument key="role_admin">ROLE_SONATA_ADMIN</argument>
        <argument key="role_super_admin">ROLE_SUPER_ADMIN</argument>
      </argument>
      <argument type="service" id="property_accessor"/>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setAdminServiceIds">
        <argument type="collection">
          <argument>sonata.admin.listing</argument>
          <argument>sonata.admin.booking</argument>
          <argument>sonata.admin.listing_characteristic</argument>
          <argument>sonata.admin.listing_characteristic_group</argument>
          <argument>sonata.admin.listing_characteristic_type</argument>
          <argument>sonata.admin.listing_characteristic_value</argument>
          <argument>sonata.admin.listing_category</argument>
          <argument>sonata.admin.booking_bank_wire</argument>
          <argument>sonata.admin.booking_payin_refund</argument>
          <argument>sonata.admin.booking_user_address</argument>
          <argument>sonata.admin.user_address</argument>
          <argument>sonata.user.admin.user</argument>
          <argument>sonata.admin.page</argument>
          <argument>sonata.admin.footer</argument>
          <argument>sonata.admin.thread</argument>
          <argument>sonata.admin.message</argument>
          <argument>sonata.admin.contact</argument>
          <argument>sonata.admin.review</argument>
          <argument>sonata.admin.parameter</argument>
        </argument>
      </call>
      <call method="setAdminGroups">
        <argument type="collection">
          <argument key="Listings" type="collection">
            <argument key="label">Listings</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.admin.listing</argument>
                <argument key="label">Listings</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.listing_characteristic</argument>
                <argument key="label">Characteristic</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.listing_characteristic_group</argument>
                <argument key="label">Characteristic Group</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.listing_characteristic_type</argument>
                <argument key="label">Characteristic Type</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.listing_category</argument>
                <argument key="label">Category</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
          </argument>
          <argument key="Bookings" type="collection">
            <argument key="label">Bookings</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.admin.booking</argument>
                <argument key="label">Bookings</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.booking_bank_wire</argument>
                <argument key="label">Bank Wires</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.booking_payin_refund</argument>
                <argument key="label">Payin Refunds</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
          </argument>
          <argument key="Users" type="collection">
            <argument key="label">Users</argument>
            <argument key="label_catalogue">SonataUserBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.user.admin.user</argument>
                <argument key="label">Users</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.thread</argument>
                <argument key="label">Messages</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.review</argument>
                <argument key="label">Reviews</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
          </argument>
          <argument key="Site" type="collection">
            <argument key="label">Site</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.admin.page</argument>
                <argument key="label">Pages</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.footer</argument>
                <argument key="label">Footers</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.contact</argument>
                <argument key="label">Contact</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.parameter</argument>
                <argument key="label">Configuration</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="setAdminClasses">
        <argument type="collection">
          <argument key="Cocorico\CoreBundle\Entity\Listing" type="collection">
            <argument>sonata.admin.listing</argument>
          </argument>
          <argument key="Cocorico\CoreBundle\Entity\Booking" type="collection">
            <argument>sonata.admin.booking</argument>
          </argument>
          <argument key="Cocorico\CoreBundle\Entity\ListingCharacteristic" type="collection">
            <argument>sonata.admin.listing_characteristic</argument>
          </argument>
          <argument key="Cocorico\CoreBundle\Entity\ListingCharacteristicGroup" type="collection">
            <argument>sonata.admin.listing_characteristic_group</argument>
          </argument>
          <argument key="Cocorico\CoreBundle\Entity\ListingCharacteristicType" type="collection">
            <argument>sonata.admin.listing_characteristic_type</argument>
          </argument>
          <argument key="Cocorico\CoreBundle\Entity\ListingCharacteristicValue" type="collection">
            <argument>sonata.admin.listing_characteristic_value</argument>
          </argument>
          <argument key="Cocorico\CoreBundle\Entity\ListingCategory" type="collection">
            <argument>sonata.admin.listing_category</argument>
          </argument>
          <argument key="Cocorico\CoreBundle\Entity\BookingBankWire" type="collection">
            <argument>sonata.admin.booking_bank_wire</argument>
          </argument>
          <argument key="Cocorico\CoreBundle\Entity\BookingPayinRefund" type="collection">
            <argument>sonata.admin.booking_payin_refund</argument>
          </argument>
          <argument key="Cocorico\CoreBundle\Entity\BookingUserAddress" type="collection">
            <argument>sonata.admin.booking_user_address</argument>
          </argument>
          <argument key="Cocorico\UserBundle\Entity\UserAddress" type="collection">
            <argument>sonata.admin.user_address</argument>
          </argument>
          <argument key="Cocorico\UserBundle\Entity\User" type="collection">
            <argument>sonata.user.admin.user</argument>
          </argument>
          <argument key="Cocorico\PageBundle\Entity\Page" type="collection">
            <argument>sonata.admin.page</argument>
          </argument>
          <argument key="Cocorico\CMSBundle\Entity\Footer" type="collection">
            <argument>sonata.admin.footer</argument>
          </argument>
          <argument key="Cocorico\MessageBundle\Entity\Thread" type="collection">
            <argument>sonata.admin.thread</argument>
          </argument>
          <argument key="Cocorico\MessageBundle\Entity\Message" type="collection">
            <argument>sonata.admin.message</argument>
          </argument>
          <argument key="Cocorico\ContactBundle\Entity\Contact" type="collection">
            <argument>sonata.admin.contact</argument>
          </argument>
          <argument key="Cocorico\ReviewBundle\Entity\Review" type="collection">
            <argument>sonata.admin.review</argument>
          </argument>
          <argument key="Cocorico\ConfigBundle\Entity\Parameter" type="collection">
            <argument>sonata.admin.parameter</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader" public="true">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument>sonata.admin.listing</argument>
        <argument>sonata.admin.booking</argument>
        <argument>sonata.admin.listing_characteristic</argument>
        <argument>sonata.admin.listing_characteristic_group</argument>
        <argument>sonata.admin.listing_characteristic_type</argument>
        <argument>sonata.admin.listing_characteristic_value</argument>
        <argument>sonata.admin.listing_category</argument>
        <argument>sonata.admin.booking_bank_wire</argument>
        <argument>sonata.admin.booking_payin_refund</argument>
        <argument>sonata.admin.booking_user_address</argument>
        <argument>sonata.admin.user_address</argument>
        <argument>sonata.user.admin.user</argument>
        <argument>sonata.admin.page</argument>
        <argument>sonata.admin.footer</argument>
        <argument>sonata.admin.thread</argument>
        <argument>sonata.admin.message</argument>
        <argument>sonata.admin.contact</argument>
        <argument>sonata.admin.review</argument>
        <argument>sonata.admin.parameter</argument>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper" public="true">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory" public="true">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="doctrine_orm_boolean">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter">sonata.admin.orm.filter.type.callback</argument>
        <argument key="doctrine_orm_callback">sonata.admin.orm.filter.type.callback</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter">sonata.admin.orm.filter.type.choice</argument>
        <argument key="doctrine_orm_choice">sonata.admin.orm.filter.type.choice</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter">sonata.admin.orm.filter.type.model</argument>
        <argument key="doctrine_orm_model">sonata.admin.orm.filter.type.model</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="doctrine_orm_model_autocomplete">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\StringFilter">sonata.admin.orm.filter.type.string</argument>
        <argument key="doctrine_orm_string">sonata.admin.orm.filter.type.string</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter">sonata.admin.orm.filter.type.number</argument>
        <argument key="doctrine_orm_number">sonata.admin.orm.filter.type.number</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateFilter">sonata.admin.orm.filter.type.date</argument>
        <argument key="doctrine_orm_date">sonata.admin.orm.filter.type.date</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="doctrine_orm_date_range">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="doctrine_orm_datetime">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter">sonata.admin.orm.filter.type.time</argument>
        <argument key="doctrine_orm_time">sonata.admin.orm.filter.type.time</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="doctrine_orm_datetime_range">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter">sonata.admin.orm.filter.type.class</argument>
        <argument key="doctrine_orm_class">sonata.admin.orm.filter.type.class</argument>
      </argument>
    </service>
    <service id="sonata.admin.breadcrumbs_builder" class="Sonata\AdminBundle\Admin\BreadcrumbsBuilder" public="true">
      <argument>%sonata.admin.configuration.breadcrumbs%</argument>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy" public="true"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy" public="true"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy" public="true"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy" public="true"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy" public="true"/>
    <service id="sonata.admin.translator.extractor.jms_translator_bundle" class="Sonata\AdminBundle\Translator\Extractor\JMSTranslatorBundle\AdminExtractor" public="true">
      <tag name="jms_translation.extractor" alias="sonata_admin"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <call method="setBreadcrumbsBuilder">
        <argument type="service" id="sonata.admin.breadcrumbs_builder"/>
      </call>
    </service>
    <service id="sonata.admin.controller.admin" class="Sonata\AdminBundle\Controller\HelperController" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.helper"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager" public="true">
      <argument type="service" id="service_container"/>
      <call method="setReader">
        <argument>sonata.admin.audit.orm.reader</argument>
        <argument type="collection">
          <argument>CocoricoConfigBundle\Entity\Parameter</argument>
          <argument>Cocorico\ConfigBundle\Entity\Parameter</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.exporter" class="Sonata\AdminBundle\Export\Exporter" public="true">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler" public="true">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension" public="true">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.twig.global" class="Sonata\AdminBundle\Twig\GlobalVariables" public="true">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType" public="true">
      <tag name="form.type" alias="sonata_type_admin"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType" public="true">
      <tag name="form.type" alias="sonata_type_model"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelListType" public="true">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType" public="true">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType" public="true">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.type.model_autocomplete" class="Sonata\AdminBundle\Form\Type\ModelAutocompleteType" public="true">
      <tag name="form.type" alias="sonata_type_model_autocomplete"/>
    </service>
    <service id="sonata.admin.form.type.collection" class="Sonata\AdminBundle\Form\Type\CollectionType" public="true">
      <tag name="form.type" alias="sonata_type_native_collection"/>
    </service>
    <service id="sonata.admin.doctrine_orm.form.type.choice_field_mask" class="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType" public="true">
      <tag name="form.type" alias="sonata_type_choice_field_mask"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension" public="true">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="email"></argument>
        <argument key="textarea"></argument>
        <argument key="text"></argument>
        <argument key="choice"></argument>
        <argument key="integer"></argument>
        <argument key="datetime">sonata-medium-date</argument>
        <argument key="date">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateTimeType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\EmailType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\IntegerType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextareaType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextType"></argument>
      </argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="lock_protection">false</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/vendor/readmore-js/readmore.min.js</argument>
          <argument>bundles/sonataadmin/vendor/masonry/dist/masonry.pkgd.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
        </argument>
        <argument key="role_admin">ROLE_SONATA_ADMIN</argument>
        <argument key="role_super_admin">ROLE_SUPER_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.admin.form.extension.field.mopa" class="Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension" public="true">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="sonata.admin.form.extension.choice" class="Sonata\AdminBundle\Form\Extension\ChoiceTypeExtension" public="true">
      <tag name="form.type_extension" alias="choice" extended_type="Symfony\Component\Form\Extension\Core\Type\ChoiceType" extended-type="Symfony\Component\Form\Extension\Core\Type\ChoiceType"/>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType" public="true">
      <tag name="form.type" alias="sonata_type_filter_number"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType" public="true">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType" public="true">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType" public="true">
      <tag name="form.type" alias="sonata_type_filter_date"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType" public="true">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType" public="true">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType" public="true">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator" public="true">
      <tag name="validator.constraint_validator" alias="sonata.admin.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder" public="true">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.query_string" class="Sonata\AdminBundle\Route\QueryStringBuilder" public="true">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator" public="true">
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache" public="true">
      <argument>/cocorico/var/cache/dev/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp" public="true">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.admin_list</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.search_result</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
    </service>
    <service id="sonata.admin.block.stats" class="Sonata\AdminBundle\Block\AdminStatsBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.stats</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.menu_builder" class="Sonata\AdminBundle\Menu\MenuBuilder" public="true">
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.sidebar_menu" class="Knp\Menu\MenuItem" public="true">
      <tag name="knp_menu.menu" alias="sonata_admin_sidebar"/>
      <factory service="sonata.admin.menu_builder" method="createSidebarMenu"/>
    </service>
    <service id="sonata.admin.menu.group_provider" class="Sonata\AdminBundle\Menu\Provider\GroupMenuProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.admin" class="Sonata\AdminBundle\Menu\Matcher\Voter\AdminVoter" public="true">
      <tag name="knp_menu.voter" request="1"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.children" class="Sonata\AdminBundle\Menu\Matcher\Voter\ChildrenVoter" public="true">
      <argument type="service" id="knp_menu.matcher"/>
      <deprecated>The "%service_id%" service is deprecated since 3.28 and will be removed in 4.0.</deprecated>
    </service>
    <service id="sonata.admin.menu.matcher.voter.active" class="Sonata\AdminBundle\Menu\Matcher\Voter\ActiveVoter" public="true">
      <tag name="knp_menu.voter"/>
    </service>
    <service id="Sonata\AdminBundle\Command\CreateClassCacheCommand" class="Sonata\AdminBundle\Command\CreateClassCacheCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\ExplainAdminCommand" class="Sonata\AdminBundle\Command\ExplainAdminCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\GenerateAdminCommand" class="Sonata\AdminBundle\Command\GenerateAdminCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\GenerateObjectAclCommand" class="Sonata\AdminBundle\Command\GenerateObjectAclCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\ListAdminCommand" class="Sonata\AdminBundle\Command\ListAdminCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\SetupAclCommand" class="Sonata\AdminBundle\Command\SetupAclCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="sonata.admin.security.handler.noop" class="Sonata\AdminBundle\Security\Handler\NoopSecurityHandler" public="false"/>
    <service id="sonata.admin.security.handler.role" class="Sonata\AdminBundle\Security\Handler\RoleSecurityHandler" public="false">
      <argument type="service" id="security.authorization_checker"/>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.admin.security.handler.acl" class="Sonata\AdminBundle\Security\Handler\AclSecurityHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument>null</argument>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
      <call method="setAdminPermissions">
        <argument>%sonata.admin.configuration.security.admin_permissions%</argument>
      </call>
      <call method="setObjectPermissions">
        <argument>%sonata.admin.configuration.security.object_permissions%</argument>
      </call>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator" public="true">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator" public="true">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.core.date.moment_format_converter" class="Sonata\CoreBundle\Date\MomentFormatConverter"/>
    <service id="sonata.core.flashmessage.manager" class="Sonata\CoreBundle\FlashMessage\FlashManager" public="true">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="collection">
        <argument key="success" type="collection">
          <argument key="success" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_success" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_success" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
          <argument key="fos_user_success" type="collection">
            <argument key="domain">FOSUserBundle</argument>
          </argument>
        </argument>
        <argument key="warning" type="collection">
          <argument key="warning" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_info" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
        </argument>
        <argument key="danger" type="collection">
          <argument key="error" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_error" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_error" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="success">success</argument>
        <argument key="warning">warning</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.core.flashmessage.twig.extension" class="Sonata\CoreBundle\Twig\Extension\FlashMessageExtension" public="true">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.core.flashmessage.manager"/>
    </service>
    <service id="sonata.core.form.type.array" class="Sonata\CoreBundle\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.core.form.type.boolean" class="Sonata\CoreBundle\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.core.form.type.collection" class="Sonata\CoreBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.core.form.type.translatable_choice" class="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">
      <tag name="form.type" alias="sonata_type_translatable_choice"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.date_range" class="Sonata\CoreBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_range" class="Sonata\CoreBundle\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.date_picker" class="Sonata\CoreBundle\Form\Type\DatePickerType">
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_picker" class="Sonata\CoreBundle\Form\Type\DateTimePickerType">
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.date_range_picker" class="Sonata\CoreBundle\Form\Type\DateRangePickerType">
      <tag name="form.type" alias="sonata_type_date_range_picker"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_range_picker" class="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">
      <tag name="form.type" alias="sonata_type_datetime_range_picker"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.equal" class="Sonata\CoreBundle\Form\Type\EqualType">
      <tag name="form.type" alias="sonata_type_equal"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.color_selector" class="Sonata\CoreBundle\Form\Type\ColorSelectorType">
      <tag name="form.type" alias="sonata_type_color_selector"/>
    </service>
    <service id="sonata.core.form.type.color" class="Sonata\CoreBundle\Form\Type\ColorType">
      <tag name="form.type" alias="sonata_type_color"/>
    </service>
    <service id="sonata.core.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.core.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.core.twig.extension.wrapping" class="Sonata\CoreBundle\Twig\Extension\FormTypeExtension">
      <tag name="twig.extension"/>
      <argument>standard</argument>
    </service>
    <service id="sonata.core.twig.extension.text" class="Sonata\CoreBundle\Twig\Extension\DeprecatedTextExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.status_extension" class="Sonata\CoreBundle\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
      <call method="addStatusService">
        <argument type="service" id="sonata.core.flashmessage.manager"/>
      </call>
    </service>
    <service id="sonata.core.twig.template_extension" class="Sonata\CoreBundle\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="sonata.core.model.adapter.chain"/>
    </service>
    <service id="sonata.core.model.adapter.doctrine_orm" class="Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter" public="false">
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sonata.core.model.adapter.chain" class="Sonata\CoreBundle\Model\Adapter\AdapterChain" public="true">
      <call method="addAdapter">
        <argument type="service" id="sonata.core.model.adapter.doctrine_orm"/>
      </call>
    </service>
    <service id="sonata.core.slugify.cocur" class="Cocur\Slugify\Slugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.core.slugify.native" class="Sonata\CoreBundle\Component\NativeSlugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="Sonata\CoreBundle\Command\SonataDumpDoctrineMetaCommand" class="Sonata\CoreBundle\Command\SonataDumpDoctrineMetaCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\CoreBundle\Command\SonataListFormMappingCommand" class="Sonata\CoreBundle\Command\SonataListFormMappingCommand">
      <tag name="console.command"/>
    </service>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.container</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.text</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.rss</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.menu</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="sonata.block.menu.registry"/>
    </service>
    <service id="sonata.block.service.template" class="Sonata\BlockBundle\Block\Service\TemplateBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.template</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.block.form.type.container_template" class="Sonata\BlockBundle\Form\Type\ContainerTemplateType">
      <tag name="form.type" alias="sonata_type_container_template_choice"/>
      <argument type="collection">
        <argument key="SonataBlockBundle:Block:block_container.html.twig">SonataBlockBundle default template</argument>
      </argument>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager" public="false">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.stats</argument>
        <argument>sonata.admin.block.stats</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
        <argument type="collection">
          <argument>cms</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.template</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin_doctrine_orm.block.audit</argument>
        <argument>sonata.admin_doctrine_orm.block.audit</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="sonata.block.menu.registry" class="Sonata\BlockBundle\Menu\MenuRegistry">
      <argument type="collection"/>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument>%sonata_block.cache_blocks%</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="sonata.block.twig.extension" class="Sonata\BlockBundle\Twig\Extension\BlockExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.block.templating.helper"/>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper">
      <tag name="templating.helper" alias="sonata_block"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument>%sonata_block.cache_blocks%</argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.block.context_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sonata.block.cache.handler.default" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.user.block.menu</argument>
        <argument>sonata.user.block.account</argument>
        <argument>sonata.block.service.text</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">SonataBlockBundle:Block:block_base.html.twig</argument>
        <argument key="block_container">SonataBlockBundle:Block:block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.cache.handler.default" class="Sonata\BlockBundle\Cache\HttpCacheHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sonata.block.cache.handler.noop" class="Sonata\BlockBundle\Cache\NoopHttpCacheHandler"/>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer">
      <argument type="service" id="templating.engine.twig"/>
      <argument>SonataBlockBundle:Block:block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer">
      <argument type="service" id="templating.engine.twig"/>
      <argument>SonataBlockBundle:Block:block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer"/>
    <service id="Sonata\BlockBundle\Command\DebugBlocksCommand" class="Sonata\BlockBundle\Command\DebugBlocksCommand">
      <tag name="console.command"/>
    </service>
    <service id="sonata.block.data_collector" class="Sonata\BlockBundle\Profiler\DataCollector\BlockDataCollector" public="false">
      <tag name="data_collector" id="block" template="SonataBlockBundle:Profiler:block.html.twig"/>
      <argument type="service" id="sonata.block.templating.helper"/>
      <argument type="collection">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.page.block.container</argument>
        <argument>sonata.dashboard.block.container</argument>
        <argument>cmf.block.container</argument>
        <argument>cmf.block.slideshow</argument>
      </argument>
    </service>
    <service id="sonata.easy_extends.generator.bundle" class="Sonata\EasyExtendsBundle\Generator\BundleGenerator"/>
    <service id="sonata.easy_extends.generator.orm" class="Sonata\EasyExtendsBundle\Generator\OrmGenerator"/>
    <service id="sonata.easy_extends.generator.odm" class="Sonata\EasyExtendsBundle\Generator\OdmGenerator"/>
    <service id="sonata.easy_extends.generator.phpcr" class="Sonata\EasyExtendsBundle\Generator\PHPCRGenerator"/>
    <service id="sonata.easy_extends.generator.serializer" class="Sonata\EasyExtendsBundle\Generator\SerializerGenerator"/>
    <service id="sonata.easy_extends.doctrine.mapper" class="Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection"/>
      <call method="addAssociation">
        <argument>Cocorico\UserBundle\Entity\User</argument>
        <argument>mapManyToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">groups</argument>
            <argument key="targetEntity">Cocorico\UserBundle\Entity\Group</argument>
            <argument key="cascade" type="collection"/>
            <argument key="joinTable" type="collection">
              <argument key="name">user_group</argument>
              <argument key="joinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">user_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
              <argument key="inverseJoinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">group_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.entity_manager" class="Doctrine\ORM\EntityManager" public="false">
      <argument>null</argument>
      <factory service="doctrine" method="getManager"/>
    </service>
    <service id="sonata.admin.manager.orm" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.admin.builder.orm_form" class="Sonata\DoctrineORMAdminBundle\Builder\FormContractor">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.admin.builder.orm_list" class="Sonata\DoctrineORMAdminBundle\Builder\ListBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_list_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:list_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</argument>
        <argument key="date">SonataAdminBundle:CRUD:list_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:list_time.html.twig</argument>
        <argument key="datetime">SonataAdminBundle:CRUD:list_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:list_email.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="smallint">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="bigint">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="integer">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="decimal">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="currency">SonataAdminBundle:CRUD:list_currency.html.twig</argument>
        <argument key="percent">SonataAdminBundle:CRUD:list_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:list_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:list_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_list" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_list"/>
    </service>
    <service id="sonata.admin.guesser.orm_list_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_list"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_show" class="Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_show_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:show_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</argument>
        <argument key="date">SonataAdminBundle:CRUD:show_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:show_time.html.twig</argument>
        <argument key="datetime">SonataAdminBundle:CRUD:show_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:show_email.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="smallint">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="bigint">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="integer">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="decimal">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="currency">SonataAdminBundle:CRUD:show_currency.html.twig</argument>
        <argument key="percent">SonataAdminBundle:CRUD:show_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:show_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:show_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_show" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_show"/>
    </service>
    <service id="sonata.admin.guesser.orm_show_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_show"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.admin.builder.filter.factory"/>
      <argument type="service" id="sonata.admin.guesser.orm_datagrid_chain"/>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Guesser\FilterTypeGuesser">
      <tag name="sonata.admin.guesser.orm_datagrid"/>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_datagrid"/>
      </argument>
    </service>
    <service id="sonata.admin.orm.filter.type.boolean" class="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_boolean"/>
    </service>
    <service id="sonata.admin.orm.filter.type.callback" class="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_callback"/>
    </service>
    <service id="sonata.admin.orm.filter.type.choice" class="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_choice"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model" class="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model_autocomplete" class="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model_autocomplete"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string" class="Sonata\DoctrineORMAdminBundle\Filter\StringFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string"/>
    </service>
    <service id="sonata.admin.orm.filter.type.number" class="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_number"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date" class="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime"/>
    </service>
    <service id="sonata.admin.orm.filter.type.time" class="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_time"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.class" class="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_class"/>
    </service>
    <service id="sonata.admin.audit.orm.reader" class="Sonata\DoctrineORMAdminBundle\Model\AuditReader">
      <argument type="service" id="simplethings_entityaudit.reader" on-invalid="ignore"/>
    </service>
    <service id="sonata.admin_doctrine_orm.block.audit" class="Sonata\DoctrineORMAdminBundle\Block\AuditBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin_doctrine_orm.block.audit</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="simplethings_entityaudit.reader" on-invalid="ignore"/>
    </service>
    <service id="sonata.admin.manipulator.acl.object.orm" class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator"/>
    <service id="sonata.user.editable_role_builder" class="Sonata\UserBundle\Security\EditableRolesBuilder">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument>%security.role_hierarchy.roles%</argument>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
      </call>
    </service>
    <service id="sonata.user.form.type.security_roles" class="Sonata\UserBundle\Form\Type\SecurityRolesType">
      <tag name="form.type" alias="sonata_security_roles"/>
      <argument type="service" id="sonata.user.editable_role_builder"/>
    </service>
    <service id="sonata.user.admin.user" class="Cocorico\UserBundle\Admin\UserAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.user.admin.groupname%" label="Users" label_catalogue="%sonata.user.admin.label_catalogue%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.user.admin.user</argument>
      <argument>Cocorico\UserBundle\Entity\User</argument>
      <argument>CocoricoUserBundle:Admin\UserAdmin</argument>
      <call method="setUserManager">
        <argument type="service" id="cocorico_user.user_manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setBundlesEnabled">
        <argument>%kernel.bundles%</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Users</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.user.admin.group" public="false" abstract="true"/>
    <service id="sonata.user.orm.user_manager" class="Sonata\UserBundle\Entity\UserManager" public="false">
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
      <argument type="service" id="fos_user.object_manager"/>
      <argument>Cocorico\UserBundle\Entity\User</argument>
    </service>
    <service id="sonata.user.manager.user" class="Sonata\UserBundle\Entity\UserManagerProxy">
      <argument>Cocorico\UserBundle\Entity\User</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="sonata.user.orm.group_manager" class="Sonata\UserBundle\Entity\GroupManager" public="false">
      <argument type="service" id="fos_user.object_manager"/>
      <argument>Cocorico\UserBundle\Entity\Group</argument>
    </service>
    <service id="sonata.user.form.gender_list" class="Sonata\UserBundle\Form\Type\UserGenderListType">
      <tag name="form.type" alias="sonata_user_gender"/>
      <argument>Cocorico\UserBundle\Entity\User</argument>
      <argument>getGenderList</argument>
      <argument>Sonata\UserBundle\Form\Type\UserGenderListType</argument>
    </service>
    <service id="sonata.user.twig.global" class="Sonata\UserBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="a2lix_translation_form.default.service.translation" class="A2lix\TranslationFormBundle\TranslationForm\TranslationForm">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="a2lix_translation_form.default.service.parameter_locale_provider" class="A2lix\TranslationFormBundle\Locale\DefaultProvider">
      <argument type="collection">
        <argument>en</argument>
        <argument>fr</argument>
      </argument>
      <argument>fr</argument>
      <argument type="collection">
        <argument>en</argument>
        <argument>fr</argument>
      </argument>
    </service>
    <service id="a2lix_translation_form.default.listener.translations" class="A2lix\TranslationFormBundle\Form\EventListener\TranslationsListener">
      <argument type="service" id="a2lix_translation_form.default.service.translation"/>
    </service>
    <service id="a2lix_translation_form.default.listener.translationsForms" class="A2lix\TranslationFormBundle\Form\EventListener\TranslationsFormsListener"/>
    <service id="a2lix_translation_form.default.type.translations" class="A2lix\TranslationFormBundle\Form\Type\TranslationsType">
      <tag name="form.type" alias="a2lix_translations"/>
      <argument type="service" id="a2lix_translation_form.default.listener.translations"/>
      <argument type="service" id="a2lix_translation_form.default.service.parameter_locale_provider"/>
    </service>
    <service id="a2lix_translation_form.default.type.translationsFields" class="A2lix\TranslationFormBundle\Form\Type\TranslationsFieldsType">
      <tag name="form.type" alias="a2lix_translationsFields"/>
    </service>
    <service id="a2lix_translation_form.default.type.translationsForms" class="A2lix\TranslationFormBundle\Form\Type\TranslationsFormsType">
      <tag name="form.type" alias="a2lix_translationsForms"/>
      <argument type="service" id="a2lix_translation_form.default.service.translation"/>
      <argument type="service" id="a2lix_translation_form.default.listener.translationsForms"/>
      <argument type="service" id="a2lix_translation_form.default.service.parameter_locale_provider"/>
    </service>
    <service id="a2lix_translation_form.default.type.translationsLocalesSelector" class="A2lix\TranslationFormBundle\Form\Type\TranslationsLocalesSelectorType">
      <tag name="form.type" alias="a2lix_translationsLocalesSelector"/>
      <argument type="service" id="a2lix_translation_form.default.service.parameter_locale_provider"/>
    </service>
    <service id="a2lix_translation_form.default.type.translatedEntity" class="A2lix\TranslationFormBundle\Form\Type\TranslatedEntityType">
      <tag name="form.type" alias="a2lix_translatedEntity"/>
      <call method="setRequest">
        <argument>null</argument>
      </call>
    </service>
    <service id="oneup_uploader.chunk_manager" class="Oneup\UploaderBundle\Uploader\Chunk\ChunkManager">
      <argument>%oneup_uploader.chunks%</argument>
      <argument type="service" id="oneup_uploader.chunks_storage"/>
    </service>
    <service id="oneup_uploader.orphanage_manager" class="Oneup\UploaderBundle\Uploader\Orphanage\OrphanageManager">
      <argument type="service" id="service_container"/>
      <argument>%oneup_uploader.orphanage%</argument>
    </service>
    <service id="oneup_uploader.namer.uniqid" class="Oneup\UploaderBundle\Uploader\Naming\UniqidNamer"/>
    <service id="oneup_uploader.namer.urlsafe" class="Oneup\UploaderBundle\Uploader\Naming\UrlSafeNamer"/>
    <service id="oneup_uploader.routing.loader" class="Oneup\UploaderBundle\Routing\RouteLoader">
      <tag name="routing.loader"/>
      <argument>%oneup_uploader.controllers%</argument>
    </service>
    <service id="oneup_uploader.templating.uploader_helper" class="Oneup\UploaderBundle\Templating\Helper\UploaderHelper">
      <tag name="templating.helper" alias="oneup_uploader"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument>%oneup_uploader.maxsize%</argument>
    </service>
    <service id="oneup_uploader.validation_listener.max_size" class="Oneup\UploaderBundle\EventListener\MaxSizeValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
    </service>
    <service id="oneup_uploader.validation_listener.allowed_mimetype" class="Oneup\UploaderBundle\EventListener\AllowedMimetypeValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
    </service>
    <service id="oneup_uploader.validation_listener.disallowed_mimetype" class="Oneup\UploaderBundle\EventListener\DisallowedMimetypeValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
    </service>
    <service id="oneup_uploader.error_handler.noop" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.fineuploader" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.blueimp" class="Oneup\UploaderBundle\Uploader\ErrorHandler\BlueimpErrorHandler" public="false">
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="oneup_uploader.error_handler.uploadify" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.yui3" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.fancyupload" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.mooupload" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.dropzone" class="Oneup\UploaderBundle\Uploader\ErrorHandler\DropzoneErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.plupload" class="Oneup\UploaderBundle\Uploader\ErrorHandler\PluploadErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.custom" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.twig.extension.uploader" class="Oneup\UploaderBundle\Twig\Extension\UploaderExtension" public="true">
      <tag name="twig.extension"/>
      <argument type="service" id="oneup_uploader.templating.uploader_helper"/>
    </service>
    <service id="oneup_uploader.chunks_storage" class="Oneup\UploaderBundle\Uploader\Chunk\Storage\FilesystemStorage">
      <argument>/cocorico/var/cache/dev/uploader/chunks</argument>
    </service>
    <service id="oneup_uploader.storage.listing_images" class="Oneup\UploaderBundle\Uploader\Storage\FilesystemStorage">
      <argument>/cocorico/app/../web/uploads/listings/images</argument>
    </service>
    <service id="oneup_uploader.controller.listing_images" class="Oneup\UploaderBundle\Controller\BlueimpController">
      <tag name="oneup_uploader.routable" type="listing_images"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="oneup_uploader.storage.listing_images"/>
      <argument type="service" id="oneup_uploader.error_handler.blueimp"/>
      <argument type="collection">
        <argument key="max_size">10000000</argument>
        <argument key="frontend">blueimp</argument>
        <argument key="allowed_mimetypes" type="collection">
          <argument>image/gif</argument>
          <argument>image/jpg</argument>
          <argument>image/jpeg</argument>
          <argument>image/png</argument>
        </argument>
        <argument key="enable_progress">true</argument>
        <argument key="namer">cocorico.namer.image_namer</argument>
        <argument key="storage" type="collection">
          <argument key="directory">/cocorico/app/../web/uploads/listings/images</argument>
          <argument key="service">null</argument>
          <argument key="type">filesystem</argument>
          <argument key="filesystem">null</argument>
          <argument key="stream_wrapper">null</argument>
          <argument key="sync_buffer_size">100K</argument>
        </argument>
        <argument key="custom_frontend" type="collection">
          <argument key="name">null</argument>
          <argument key="class">null</argument>
        </argument>
        <argument key="route_prefix"></argument>
        <argument key="endpoints" type="collection">
          <argument key="upload">null</argument>
          <argument key="progress">null</argument>
          <argument key="cancel">null</argument>
        </argument>
        <argument key="disallowed_mimetypes" type="collection"/>
        <argument key="error_handler">null</argument>
        <argument key="use_orphanage">false</argument>
        <argument key="enable_cancelation">false</argument>
        <argument key="root_folder">false</argument>
      </argument>
      <argument>listing_images</argument>
    </service>
    <service id="oneup_uploader.storage.user_images" class="Oneup\UploaderBundle\Uploader\Storage\FilesystemStorage">
      <argument>/cocorico/app/../web/uploads/users/images</argument>
    </service>
    <service id="oneup_uploader.controller.user_images" class="Oneup\UploaderBundle\Controller\BlueimpController">
      <tag name="oneup_uploader.routable" type="user_images"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="oneup_uploader.storage.user_images"/>
      <argument type="service" id="oneup_uploader.error_handler.blueimp"/>
      <argument type="collection">
        <argument key="max_size">8000000</argument>
        <argument key="frontend">blueimp</argument>
        <argument key="allowed_mimetypes" type="collection">
          <argument>image/gif</argument>
          <argument>image/jpeg</argument>
          <argument>image/png</argument>
        </argument>
        <argument key="enable_progress">true</argument>
        <argument key="namer">cocorico.namer.image_namer</argument>
        <argument key="storage" type="collection">
          <argument key="directory">/cocorico/app/../web/uploads/users/images</argument>
          <argument key="service">null</argument>
          <argument key="type">filesystem</argument>
          <argument key="filesystem">null</argument>
          <argument key="stream_wrapper">null</argument>
          <argument key="sync_buffer_size">100K</argument>
        </argument>
        <argument key="custom_frontend" type="collection">
          <argument key="name">null</argument>
          <argument key="class">null</argument>
        </argument>
        <argument key="route_prefix"></argument>
        <argument key="endpoints" type="collection">
          <argument key="upload">null</argument>
          <argument key="progress">null</argument>
          <argument key="cancel">null</argument>
        </argument>
        <argument key="disallowed_mimetypes" type="collection"/>
        <argument key="error_handler">null</argument>
        <argument key="use_orphanage">false</argument>
        <argument key="enable_cancelation">false</argument>
        <argument key="root_folder">false</argument>
      </argument>
      <argument>user_images</argument>
    </service>
    <service id="liip_imagine.cache.resolver.default" class="Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver" public="true">
      <tag name="liip_imagine.cache.resolver" resolver="default"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="router.request_context"/>
      <argument>/cocorico/app/../web</argument>
      <argument>media/cache</argument>
    </service>
    <service id="liip_imagine.binary.loader.default" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader">
      <tag name="liip_imagine.binary.loader" loader="default"/>
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument>/cocorico/app/../web</argument>
    </service>
    <service id="liip_imagine.filter.manager" class="Liip\ImagineBundle\Imagine\Filter\FilterManager">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="liip_imagine.imagick"/>
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <call method="addLoader">
        <argument>relative_resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.relative_resize"/>
      </call>
      <call method="addLoader">
        <argument>resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.resize"/>
      </call>
      <call method="addLoader">
        <argument>thumbnail</argument>
        <argument type="service" id="liip_imagine.filter.loader.thumbnail"/>
      </call>
      <call method="addLoader">
        <argument>crop</argument>
        <argument type="service" id="liip_imagine.filter.loader.crop"/>
      </call>
      <call method="addLoader">
        <argument>paste</argument>
        <argument type="service" id="liip_imagine.filter.loader.paste"/>
      </call>
      <call method="addLoader">
        <argument>watermark</argument>
        <argument type="service" id="liip_imagine.filter.loader.watermark"/>
      </call>
      <call method="addLoader">
        <argument>background</argument>
        <argument type="service" id="liip_imagine.filter.loader.background"/>
      </call>
      <call method="addLoader">
        <argument>strip</argument>
        <argument type="service" id="liip_imagine.filter.loader.strip"/>
      </call>
      <call method="addLoader">
        <argument>upscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.upscale"/>
      </call>
      <call method="addLoader">
        <argument>downscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.downscale"/>
      </call>
      <call method="addLoader">
        <argument>auto_rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.auto_rotate"/>
      </call>
      <call method="addLoader">
        <argument>rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.rotate"/>
      </call>
      <call method="addLoader">
        <argument>interlace</argument>
        <argument type="service" id="liip_imagine.filter.loader.interlace"/>
      </call>
      <call method="addPostProcessor">
        <argument>jpegoptim</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.jpegoptim"/>
      </call>
      <call method="addPostProcessor">
        <argument>optipng</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.optipng"/>
      </call>
    </service>
    <service id="liip_imagine.data.manager" class="Liip\ImagineBundle\Imagine\Data\DataManager">
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument>default</argument>
      <argument>null</argument>
      <call method="addLoader">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.binary.loader.default"/>
      </call>
    </service>
    <service id="liip_imagine.cache.manager" class="Liip\ImagineBundle\Imagine\Cache\CacheManager">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>null</argument>
      <call method="addResolver">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.cache.resolver.default"/>
      </call>
      <call method="addResolver">
        <argument>no_cache</argument>
        <argument type="service" id="liip_imagine.cache.resolver.no_cache_web_path"/>
      </call>
    </service>
    <service id="liip_imagine.filter.configuration" class="Liip\ImagineBundle\Imagine\Filter\FilterConfiguration">
      <argument>%liip_imagine.filter_sets%</argument>
    </service>
    <service id="liip_imagine.controller" class="Liip\ImagineBundle\Controller\ImagineController">
      <argument type="service" id="liip_imagine.data.manager"/>
      <argument type="service" id="liip_imagine.filter.manager"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="liip_imagine.meta_data.reader" class="Imagine\Image\Metadata\ExifMetadataReader" public="false"/>
    <service id="liip_imagine.gd" class="Imagine\Gd\Imagine" public="false"/>
    <service id="liip_imagine.imagick" class="Imagine\Imagick\Imagine" public="false">
      <call method="setMetadataReader">
        <argument type="service" id="liip_imagine.meta_data.reader"/>
      </call>
    </service>
    <service id="liip_imagine.gmagick" class="Imagine\Gmagick\Imagine" public="false"/>
    <service id="liip_imagine.twig.extension" class="Liip\ImagineBundle\Templating\ImagineExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
    </service>
    <service id="liip_imagine.templating.helper" class="Liip\ImagineBundle\Templating\Helper\ImagineHelper">
      <tag name="templating.helper" alias="imagine"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
    </service>
    <service id="liip_imagine.filter.loader.relative_resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="relative_resize"/>
    </service>
    <service id="liip_imagine.filter.loader.resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="resize"/>
    </service>
    <service id="liip_imagine.filter.loader.thumbnail" class="Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="thumbnail"/>
    </service>
    <service id="liip_imagine.filter.loader.crop" class="Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="crop"/>
    </service>
    <service id="liip_imagine.filter.loader.paste" class="Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="paste"/>
      <argument type="service" id="liip_imagine.imagick"/>
      <argument>/cocorico/app</argument>
    </service>
    <service id="liip_imagine.filter.loader.watermark" class="Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="watermark"/>
      <argument type="service" id="liip_imagine.imagick"/>
      <argument>/cocorico/app</argument>
    </service>
    <service id="liip_imagine.filter.loader.background" class="Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="background"/>
      <argument type="service" id="liip_imagine.imagick"/>
    </service>
    <service id="liip_imagine.filter.loader.strip" class="Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="strip"/>
    </service>
    <service id="liip_imagine.filter.loader.upscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="upscale"/>
    </service>
    <service id="liip_imagine.filter.loader.downscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="downscale"/>
    </service>
    <service id="liip_imagine.filter.loader.auto_rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="auto_rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.interlace" class="Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="interlace"/>
    </service>
    <service id="liip_imagine.binary.loader.prototype.filesystem" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader">
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.stream" class="Liip\ImagineBundle\Binary\Loader\StreamLoader">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.flysystem" class="Liip\ImagineBundle\Binary\Loader\FlysystemLoader" abstract="true">
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.web_path" class="Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver" public="true" abstract="true">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="router.request_context"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.aws_s3" class="Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.cache" class="Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.proxy" class="Liip\ImagineBundle\Imagine\Cache\Resolver\ProxyResolver" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.no_cache_web_path" class="Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver" public="true">
      <tag name="liip_imagine.cache.resolver" resolver="no_cache"/>
      <argument type="service" id="router.request_context"/>
    </service>
    <service id="liip_imagine.form.type.image" class="Liip\ImagineBundle\Form\Type\ImageType">
      <tag name="form.type" alias="liip_imagine_image"/>
    </service>
    <service id="liip_imagine.mime_type_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.extension_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.binary.mime_type_guesser" class="Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser">
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
    </service>
    <service id="liip_imagine.cache.signer" class="Liip\ImagineBundle\Imagine\Cache\Signer">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.jpegoptim" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="jpegoptim"/>
      <argument>/usr/bin/jpegoptim</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.optipng" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="optipng"/>
      <argument>/usr/bin/optipng</argument>
    </service>
    <service id="lexik_currency.converter" class="Lexik\Bundle\CurrencyBundle\Currency\Converter">
      <argument type="service" id="lexik_currency.doctrine_adapter"/>
      <argument>0</argument>
      <argument>up</argument>
    </service>
    <service id="lexik_currency.formatter" class="Lexik\Bundle\CurrencyBundle\Currency\Formatter">
      <argument>fr</argument>
    </service>
    <service id="lexik_currency.subscriber.locale" class="Lexik\Bundle\CurrencyBundle\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="lexik_currency.formatter"/>
    </service>
    <service id="lexik_currency.adapter_collector" class="Lexik\Bundle\CurrencyBundle\Adapter\AdapterCollector">
      <call method="add">
        <argument type="service" id="lexik_currency.doctrine_adapter"/>
      </call>
      <call method="add">
        <argument type="service" id="lexik_currency.ecb_adapter"/>
      </call>
      <call method="add">
        <argument type="service" id="lexik_currency.oer_adapter"/>
      </call>
      <call method="add">
        <argument type="service" id="lexik_currency.yahoo_adapter"/>
      </call>
    </service>
    <service id="lexik_currency.adapter_factory" class="Lexik\Bundle\CurrencyBundle\Adapter\AdapterFactory">
      <argument type="service" id="doctrine"/>
      <argument>EUR</argument>
      <argument>%lexik_currency.currencies.managed%</argument>
      <argument>Lexik\Bundle\CurrencyBundle\Entity\Currency</argument>
    </service>
    <service id="lexik_currency.abstract_adapter" class="Lexik\Bundle\CurrencyBundle\Adapter\AbstractCurrencyAdapter" abstract="true"/>
    <service id="lexik_currency.doctrine_adapter" class="Cocorico\CurrencyBundle\Adapter\DoctrineCurrencyAdapter">
      <tag name="lexik_currency.adapter" alias="doctrine_currency_adapter"/>
      <argument>Cocorico\CurrencyBundle\Adapter\DoctrineCurrencyAdapter</argument>
      <argument>default</argument>
      <factory service="lexik_currency.adapter_factory" method="createDoctrineAdapter"/>
    </service>
    <service id="lexik_currency.ecb_adapter" class="Lexik\Bundle\CurrencyBundle\Adapter\EcbCurrencyAdapter">
      <tag name="lexik_currency.adapter" alias="ecb_currency_adapter"/>
      <call method="setEcbUrl">
        <argument>http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml</argument>
      </call>
      <factory service="lexik_currency.adapter_factory" method="createEcbAdapter"/>
    </service>
    <service id="lexik_currency.oer_adapter" class="Lexik\Bundle\CurrencyBundle\Adapter\OerCurrencyAdapter">
      <tag name="lexik_currency.adapter" alias="oer_currency_adapter"/>
      <call method="setOerUrl">
        <argument>http://openexchangerates.org/api/latest.json</argument>
      </call>
      <call method="setOerAppId">
        <argument>null</argument>
      </call>
      <factory service="lexik_currency.adapter_factory" method="createOerAdapter"/>
    </service>
    <service id="lexik_currency.yahoo_adapter" class="Lexik\Bundle\CurrencyBundle\Adapter\YahooCurrencyAdapter">
      <tag name="lexik_currency.adapter" alias="yahoo_currency_adapter"/>
      <call method="setYahooUrl">
        <argument>https://query.yahooapis.com/v1/public/yql</argument>
      </call>
      <factory service="lexik_currency.adapter_factory" method="createYahooAdapter"/>
    </service>
    <service id="Geocoder\Dumper\GeoArray" class="Geocoder\Dumper\GeoArray" public="true">
      <tag name="bazinga_geocoder.dumper"/>
    </service>
    <service id="Geocoder\Dumper\GeoJson" class="Geocoder\Dumper\GeoJson" public="true">
      <tag name="bazinga_geocoder.dumper"/>
    </service>
    <service id="Geocoder\Dumper\Gpx" class="Geocoder\Dumper\Gpx" public="true">
      <tag name="bazinga_geocoder.dumper"/>
    </service>
    <service id="Geocoder\Dumper\Kml" class="Geocoder\Dumper\Kml" public="true">
      <tag name="bazinga_geocoder.dumper"/>
    </service>
    <service id="Geocoder\Dumper\Wkb" class="Geocoder\Dumper\Wkb" public="true">
      <tag name="bazinga_geocoder.dumper"/>
    </service>
    <service id="Geocoder\Dumper\Wkt" class="Geocoder\Dumper\Wkt" public="true">
      <tag name="bazinga_geocoder.dumper"/>
    </service>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\ArcGISOnlineFactory" class="Bazinga\GeocoderBundle\ProviderFactory\ArcGISOnlineFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\BingMapsFactory" class="Bazinga\GeocoderBundle\ProviderFactory\BingMapsFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\ChainFactory" class="Bazinga\GeocoderBundle\ProviderFactory\ChainFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\FreeGeoIpFactory" class="Bazinga\GeocoderBundle\ProviderFactory\FreeGeoIpFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\GeoIP2Factory" class="Bazinga\GeocoderBundle\ProviderFactory\GeoIP2Factory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\GeoIPsFactory" class="Bazinga\GeocoderBundle\ProviderFactory\GeoIPsFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\GeoPluginFactory" class="Bazinga\GeocoderBundle\ProviderFactory\GeoPluginFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\GeoipFactory" class="Bazinga\GeocoderBundle\ProviderFactory\GeoipFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\GeonamesFactory" class="Bazinga\GeocoderBundle\ProviderFactory\GeonamesFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\GoogleMapsFactory" class="Bazinga\GeocoderBundle\ProviderFactory\GoogleMapsFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\HostIpFactory" class="Bazinga\GeocoderBundle\ProviderFactory\HostIpFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\IpInfoDbFactory" class="Bazinga\GeocoderBundle\ProviderFactory\IpInfoDbFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\MapQuestFactory" class="Bazinga\GeocoderBundle\ProviderFactory\MapQuestFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\MapzenFactory" class="Bazinga\GeocoderBundle\ProviderFactory\MapzenFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\MaxMindBinaryFactory" class="Bazinga\GeocoderBundle\ProviderFactory\MaxMindBinaryFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\MaxMindFactory" class="Bazinga\GeocoderBundle\ProviderFactory\MaxMindFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\NominatimFactory" class="Bazinga\GeocoderBundle\ProviderFactory\NominatimFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\OpenCageFactory" class="Bazinga\GeocoderBundle\ProviderFactory\OpenCageFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\PickPointFactory" class="Bazinga\GeocoderBundle\ProviderFactory\PickPointFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\PluginProviderFactory" class="Bazinga\GeocoderBundle\ProviderFactory\PluginProviderFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\TomTomFactory" class="Bazinga\GeocoderBundle\ProviderFactory\TomTomFactory" public="false"/>
    <service id="Bazinga\GeocoderBundle\ProviderFactory\YandexFactory" class="Bazinga\GeocoderBundle\ProviderFactory\YandexFactory" public="false"/>
    <service id="Geocoder\ProviderAggregator" class="Geocoder\ProviderAggregator">
      <call method="registerProviders">
        <argument type="collection">
          <argument type="service" id="bazinga_geocoder.provider.google_maps"/>
        </argument>
      </call>
    </service>
    <service id="Bazinga\GeocoderBundle\DataCollector\GeocoderDataCollector" class="Bazinga\GeocoderBundle\DataCollector\GeocoderDataCollector" public="false">
      <tag name="data_collector" template="@BazingaGeocoder/Collector/geocoder.html.twig" id="geocoder"/>
      <call method="addInstance">
        <argument type="service" id="bazinga_geocoder.provider.google_maps.profiler"/>
      </call>
    </service>
    <service id="bazinga_geocoder.provider.google_maps.profiler" class="Bazinga\GeocoderBundle\Plugin\ProfilingPlugin" public="false">
      <tag name="bazinga_geocoder.profiling_plugin"/>
      <argument>google_maps</argument>
    </service>
    <service id="bazinga_geocoder.provider.google_maps" class="Geocoder\Plugin\PluginProvider">
      <tag name="bazinga_geocoder.provider"/>
      <argument type="collection">
        <argument type="service" id="bazinga_geocoder.provider.google_maps.profiler"/>
      </argument>
      <argument type="service" id="Bazinga\GeocoderBundle\ProviderFactory\GoogleMapsFactory"/>
      <argument type="collection">
        <argument key="api_key">AIzaSyASijJ05pLq3ha4mKrriQsJcTQUHQgFMd0</argument>
        <argument key="region">null</argument>
      </argument>
      <factory class="Bazinga\GeocoderBundle\ProviderFactory\PluginProviderFactory" method="createPluginProvider"/>
    </service>
    <service id="fos_message.message_manager.default" class="FOS\MessageBundle\EntityManager\MessageManager" public="false">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>Cocorico\MessageBundle\Entity\Message</argument>
      <argument>Cocorico\MessageBundle\Entity\MessageMetadata</argument>
    </service>
    <service id="fos_message.thread_manager.default" class="FOS\MessageBundle\EntityManager\ThreadManager" public="false">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>Cocorico\MessageBundle\Entity\Thread</argument>
      <argument>Cocorico\MessageBundle\Entity\ThreadMetadata</argument>
      <argument type="service" id="fos_message.message_manager.default"/>
    </service>
    <service id="fos_message.sender.default" class="FOS\MessageBundle\Sender\Sender" public="false">
      <argument type="service" id="fos_message.message_manager.default"/>
      <argument type="service" id="fos_message.thread_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="fos_message.composer.default" class="FOS\MessageBundle\Composer\Composer" public="false">
      <argument type="service" id="fos_message.message_manager.default"/>
      <argument type="service" id="fos_message.thread_manager.default"/>
    </service>
    <service id="fos_message.participant_provider.default" class="FOS\MessageBundle\Security\ParticipantProvider" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="fos_message.authorizer.default" class="FOS\MessageBundle\Security\Authorizer" public="false">
      <argument type="service" id="fos_message.participant_provider.default"/>
    </service>
    <service id="fos_message.provider.default" class="FOS\MessageBundle\Provider\Provider" public="false">
      <argument type="service" id="fos_message.thread_manager.default"/>
      <argument type="service" id="fos_message.message_manager.default"/>
      <argument type="service" id="fos_message.thread_reader.default"/>
      <argument type="service" id="fos_message.authorizer.default"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
    </service>
    <service id="fos_message.message_reader.default" class="FOS\MessageBundle\Reader\Reader" public="false">
      <argument type="service" id="fos_message.participant_provider.default"/>
      <argument type="service" id="fos_message.message_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="fos_message.thread_reader.default" class="FOS\MessageBundle\Reader\Reader" public="false">
      <argument type="service" id="fos_message.participant_provider.default"/>
      <argument type="service" id="fos_message.thread_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="fos_message.deleter.default" class="FOS\MessageBundle\Deleter\Deleter" public="false">
      <argument type="service" id="fos_message.authorizer.default"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="fos_message.twig_extension.default" class="FOS\MessageBundle\Twig\Extension\MessageExtension" public="false">
      <tag name="twig.extension" alias="fos_message"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
      <argument type="service" id="fos_message.provider.default"/>
      <argument type="service" id="fos_message.authorizer.default"/>
    </service>
    <service id="fos_message.search_query_factory.default" class="FOS\MessageBundle\Search\QueryFactory" public="true">
      <argument type="service" id="request_stack"/>
      <argument>q</argument>
    </service>
    <service id="fos_message.search_finder.default" class="FOS\MessageBundle\Search\Finder" public="true">
      <argument type="service" id="fos_message.participant_provider.default"/>
      <argument type="service" id="fos_message.thread_manager.default"/>
    </service>
    <service id="fos_message.new_thread_form.type.default" class="FOS\MessageBundle\FormType\NewThreadMessageFormType" public="false"/>
    <service id="fos_message.new_thread_multiple_form.type" class="FOS\MessageBundle\FormType\NewThreadMultipleMessageFormType" public="false"/>
    <service id="fos_message.reply_form.type.default" class="FOS\MessageBundle\FormType\ReplyMessageFormType" public="false"/>
    <service id="fos_message.new_thread_form.factory.default" class="FOS\MessageBundle\FormFactory\NewThreadMessageFormFactory" public="false">
      <argument type="service" id="form.factory"/>
      <argument>Cocorico\MessageBundle\Form\Type\Frontend\NewThreadMessageFormType</argument>
      <argument>message</argument>
      <argument>Cocorico\MessageBundle\FormModel\NewThreadMessage</argument>
    </service>
    <service id="fos_message.reply_form.factory.default" class="FOS\MessageBundle\FormFactory\ReplyMessageFormFactory" public="false">
      <argument type="service" id="form.factory"/>
      <argument>FOS\MessageBundle\FormType\ReplyMessageFormType</argument>
      <argument>message</argument>
      <argument>FOS\MessageBundle\FormModel\ReplyMessage</argument>
    </service>
    <service id="fos_message.new_thread_form.handler.default" class="FOS\MessageBundle\FormHandler\NewThreadMessageFormHandler" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico_message.composer"/>
      <argument type="service" id="fos_message.sender.default"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
    </service>
    <service id="fos_message.new_thread_multiple_form.handler" class="FOS\MessageBundle\FormHandler\NewThreadMultipleMessageFormHandler" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico_message.composer"/>
      <argument type="service" id="fos_message.sender.default"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
    </service>
    <service id="fos_message.reply_form.handler.default" class="FOS\MessageBundle\FormHandler\ReplyMessageFormHandler" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico_message.composer"/>
      <argument type="service" id="fos_message.sender.default"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
    </service>
    <service id="fos_message.recipients_data_transformer" class="FOS\MessageBundle\DataTransformer\RecipientsDataTransformer" public="false">
      <argument type="service" id="fos_user.user_to_username_transformer"/>
    </service>
    <service id="fos_message.recipients_selector" class="FOS\MessageBundle\FormType\RecipientsType" public="true">
      <tag name="form.type" alias="recipients_selector"/>
      <argument type="service" id="fos_message.recipients_data_transformer"/>
    </service>
    <service id="fos_message.validator.authorization" class="FOS\MessageBundle\Validator\AuthorizationValidator">
      <tag name="validator.constraint_validator" alias="fos_message.validator.authorization"/>
      <argument type="service" id="fos_message.authorizer.default"/>
    </service>
    <service id="fos_message.validator.reply_authorization" class="FOS\MessageBundle\Validator\ReplyAuthorizationValidator">
      <tag name="validator.constraint_validator" alias="fos_message.validator.reply_authorization"/>
      <argument type="service" id="fos_message.authorizer.default"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
    </service>
    <service id="fos_message.validator.spam" class="FOS\MessageBundle\Validator\SpamValidator">
      <tag name="validator.constraint_validator" alias="fos_message.validator.spam"/>
      <argument type="service" id="fos_message.noop_spam_detector"/>
    </service>
    <service id="fos_message.validator.self_recipient" class="FOS\MessageBundle\Validator\SelfRecipientValidator">
      <tag name="validator.constraint_validator" alias="fos_message.validator.self_recipient"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
    </service>
    <service id="fos_message.noop_spam_detector" class="FOS\MessageBundle\SpamDetection\NoopSpamDetector" public="false"/>
    <service id="fos_message.akismet_spam_detector" class="FOS\MessageBundle\SpamDetection\AkismetSpamDetector" public="false">
      <argument type="service" id="ornicar_akismet"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
    </service>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory" public="true">
      <call method="addExtension">
        <argument type="service" id="knp_menu.factory_extension.routing"/>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.factory_extension.routing" class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
      <tag name="knp_menu.factory_extension"/>
      <argument type="service" id="jms_i18n_routing.router"/>
    </service>
    <service id="knp_menu.helper" class="Knp\Menu\Twig\Helper" public="false">
      <argument type="service" id="knp_menu.renderer_provider"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="knp_menu.manipulator"/>
      <argument type="service" id="knp_menu.matcher"/>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher" public="true">
      <argument type="iterator">
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
        <argument type="service" id="sonata.admin.menu.matcher.voter.active"/>
        <argument type="service" id="knp_menu.voter.router"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.chain" class="Knp\Menu\Provider\ChainProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="sonata.admin.menu.group_provider"/>
        <argument type="service" id="knp_menu.menu_provider.lazy"/>
        <argument type="service" id="knp_menu.menu_provider.builder_alias"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.lazy" class="Knp\Menu\Provider\LazyProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="collection">
        <argument key="sonata_admin_sidebar" type="service" id="sonata.admin.sidebar_menu"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.builder_alias" class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Menu\Renderer\PsrProvider">
      <argument type="service" id="service_locator.hskmc8u"/>
      <argument>twig</argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.listener.voters" class="Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <tag name="container.hot_path"/>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
      </call>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="knp_menu.manipulator" class="Knp\Menu\Util\MenuManipulator" public="false"/>
    <service id="knp_menu.twig.extension" class="Knp\Menu\Twig\MenuExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="knp_menu.helper"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="service" id="knp_menu.manipulator"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>@KnpMenu/menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="white_october_breadcrumbs" class="WhiteOctober\BreadcrumbsBundle\Model\Breadcrumbs">
      <call method="setRouter">
        <argument type="service" id="jms_i18n_routing.router"/>
      </call>
    </service>
    <service id="white_october_breadcrumbs.helper" class="WhiteOctober\BreadcrumbsBundle\Templating\Helper\BreadcrumbsHelper">
      <tag name="templating.helper" alias="breadcrumbs"/>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="white_october_breadcrumbs"/>
      <argument>%white_october_breadcrumbs.options%</argument>
    </service>
    <service id="white_october_breadcrumbs.twig" class="WhiteOctober\BreadcrumbsBundle\Twig\Extension\BreadcrumbsExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="hwi_oauth.authentication.listener.oauth" class="HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="hwi_oauth.authentication.provider.oauth" class="HWI\Bundle\OAuthBundle\Security\Core\Authentication\Provider\OAuthProvider" public="false"/>
    <service id="hwi_oauth.authentication.entry_point.oauth" class="HWI\Bundle\OAuthBundle\Security\Http\EntryPoint\OAuthEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
    </service>
    <service id="hwi_oauth.user.provider" class="HWI\Bundle\OAuthBundle\Security\Core\User\OAuthUserProvider" public="false"/>
    <service id="hwi_oauth.user.provider.entity" class="HWI\Bundle\OAuthBundle\Security\Core\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="hwi_oauth.user.provider.fosub_bridge.def" class="HWI\Bundle\OAuthBundle\Security\Core\User\FOSUBUserProvider" abstract="true">
      <argument type="service" id="cocorico_user.user_manager"/>
    </service>
    <service id="hwi_oauth.registration.form.handler.fosub_bridge.def" class="HWI\Bundle\OAuthBundle\Form\FOSUBRegistrationFormHandler" abstract="true">
      <argument type="service" id="cocorico_user.user_manager"/>
      <argument type="service" id="cocorico_user.mailer.twig_swift"/>
      <argument type="service" id="fos_user.util.token_generator.default" on-invalid="null"/>
      <call method="setFormHandler">
        <argument type="service" id="fos_user.registration.form.handler" on-invalid="null"/>
      </call>
    </service>
    <service id="hwi_oauth.storage.session" class="HWI\Bundle\OAuthBundle\OAuth\RequestDataStorage\SessionStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="hwi_oauth.security.oauth_utils" class="HWI\Bundle\OAuthBundle\Security\OAuthUtils">
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument>true</argument>
      <call method="addResourceOwnerMap">
        <argument type="service" id="hwi_oauth.resource_ownermap.main"/>
      </call>
    </service>
    <service id="hwi_oauth.abstract_resource_ownermap" class="HWI\Bundle\OAuthBundle\Security\Http\ResourceOwnerMap" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>%hwi_oauth.resource_owners%</argument>
      <argument type="collection"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="hwi_oauth.abstract_resource_owner.generic" abstract="true">
      <argument type="service" id="hwi_oauth.http_client"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="hwi_oauth.abstract_resource_owner.oauth2" class="HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GenericOAuth2ResourceOwner" abstract="true">
      <argument type="service" id="hwi_oauth.http_client"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument></argument>
      <argument type="service" id="hwi_oauth.storage.session"/>
    </service>
    <service id="hwi_oauth.abstract_resource_owner.oauth1" class="HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GenericOAuth1ResourceOwner" abstract="true">
      <argument type="service" id="hwi_oauth.http_client"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument></argument>
      <argument type="service" id="hwi_oauth.storage.session"/>
    </service>
    <service id="hwi_oauth.templating.helper.oauth" class="HWI\Bundle\OAuthBundle\Templating\Helper\OAuthHelper">
      <tag name="templating.helper" alias="oauth"/>
      <argument type="service" id="hwi_oauth.security.oauth_utils"/>
      <call method="setRequest">
        <argument type="service" id="request_stack" on-invalid="null"/>
      </call>
    </service>
    <service id="hwi_oauth.twig.extension.oauth" class="HWI\Bundle\OAuthBundle\Twig\Extension\OAuthExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="hwi_oauth.templating.helper.oauth"/>
    </service>
    <service id="hwi_oauth.http_client" class="Buzz\Client\Curl">
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
    </service>
    <service id="hwi_oauth.resource_owner.facebook" class="HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FacebookResourceOwner">
      <argument type="service" id="hwi_oauth.http_client"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection">
        <argument key="client_id">352775691816092</argument>
        <argument key="client_secret">b9bbb15df57211e79d8f45782e7c1775</argument>
        <argument key="options" type="collection">
          <argument key="csrf">true</argument>
        </argument>
        <argument key="scope">public_profile</argument>
        <argument key="infos_url">https://graph.facebook.com/me?fields=id,link,name,email,first_name,last_name,verified,gender,locale,timezone,picture.height(500).width(500)</argument>
        <argument key="paths" type="collection">
          <argument key="profilepicture">picture.data.url</argument>
        </argument>
      </argument>
      <argument>facebook</argument>
      <argument type="service" id="hwi_oauth.storage.session"/>
    </service>
    <service id="ivory_ck_editor.command.installer" class="Ivory\CKEditorBundle\Command\CKEditorInstallerCommand">
      <tag name="console.command"/>
      <argument type="service" id="ivory_ck_editor.installer"/>
    </service>
    <service id="ivory_ck_editor.form.type" class="Ivory\CKEditorBundle\Form\Type\CKEditorType">
      <tag name="form.type"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.styles_set_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
      <argument type="service" id="ivory_ck_editor.toolbar_manager"/>
    </service>
    <service id="ivory_ck_editor.config_manager" class="Ivory\CKEditorBundle\Model\ConfigManager">
      <call method="setConfigs">
        <argument type="collection">
          <argument key="default" type="collection">
            <argument key="toolbar">full</argument>
            <argument key="filebrowserBrowseRoute">elfinder</argument>
            <argument key="filebrowserBrowseRouteParameters" type="collection">
              <argument key="instance">ckeditor</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="setDefaultConfig">
        <argument>default</argument>
      </call>
    </service>
    <service id="ivory_ck_editor.plugin_manager" class="Ivory\CKEditorBundle\Model\PluginManager"/>
    <service id="ivory_ck_editor.styles_set_manager" class="Ivory\CKEditorBundle\Model\StylesSetManager"/>
    <service id="ivory_ck_editor.template_manager" class="Ivory\CKEditorBundle\Model\TemplateManager"/>
    <service id="ivory_ck_editor.toolbar_manager" class="Ivory\CKEditorBundle\Model\ToolbarManager"/>
    <service id="ivory_ck_editor.installer" class="Ivory\CKEditorBundle\Installer\CKEditorInstaller"/>
    <service id="ivory_ck_editor.renderer" class="Ivory\CKEditorBundle\Renderer\CKEditorRenderer">
      <argument type="service" id="service_container"/>
    </service>
    <service id="ivory_ck_editor.renderer.json_builder" class="Ivory\JsonBuilder\JsonBuilder">
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="ivory_ck_editor.twig_extension" class="Ivory\CKEditorBundle\Twig\CKEditorExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="ivory_ck_editor.renderer"/>
    </service>
    <service id="fm_elfinder.configurator.default" class="FM\ElfinderBundle\Configuration\ElFinderConfigurationReader">
      <argument>%fm_elfinder%</argument>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="fm_elfinder.loader.default" class="FM\ElfinderBundle\Loader\ElFinderLoader">
      <argument type="service" id="fm_elfinder.configurator.default"/>
    </service>
    <service id="twig.extension.fm_elfinder_init" class="FM\ElfinderBundle\Twig\Extension\FMElfinderExtension">
      <tag name="twig.extension" alias="fm_elfinder_init"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="fm_elfinder.form.type" class="FM\ElfinderBundle\Form\Type\ElFinderType">
      <tag name="form.type"/>
    </service>
    <service id="doctrine.fixtures_load_command" class="Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command" command="doctrine:fixtures:load"/>
      <argument type="service" id="doctrine.fixtures.loader"/>
      <call method="setName">
        <argument>doctrine:fixtures:load</argument>
      </call>
    </service>
    <service id="doctrine.fixtures.loader" class="Doctrine\Bundle\FixturesBundle\Loader\SymfonyFixturesLoader" public="false">
      <argument type="service" id="service_container"/>
      <call method="addFixtures">
        <argument type="collection">
          <argument type="service" id="Cocorico\CoreBundle\DataFixtures\ORM\CurrencyFixtures"/>
          <argument type="service" id="Cocorico\CoreBundle\DataFixtures\ORM\ListingCategoryFixtures"/>
          <argument type="service" id="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicFixtures"/>
          <argument type="service" id="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicGroupFixtures"/>
          <argument type="service" id="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicTypeFixtures"/>
          <argument type="service" id="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicValueFixtures"/>
          <argument type="service" id="Cocorico\CoreBundle\DataFixtures\ORM\ListingFixtures"/>
          <argument type="service" id="Cocorico\CoreBundle\DataFixtures\ORM\PageFixtures"/>
          <argument type="service" id="Cocorico\CoreBundle\DataFixtures\ORM\UserFixtures"/>
        </argument>
      </call>
    </service>
    <service id="simplethings_entityaudit.manager" class="SimpleThings\EntityAudit\AuditManager">
      <argument type="service" id="simplethings_entityaudit.config"/>
    </service>
    <service id="simplethings_entityaudit.reader" class="SimpleThings\EntityAudit\AuditReader">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <factory service="simplethings_entityaudit.manager" method="createAuditReader"/>
    </service>
    <service id="simplethings_entityaudit.log_revisions_listener" class="SimpleThings\EntityAudit\EventListener\LogRevisionsListener">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="simplethings_entityaudit.manager"/>
    </service>
    <service id="simplethings_entityaudit.create_schema_listener" class="SimpleThings\EntityAudit\EventListener\CreateSchemaListener">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="simplethings_entityaudit.manager"/>
    </service>
    <service id="simplethings_entityaudit.username_callable.token_storage" class="SimpleThings\EntityAudit\User\TokenStorageUsernameCallable">
      <argument type="service" id="service_container"/>
    </service>
    <service id="simplethings_entityaudit.config" class="SimpleThings\EntityAudit\AuditConfiguration">
      <call method="setAuditedEntityClasses">
        <argument>%simplethings.entityaudit.audited_entities%</argument>
      </call>
      <call method="setGlobalIgnoreColumns">
        <argument type="collection"/>
      </call>
      <call method="setTablePrefix">
        <argument></argument>
      </call>
      <call method="setTableSuffix">
        <argument>_audit</argument>
      </call>
      <call method="setRevisionTableName">
        <argument>revisions</argument>
      </call>
      <call method="setRevisionIdFieldType">
        <argument>integer</argument>
      </call>
      <call method="setRevisionFieldName">
        <argument>rev</argument>
      </call>
      <call method="setRevisionTypeFieldName">
        <argument>revtype</argument>
      </call>
      <call method="setUsernameCallable">
        <argument type="service" id="simplethings_entityaudit.username_callable.token_storage"/>
      </call>
    </service>
    <service id="cocorico_geo.form.type.geocoding" class="Cocorico\GeoBundle\Form\Type\GeocodingToCoordinateType">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>%cocorico.locales%</argument>
      <argument type="service" id="request_stack"/>
      <argument>AIzaSyASijJ05pLq3ha4mKrriQsJcTQUHQgFMd0</argument>
    </service>
    <service id="cocorico_geo.twig.cocorico_geo_extension" class="Cocorico\GeoBundle\Twig\GeoExtension">
      <tag name="twig.extension"/>
      <argument>AIzaSyAvng_eh8UKyAf4c_47EKdcWTj4jhvT-6U</argument>
      <argument>null</argument>
    </service>
    <service id="cocorico_geo.geocoding.manager" class="Cocorico\GeoBundle\Model\Manager\GeocodingManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="cocorico_user.mailer.twig_swift" class="Cocorico\UserBundle\Mailer\TwigSwiftMailer" public="true">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="templates" type="collection">
          <argument key="account_created_user">CocoricoUserBundle:Mails/User:account_created_user.txt.twig</argument>
          <argument key="forgot_password_user">CocoricoUserBundle:Mails/User:forgot_password_user.txt.twig</argument>
          <argument key="account_creation_confirmation_user">CocoricoUserBundle:Mails/User:account_creation_confirmation_user.txt.twig</argument>
        </argument>
        <argument key="from_email">no-reply@cocorico.io</argument>
        <argument key="site_name">Costocking.com</argument>
        <argument key="locales">%cocorico.locales%</argument>
        <argument key="locale">fr</argument>
      </argument>
    </service>
    <service id="cocorico_user.profile_about_me.form.type" class="Cocorico\UserBundle\Form\Type\ProfileAboutMeFormType">
      <tag name="form.type" alias="user_profile_about_me"/>
      <argument>Cocorico\UserBundle\Entity\User</argument>
      <argument type="service" id="request_stack"/>
      <argument>%cocorico.locales%</argument>
    </service>
    <service id="fos_user.listener.email_confirmation" public="false" abstract="true"/>
    <service id="sonata.admin.page" class="Cocorico\PageBundle\Admin\PageAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Site" label="Pages"/>
      <argument>sonata.admin.page</argument>
      <argument>Cocorico\PageBundle\Entity\Page</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Pages</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.footer" class="Cocorico\CMSBundle\Admin\FooterAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Site" label="Footers"/>
      <argument>sonata.admin.footer</argument>
      <argument>Cocorico\CMSBundle\Entity\Footer</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setFooterManager">
        <argument type="service" id="cocorico_cms.footer.manager"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Footers</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="cocorico_cms.footer.manager" class="Cocorico\CMSBundle\Model\Manager\FooterManager" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="cocorico.breadcrumbs_yaml_parser" class="Symfony\Component\Yaml\Parser"/>
    <service id="cocorico.breadcrumbs_yaml_locator" class="Symfony\Component\Config\FileLocator">
      <argument>/cocorico/app/../src/Cocorico/BreadcrumbBundle/Resources/content/</argument>
    </service>
    <service id="cocorico.breadcrumbs_loader" class="Cocorico\BreadcrumbBundle\Services\BreadcrumbsYamlLoader">
      <argument type="service" id="cocorico.breadcrumbs_yaml_parser"/>
      <argument type="service" id="cocorico.breadcrumbs_yaml_locator"/>
    </service>
    <service id="cocorico.breadcrumbs_manager" class="Cocorico\BreadcrumbBundle\Services\BreadcrumbsManager">
      <argument type="service" id="white_october_breadcrumbs"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="cocorico.breadcrumbs_loader"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="cocorico.translator.breadcrumbs_extractor" class="Cocorico\BreadcrumbBundle\Translator\BreadcrumbsExtractor">
      <tag name="jms_translation.extractor" alias="cocorico_breadcrumbs"/>
      <argument type="service" id="cocorico.breadcrumbs_loader"/>
      <argument>%white_october_breadcrumbs.options%</argument>
    </service>
    <service id="cocorico_message.booking.subscriber" class="Cocorico\MessageBundle\Event\BookingSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="cocorico_message.thread_manager"/>
    </service>
    <service id="cocorico_message.message.subscriber" class="Cocorico\MessageBundle\Event\MessageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="cocorico_message.mailer.twig_swift"/>
    </service>
    <service id="cocorico_message.mailer.twig_swift" class="Cocorico\MessageBundle\Mailer\TwigSwiftMailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="jms_i18n_routing.router"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="parameters" type="collection">
          <argument key="cocorico_locales">%cocorico.locales%</argument>
          <argument key="cocorico_locale">fr</argument>
          <argument key="cocorico_from_email">no-reply@cocorico.io</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="templates" type="collection">
          <argument key="new_thread_message_user">CocoricoMessageBundle:Mails:new_thread_message_user.txt.twig</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.admin.thread" class="Cocorico\MessageBundle\Admin\ThreadAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Users" label="Messages"/>
      <argument>sonata.admin.thread</argument>
      <argument>Cocorico\MessageBundle\Entity\Thread</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Messages</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.message" class="Cocorico\MessageBundle\Admin\MessageAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard=""/>
      <argument>sonata.admin.message</argument>
      <argument>Cocorico\MessageBundle\Entity\Message</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setLocales">
        <argument>%cocorico.locales%</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>-</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="cocorico_message.new_thread.form.type" class="Cocorico\MessageBundle\Form\Type\Frontend\NewThreadMessageFormType" public="true">
      <tag name="form.type"/>
      <argument>Cocorico\MessageBundle\Entity\Thread</argument>
    </service>
    <service id="cocorico_message.new_thread.form.handler" class="Cocorico\MessageBundle\FormHandler\NewThreadMessageFormHandler" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico_message.composer"/>
      <argument type="service" id="fos_message.sender.default"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
    </service>
    <service id="cocorico_message.reply.form.type" class="Cocorico\MessageBundle\Form\Type\Frontend\ReplyMessageFormType" public="true">
      <tag name="form.type"/>
      <argument>Cocorico\MessageBundle\Entity\Thread</argument>
    </service>
    <service id="cocorico_message.reply.form.handler" class="Cocorico\MessageBundle\FormHandler\ReplyMessageFormHandler" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico_message.composer"/>
      <argument type="service" id="fos_message.sender.default"/>
      <argument type="service" id="fos_message.participant_provider.default"/>
    </service>
    <service id="cocorico_message.composer" class="Cocorico\MessageBundle\Composer\Composer" public="false">
      <argument type="service" id="fos_message.message_manager.default"/>
      <argument type="service" id="fos_message.thread_manager.default"/>
    </service>
    <service id="cocorico_message.thread_manager" class="Cocorico\MessageBundle\Model\ThreadManager">
      <argument type="service" id="fos_message.thread_manager.default"/>
      <argument type="service" id="fos_message.message_manager.default"/>
      <argument type="service" id="cocorico_user.mailer.twig_swift"/>
      <argument>10</argument>
    </service>
    <service id="sonata.admin.contact" class="Cocorico\ContactBundle\Admin\ContactAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Site" label="Contact"/>
      <argument>sonata.admin.contact</argument>
      <argument>Cocorico\ContactBundle\Entity\Contact</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contact</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="cocorico_contact.form.type.contact_new" class="Cocorico\ContactBundle\Form\Type\Frontend\ContactNewType">
      <tag name="form.type"/>
    </service>
    <service id="cocorico_contact.contact.manager" class="Cocorico\ContactBundle\Model\Manager\ContactManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="cocorico_contact.form.handler.contact" class="Cocorico\ContactBundle\Form\Handler\Frontend\ContactFormHandler">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico_contact.contact.manager"/>
      <argument type="service" id="cocorico_contact.mailer.twig_swift"/>
    </service>
    <service id="cocorico_contact.mailer.twig_swift" class="Cocorico\ContactBundle\Mailer\TwigSwiftMailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="parameters" type="collection">
          <argument key="cocorico_locale">fr</argument>
          <argument key="cocorico_contact_from_email">no-reply@cocorico.io</argument>
          <argument key="cocorico_contact_contact_email">contact@costocking.com</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="templates" type="collection">
          <argument key="contact_message">CocoricoContactBundle:Mails:contact_message.txt.twig</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.admin.review" class="Cocorico\ReviewBundle\Admin\ReviewAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="Users" label="Reviews"/>
      <argument>sonata.admin.review</argument>
      <argument>Cocorico\ReviewBundle\Entity\Review</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Reviews</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="cocorico.review.listener" class="Cocorico\ReviewBundle\Entity\Listener\ReviewListener">
      <tag name="doctrine.orm.entity_listener"/>
      <tag name="doctrine.orm.entity_listener" entity_manager="default"/>
    </service>
    <service id="cocorico.review.manager" class="Cocorico\ReviewBundle\Model\ReviewManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>10</argument>
    </service>
    <service id="cocorico.star_rating.form.type" class="Cocorico\ReviewBundle\Form\Type\StarRatingType">
      <tag name="form.type"/>
    </service>
    <service id="cocorico.form.type.review_new" class="Cocorico\ReviewBundle\Form\Type\Dashboard\ReviewType">
      <tag name="form.type"/>
    </service>
    <service id="cocorico.form.handler.review" class="Cocorico\ReviewBundle\Form\Handler\Frontend\ReviewFormHandler">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="cocorico.review.manager"/>
    </service>
    <service id="cocorico.star_rating.twig.extension" class="Cocorico\ReviewBundle\Extension\StarRatingTwigExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="security.access.review_voter" class="Cocorico\ReviewBundle\Security\Voter\ReviewVoter" public="false">
      <tag name="security.voter"/>
    </service>
    <service id="sonata.admin.parameter" class="Cocorico\ConfigBundle\Admin\ParameterAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" audit="1" group="Site" label="Configuration"/>
      <argument>sonata.admin.parameter</argument>
      <argument>Cocorico\ConfigBundle\Entity\Parameter</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Configuration</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument>%sonata.admin.configuration.templates%</argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="cocorico_time.form.type.date_range" class="Cocorico\TimeBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="date_range"/>
      <argument>1440</argument>
      <argument>360</argument>
    </service>
    <service id="cocorico_time.form.type.date_hidden" class="Cocorico\TimeBundle\Form\Type\DateHiddenType">
      <tag name="form.type" alias="date_hidden"/>
    </service>
    <service id="cocorico_time.form.type.time_range" class="Cocorico\TimeBundle\Form\Type\TimeRangeType">
      <tag name="form.type" alias="time_range"/>
      <argument type="service" id="session"/>
      <argument>1440</argument>
      <argument>8</argument>
      <argument>%cocorico.time_hours_available%</argument>
    </service>
    <service id="cocorico_time.form.type.weekdays" class="Cocorico\TimeBundle\Form\Type\WeekDaysType">
      <tag name="form.type" alias="weekdays"/>
    </service>
    <service id="cocorico_time.twig.time_extension" class="Cocorico\TimeBundle\Twig\TimeExtension">
      <tag name="twig.extension"/>
      <argument>1440</argument>
      <argument>true</argument>
    </service>
    <service id="cocorico_time.twig.intl_extension" class="Cocorico\TimeBundle\Twig\IntlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="cocorico_time.times_range_overlap_validator" class="Cocorico\TimeBundle\Validator\Constraints\TimeRangesOverlapValidator">
      <tag name="validator.constraint_validator" alias="time_ranges_overlap"/>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.cli_dumper"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
    </service>
    <service id="var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="2_HtmlDumper~eupgl19" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id="1_NonceGenerator~eupgl19" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="jms_i18n_routing.router" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument>bottom</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/cocorico</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="jms_i18n_routing.router" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id="1_NonceGenerator~eupgl19"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="2_HtmlDumper~eupgl19"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="jms_i18n_routing.router" on-invalid="ignore"/>
      <argument>^/(app(_[\w]+)?\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="sensio_distribution.security_checker" class="SensioLabs\Security\SecurityChecker"/>
    <service id="sensio_distribution.security_checker.command" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="sensio_distribution.security_checker"/>
    </service>
    <service id="instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Cocorico\CoreBundle\DataFixtures\ORM\CurrencyFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\CurrencyFixtures" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Cocorico\CoreBundle\DataFixtures\ORM\CurrencyFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\CurrencyFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Cocorico\CoreBundle\DataFixtures\ORM\ListingCategoryFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCategoryFixtures" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Cocorico\CoreBundle\DataFixtures\ORM\ListingCategoryFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCategoryFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicFixtures" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicGroupFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicGroupFixtures" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicGroupFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicGroupFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicTypeFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicTypeFixtures" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicTypeFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicTypeFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicValueFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicValueFixtures" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicValueFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingCharacteristicValueFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Cocorico\CoreBundle\DataFixtures\ORM\ListingFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingFixtures" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Cocorico\CoreBundle\DataFixtures\ORM\ListingFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\ListingFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Cocorico\CoreBundle\DataFixtures\ORM\PageFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\PageFixtures" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Cocorico\CoreBundle\DataFixtures\ORM\PageFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\PageFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Cocorico\CoreBundle\DataFixtures\ORM\UserFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\UserFixtures" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Cocorico\CoreBundle\DataFixtures\ORM\UserFixtures" class="Cocorico\CoreBundle\DataFixtures\ORM\UserFixtures" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="service_locator.sr6ctxe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id="service_locator.1guzofx"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="debug:swiftmailer">swiftmailer.command.debug</argument>
        <argument key="swiftmailer:email:send">swiftmailer.command.new_email</argument>
        <argument key="swiftmailer:spool:send">swiftmailer.command.send_email</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:generate:entities">doctrine.generate_entities_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:fixtures:load">doctrine.fixtures_load_command</argument>
      </argument>
    </service>
    <service id="service_locator.1guzofx" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.fixtures_load_command" type="service" id="doctrine.fixtures_load_command"/>
        <argument key="doctrine.generate_entities_command" type="service" id="doctrine.generate_entities_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="swiftmailer.command.debug" type="service" id="swiftmailer.command.debug"/>
        <argument key="swiftmailer.command.new_email" type="service" id="swiftmailer.command.new_email"/>
        <argument key="swiftmailer.command.send_email" type="service" id="swiftmailer.command.send_email"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
      </argument>
    </service>
    <service id="service_locator.yepb.pt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id="service_locator.o0cobhk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="hinclude" type="service" id="fragment.renderer.hinclude"/>
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="service_locator.kdgat.o" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="A2lix\TranslationFormBundle\Form\Type\TranslatedEntityType" type="service" id="a2lix_translation_form.default.type.translatedEntity"/>
        <argument key="A2lix\TranslationFormBundle\Form\Type\TranslationsType" type="service" id="a2lix_translation_form.default.type.translations"/>
        <argument key="A2lix\TranslationFormBundle\Form\Type\TranslationsFieldsType" type="service" id="a2lix_translation_form.default.type.translationsFields"/>
        <argument key="A2lix\TranslationFormBundle\Form\Type\TranslationsFormsType" type="service" id="a2lix_translation_form.default.type.translationsForms"/>
        <argument key="A2lix\TranslationFormBundle\Form\Type\TranslationsLocalesSelectorType" type="service" id="a2lix_translation_form.default.type.translationsLocalesSelector"/>
        <argument key="Cocorico\UserBundle\Form\Type\ProfileAboutMeFormType" type="service" id="cocorico_user.profile_about_me.form.type"/>
        <argument key="FM\ElfinderBundle\Form\Type\ElFinderType" type="service" id="fm_elfinder.form.type"/>
        <argument key="Liip\ImagineBundle\Form\Type\ImageType" type="service" id="liip_imagine.form.type.image"/>
        <argument key="Cocorico\ContactBundle\Form\Type\Frontend\ContactNewType" type="service" id="cocorico_contact.form.type.contact_new"/>
        <argument key="Cocorico\CoreBundle\Form\Type\CountryFilteredType" type="service" id="cocorico.form.type.country_filtered"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\BookingEditType" type="service" id="cocorico.form.type.booking_edit"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\BookingStatusFilterType" type="service" id="cocorico.form.booking.status_filter"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilitiesPricesType" type="service" id="cocorico.form.type.listing_edit_availabilities_prices"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilitiesStatusType" type="service" id="cocorico.form.type.listing_edit_availabilities_status"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilitiesType" type="service" id="cocorico.form.type.listing_edit_availabilities"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilityPriceType" type="service" id="cocorico.form.type.listing_edit_availability_price"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilityStatusType" type="service" id="cocorico.form.type.listing_edit_availability_status"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditCategoriesAjaxType" type="service" id="cocorico.form.type.listing_edit_categories_ajax"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditCategoriesType" type="service" id="cocorico.form.type.listing_edit_categories"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditCharacteristicType" type="service" id="cocorico.form.type.listing_edit_characteristic"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditDescriptionType" type="service" id="cocorico.form.type.listing_edit_description"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditDurationType" type="service" id="cocorico.form.type.listing_edit_duration"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditImagesType" type="service" id="cocorico.form.type.listing_edit_images"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditLocationType" type="service" id="cocorico.form.type.listing_edit_location"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditPriceType" type="service" id="cocorico.form.type.listing_edit_price"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditStatusType" type="service" id="cocorico.form.type.listing_edit_status"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditType" type="service" id="cocorico.form.type.listing_edit"/>
        <argument key="Cocorico\CoreBundle\Form\Type\EntityHiddenType" type="service" id="cocorico.form.type.entity_hidden"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\BookingNewType" type="service" id="cocorico.form.type.booking_new"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\BookingPriceType" type="service" id="cocorico.form.type.booking_price"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\BookingUserAddressFormType" type="service" id="cocorico.form.type.booking_user_address"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\ListingNewCategoriesType" type="service" id="cocorico.form.type.listing_new_categories"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\ListingNewType" type="service" id="cocorico.form.type.listing_new"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\ListingSearchHomeType" type="service" id="cocorico.form.type.listing_search_home"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\ListingSearchResultType" type="service" id="cocorico.form.type.listing_search_result"/>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\ListingSearchType" type="service" id="cocorico.form.type.listing_search"/>
        <argument key="Cocorico\CoreBundle\Form\Type\LanguageFilteredType" type="service" id="cocorico.form.type.language_filtered"/>
        <argument key="Cocorico\CoreBundle\Form\Type\ListingCategoryType" type="service" id="cocorico.form.type.listing_category"/>
        <argument key="Cocorico\CoreBundle\Form\Type\ListingCharacteristicType" type="service" id="cocorico.form.type.listing_characteristic"/>
        <argument key="Cocorico\CoreBundle\Form\Type\ListingListingCharacteristicType" type="service" id="cocorico.form.type.listing_listing_characteristic"/>
        <argument key="Cocorico\CoreBundle\Form\Type\PriceRangeType" type="service" id="cocorico.form.type.price_range"/>
        <argument key="Cocorico\CoreBundle\Form\Type\PriceType" type="service" id="cocorico.form.type.price"/>
        <argument key="Cocorico\GeoBundle\Form\Type\GeocodingToCoordinateType" type="service" id="cocorico_geo.form.type.geocoding"/>
        <argument key="Cocorico\MessageBundle\Form\Type\Frontend\NewThreadMessageFormType" type="service" id="cocorico_message.new_thread.form.type"/>
        <argument key="Cocorico\MessageBundle\Form\Type\Frontend\ReplyMessageFormType" type="service" id="cocorico_message.reply.form.type"/>
        <argument key="Cocorico\ReviewBundle\Form\Type\Dashboard\ReviewType" type="service" id="cocorico.form.type.review_new"/>
        <argument key="Cocorico\ReviewBundle\Form\Type\StarRatingType" type="service" id="cocorico.star_rating.form.type"/>
        <argument key="Cocorico\TimeBundle\Form\Type\DateHiddenType" type="service" id="cocorico_time.form.type.date_hidden"/>
        <argument key="Cocorico\TimeBundle\Form\Type\DateRangeType" type="service" id="cocorico_time.form.type.date_range"/>
        <argument key="Cocorico\TimeBundle\Form\Type\TimeRangeType" type="service" id="cocorico_time.form.type.time_range"/>
        <argument key="Cocorico\TimeBundle\Form\Type\WeekDaysType" type="service" id="cocorico_time.form.type.weekdays"/>
        <argument key="Cocorico\UserBundle\Form\Type\LoginFormType" type="service" id="cocorico_user.form.type.login"/>
        <argument key="Cocorico\UserBundle\Form\Type\RegistrationFormType" type="service" id="cocorico_user.form.type.register"/>
        <argument key="Cocorico\UserBundle\Form\Type\ResettingFormType" type="service" id="fos_user.resetting.form.type"/>
        <argument key="Cocorico\UserBundle\Form\Type\UserAddressFormType" type="service" id="cocorico_user.form.type.user_address"/>
        <argument key="Doctrine\Bundle\MongoDBBundle\Form\Type\DocumentType" type="service" id="form.type.mongodb_document"/>
        <argument key="FOS\MessageBundle\FormType\RecipientsType" type="service" id="fos_message.recipients_selector"/>
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType" type="service" id="fos_user.change_password.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\GroupFormType" type="service" id="fos_user.group.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType" type="service" id="fos_user.profile.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType" type="service" id="fos_user.registration.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType" type="service" id="fos_user.username_form_type"/>
        <argument key="Ivory\CKEditorBundle\Form\Type\CKEditorType" type="service" id="ivory_ck_editor.form.type"/>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType" type="service" id="sonata.admin.form.type.admin"/>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType" type="service" id="sonata.admin.doctrine_orm.form.type.choice_field_mask"/>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType" type="service" id="sonata.admin.form.type.collection"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType" type="service" id="sonata.admin.form.filter.type.choice"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType" type="service" id="sonata.admin.form.filter.type.daterange"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType" type="service" id="sonata.admin.form.filter.type.datetime_range"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType" type="service" id="sonata.admin.form.filter.type.datetime"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType" type="service" id="sonata.admin.form.filter.type.date"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType" type="service" id="sonata.admin.form.filter.type.default"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType" type="service" id="sonata.admin.form.filter.type.number"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType" type="service" id="sonata.admin.form.type.model_autocomplete"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType" type="service" id="sonata.admin.form.type.model_hidden"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelListType" type="service" id="sonata.admin.form.type.model_list"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType" type="service" id="sonata.admin.form.type.model_reference"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType" type="service" id="sonata.admin.form.type.model_choice"/>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType" type="service" id="sonata.block.form.type.container_template"/>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType" type="service" id="sonata.block.form.type.block"/>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType" type="service" id="sonata.core.form.type.boolean"/>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType" type="service" id="sonata.core.form.type.collection"/>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType" type="service" id="sonata.core.form.type.color_selector"/>
        <argument key="Sonata\CoreBundle\Form\Type\ColorType" type="service" id="sonata.core.form.type.color"/>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType" type="service" id="sonata.core.form.type.date_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType" type="service" id="sonata.core.form.type.date_range_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType" type="service" id="sonata.core.form.type.date_range"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType" type="service" id="sonata.core.form.type.datetime_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType" type="service" id="sonata.core.form.type.datetime_range_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType" type="service" id="sonata.core.form.type.datetime_range"/>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType" type="service" id="sonata.core.form.type.equal"/>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType" type="service" id="sonata.core.form.type.array"/>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType" type="service" id="sonata.core.form.type.translatable_choice"/>
        <argument key="Sonata\UserBundle\Form\Type\SecurityRolesType" type="service" id="sonata.user.form.type.security_roles"/>
        <argument key="Sonata\UserBundle\Form\Type\UserGenderListType" type="service" id="sonata.user.form.gender_list"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.assetic" class="Symfony\Bridge\Monolog\Logger">
      <argument>assetic</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="assetic.twig_directory_resource.CocoricoCoreBundle" class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
      <tag name="assetic.templating.twig"/>
      <tag name="assetic.formula_resource" loader="twig"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>CocoricoCoreBundle</argument>
            <argument>/cocorico/app/Resources/CocoricoCoreBundle/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>CocoricoCoreBundle</argument>
            <argument>/cocorico/src/Cocorico/CoreBundle/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="assetic.twig_directory_resource.CocoricoUserBundle" class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
      <tag name="assetic.templating.twig"/>
      <tag name="assetic.formula_resource" loader="twig"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>CocoricoUserBundle</argument>
            <argument>/cocorico/app/Resources/CocoricoUserBundle/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>CocoricoUserBundle</argument>
            <argument>/cocorico/src/Cocorico/UserBundle/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="assetic.twig_directory_resource.kernel" class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
      <tag name="assetic.templating.twig"/>
      <tag name="assetic.formula_resource" loader="twig"/>
      <argument type="service" id="templating.loader.filesystem"/>
      <argument></argument>
      <argument>/cocorico/app/Resources/views</argument>
      <argument>/\.[^.]+\.twig$/</argument>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.0" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.php"/>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.1" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.yml"/>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.2" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.xliff"/>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.3" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.po"/>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.4" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.mo"/>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.5" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.qt"/>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.6" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.csv"/>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.7" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.res"/>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.8" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.dat"/>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.9" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.ini"/>
    </service>
    <service id="jms_translation.loader.wrapped_symfony_loader.10" class="JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter" public="false">
      <argument type="service" id="translation.loader.json"/>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.0" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.php"/>
      <argument>php</argument>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.1" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.xliff"/>
      <argument>xlf</argument>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.2" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.po"/>
      <argument>po</argument>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.3" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.mo"/>
      <argument>mo</argument>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.4" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.yml"/>
      <argument>yml</argument>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.5" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.6" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.qt"/>
      <argument>ts</argument>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.7" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.csv"/>
      <argument>csv</argument>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.8" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.ini"/>
      <argument>ini</argument>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.9" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.json"/>
      <argument>json</argument>
    </service>
    <service id="jms_translation.dumper.wrapped_symfony_dumper.10" class="JMS\TranslationBundle\Translation\Dumper\SymfonyDumperAdapter" public="false">
      <argument type="service" id="translation.dumper.res"/>
      <argument>res</argument>
    </service>
    <service id="doctrine.orm.default_entity_manager.delegate" class="Doctrine\ORM\EntityManager" public="false" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="form.extension" class="Sonata\CoreBundle\Form\Extension\DependencyInjectionExtension">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\ListingNewType">cocorico.form.type.listing_new</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditType">cocorico.form.type.listing_edit</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditStatusType">cocorico.form.type.listing_edit_status</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditDescriptionType">cocorico.form.type.listing_edit_description</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditPriceType">cocorico.form.type.listing_edit_price</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditImagesType">cocorico.form.type.listing_edit_images</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditLocationType">cocorico.form.type.listing_edit_location</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditCharacteristicType">cocorico.form.type.listing_edit_characteristic</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilitiesType">cocorico.form.type.listing_edit_availabilities</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilitiesStatusType">cocorico.form.type.listing_edit_availabilities_status</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilityStatusType">cocorico.form.type.listing_edit_availability_status</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilitiesPricesType">cocorico.form.type.listing_edit_availabilities_prices</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditAvailabilityPriceType">cocorico.form.type.listing_edit_availability_price</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\ListingNewCategoriesType">cocorico.form.type.listing_new_categories</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditCategoriesType">cocorico.form.type.listing_edit_categories</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditCategoriesAjaxType">cocorico.form.type.listing_edit_categories_ajax</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\CountryFilteredType">cocorico.form.type.country_filtered</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\LanguageFilteredType">cocorico.form.type.language_filtered</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\PriceType">cocorico.form.type.price</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\PriceRangeType">cocorico.form.type.price_range</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\EntityHiddenType">cocorico.form.type.entity_hidden</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\ListingCategoryType">cocorico.form.type.listing_category</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\ListingSearchResultType">cocorico.form.type.listing_search_result</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\ListingSearchType">cocorico.form.type.listing_search</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\ListingSearchHomeType">cocorico.form.type.listing_search_home</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\ListingCharacteristicType">cocorico.form.type.listing_characteristic</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\ListingListingCharacteristicType">cocorico.form.type.listing_listing_characteristic</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\ListingEditDurationType">cocorico.form.type.listing_edit_duration</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\BookingNewType">cocorico.form.type.booking_new</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\BookingEditType">cocorico.form.type.booking_edit</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\BookingPriceType">cocorico.form.type.booking_price</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Frontend\BookingUserAddressFormType">cocorico.form.type.booking_user_address</argument>
        <argument key="Cocorico\CoreBundle\Form\Type\Dashboard\BookingStatusFilterType">cocorico.form.booking.status_filter</argument>
        <argument key="Cocorico\UserBundle\Form\Type\LoginFormType">cocorico_user.form.type.login</argument>
        <argument key="Cocorico\UserBundle\Form\Type\RegistrationFormType">cocorico_user.form.type.register</argument>
        <argument key="Cocorico\UserBundle\Form\Type\UserAddressFormType">cocorico_user.form.type.user_address</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType">form.type.form</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType">form.type.choice</argument>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType">form.type.entity</argument>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType">fos_user.username_form_type</argument>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType">fos_user.profile.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType">fos_user.registration.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType">fos_user.change_password.form.type</argument>
        <argument key="Cocorico\UserBundle\Form\Type\ResettingFormType">fos_user.resetting.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\GroupFormType">fos_user.group.form.type</argument>
        <argument key="Doctrine\Bundle\MongoDBBundle\Form\Type\DocumentType">form.type.mongodb_document</argument>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType">sonata.admin.form.type.admin</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType">sonata.admin.form.type.model_choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelListType">sonata.admin.form.type.model_list</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType">sonata.admin.form.type.model_reference</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType">sonata.admin.form.type.model_hidden</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">sonata.admin.form.type.model_autocomplete</argument>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType">sonata.admin.form.type.collection</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">sonata.admin.doctrine_orm.form.type.choice_field_mask</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType">sonata.admin.form.filter.type.number</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">sonata.admin.form.filter.type.choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType">sonata.admin.form.filter.type.default</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType">sonata.admin.form.filter.type.date</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">sonata.admin.form.filter.type.daterange</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">sonata.admin.form.filter.type.datetime</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">sonata.admin.form.filter.type.datetime_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType">sonata.core.form.type.array</argument>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType">sonata.core.form.type.boolean</argument>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType">sonata.core.form.type.collection</argument>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">sonata.core.form.type.translatable_choice</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType">sonata.core.form.type.date_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType">sonata.core.form.type.datetime_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType">sonata.core.form.type.date_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType">sonata.core.form.type.datetime_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType">sonata.core.form.type.date_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">sonata.core.form.type.datetime_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType">sonata.core.form.type.equal</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType">sonata.core.form.type.color_selector</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorType">sonata.core.form.type.color</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType">sonata.block.form.type.block</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType">sonata.block.form.type.container_template</argument>
        <argument key="Sonata\UserBundle\Form\Type\SecurityRolesType">sonata.user.form.type.security_roles</argument>
        <argument key="Sonata\UserBundle\Form\Type\UserGenderListType">sonata.user.form.gender_list</argument>
        <argument key="A2lix\TranslationFormBundle\Form\Type\TranslationsType">a2lix_translation_form.default.type.translations</argument>
        <argument key="A2lix\TranslationFormBundle\Form\Type\TranslationsFieldsType">a2lix_translation_form.default.type.translationsFields</argument>
        <argument key="A2lix\TranslationFormBundle\Form\Type\TranslationsFormsType">a2lix_translation_form.default.type.translationsForms</argument>
        <argument key="A2lix\TranslationFormBundle\Form\Type\TranslationsLocalesSelectorType">a2lix_translation_form.default.type.translationsLocalesSelector</argument>
        <argument key="A2lix\TranslationFormBundle\Form\Type\TranslatedEntityType">a2lix_translation_form.default.type.translatedEntity</argument>
        <argument key="Liip\ImagineBundle\Form\Type\ImageType">liip_imagine.form.type.image</argument>
        <argument key="FOS\MessageBundle\FormType\RecipientsType">fos_message.recipients_selector</argument>
        <argument key="Ivory\CKEditorBundle\Form\Type\CKEditorType">ivory_ck_editor.form.type</argument>
        <argument key="FM\ElfinderBundle\Form\Type\ElFinderType">fm_elfinder.form.type</argument>
        <argument key="Cocorico\GeoBundle\Form\Type\GeocodingToCoordinateType">cocorico_geo.form.type.geocoding</argument>
        <argument key="Cocorico\UserBundle\Form\Type\ProfileAboutMeFormType">cocorico_user.profile_about_me.form.type</argument>
        <argument key="Cocorico\MessageBundle\Form\Type\Frontend\NewThreadMessageFormType">cocorico_message.new_thread.form.type</argument>
        <argument key="Cocorico\MessageBundle\Form\Type\Frontend\ReplyMessageFormType">cocorico_message.reply.form.type</argument>
        <argument key="Cocorico\ContactBundle\Form\Type\Frontend\ContactNewType">cocorico_contact.form.type.contact_new</argument>
        <argument key="Cocorico\ReviewBundle\Form\Type\StarRatingType">cocorico.star_rating.form.type</argument>
        <argument key="Cocorico\ReviewBundle\Form\Type\Dashboard\ReviewType">cocorico.form.type.review_new</argument>
        <argument key="Cocorico\TimeBundle\Form\Type\DateRangeType">cocorico_time.form.type.date_range</argument>
        <argument key="Cocorico\TimeBundle\Form\Type\DateHiddenType">cocorico_time.form.type.date_hidden</argument>
        <argument key="Cocorico\TimeBundle\Form\Type\TimeRangeType">cocorico_time.form.type.time_range</argument>
        <argument key="Cocorico\TimeBundle\Form\Type\WeekDaysType">cocorico_time.form.type.weekdays</argument>
      </argument>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="collection">
          <argument>cocorico.image_type_extension</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.upload.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>sonata.admin.form.extension.field.mopa</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument>form.type_guesser.validator</argument>
        <argument>form.type_guesser.doctrine</argument>
        <argument>form.type_guesser.doctrine.mongodb</argument>
      </argument>
      <argument type="collection">
        <argument key="sonata_type_admin">Sonata\AdminBundle\Form\Type\AdminType</argument>
        <argument key="sonata_type_model">Sonata\AdminBundle\Form\Type\ModelType</argument>
        <argument key="sonata_type_model_list">Sonata\AdminBundle\Form\Type\ModelListType</argument>
        <argument key="sonata_type_model_reference">Sonata\AdminBundle\Form\Type\ModelReferenceType</argument>
        <argument key="sonata_type_model_hidden">Sonata\AdminBundle\Form\Type\ModelHiddenType</argument>
        <argument key="sonata_type_model_autocomplete">Sonata\AdminBundle\Form\Type\ModelAutocompleteType</argument>
        <argument key="sonata_type_native_collection">Sonata\AdminBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_choice_field_mask">Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType</argument>
        <argument key="sonata_type_filter_number">Sonata\AdminBundle\Form\Type\Filter\NumberType</argument>
        <argument key="sonata_type_filter_choice">Sonata\AdminBundle\Form\Type\Filter\ChoiceType</argument>
        <argument key="sonata_type_filter_default">Sonata\AdminBundle\Form\Type\Filter\DefaultType</argument>
        <argument key="sonata_type_filter_date">Sonata\AdminBundle\Form\Type\Filter\DateType</argument>
        <argument key="sonata_type_filter_date_range">Sonata\AdminBundle\Form\Type\Filter\DateRangeType</argument>
        <argument key="sonata_type_filter_datetime">Sonata\AdminBundle\Form\Type\Filter\DateTimeType</argument>
        <argument key="sonata_type_filter_datetime_range">Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType</argument>
        <argument key="tab">Mopa\Bundle\BootstrapBundle\Form\Type\TabType</argument>
        <argument key="form">Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument key="birthday">Symfony\Component\Form\Extension\Core\Type\BirthdayType</argument>
        <argument key="checkbox">Symfony\Component\Form\Extension\Core\Type\CheckboxType</argument>
        <argument key="choice">Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument key="collection">Symfony\Component\Form\Extension\Core\Type\CollectionType</argument>
        <argument key="country">Symfony\Component\Form\Extension\Core\Type\CountryType</argument>
        <argument key="date">Symfony\Component\Form\Extension\Core\Type\DateType</argument>
        <argument key="datetime">Symfony\Component\Form\Extension\Core\Type\DateTimeType</argument>
        <argument key="email">Symfony\Component\Form\Extension\Core\Type\EmailType</argument>
        <argument key="file">Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument key="hidden">Symfony\Component\Form\Extension\Core\Type\HiddenType</argument>
        <argument key="integer">Symfony\Component\Form\Extension\Core\Type\IntegerType</argument>
        <argument key="language">Symfony\Component\Form\Extension\Core\Type\LanguageType</argument>
        <argument key="locale">Symfony\Component\Form\Extension\Core\Type\LocaleType</argument>
        <argument key="money">Symfony\Component\Form\Extension\Core\Type\MoneyType</argument>
        <argument key="number">Symfony\Component\Form\Extension\Core\Type\NumberType</argument>
        <argument key="password">Symfony\Component\Form\Extension\Core\Type\PasswordType</argument>
        <argument key="percent">Symfony\Component\Form\Extension\Core\Type\PercentType</argument>
        <argument key="radio">Symfony\Component\Form\Extension\Core\Type\RadioType</argument>
        <argument key="repeated">Symfony\Component\Form\Extension\Core\Type\RepeatedType</argument>
        <argument key="search">Symfony\Component\Form\Extension\Core\Type\SearchType</argument>
        <argument key="textarea">Symfony\Component\Form\Extension\Core\Type\TextareaType</argument>
        <argument key="text">Symfony\Component\Form\Extension\Core\Type\TextType</argument>
        <argument key="time">Symfony\Component\Form\Extension\Core\Type\TimeType</argument>
        <argument key="timezone">Symfony\Component\Form\Extension\Core\Type\TimezoneType</argument>
        <argument key="url">Symfony\Component\Form\Extension\Core\Type\UrlType</argument>
        <argument key="button">Symfony\Component\Form\Extension\Core\Type\ButtonType</argument>
        <argument key="submit">Symfony\Component\Form\Extension\Core\Type\SubmitType</argument>
        <argument key="reset">Symfony\Component\Form\Extension\Core\Type\ResetType</argument>
        <argument key="currency">Symfony\Component\Form\Extension\Core\Type\CurrencyType</argument>
        <argument key="entity">Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument key="sonata_type_immutable_array">Sonata\CoreBundle\Form\Type\ImmutableArrayType</argument>
        <argument key="sonata_type_boolean">Sonata\CoreBundle\Form\Type\BooleanType</argument>
        <argument key="sonata_type_collection">Sonata\CoreBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_translatable_choice">Sonata\CoreBundle\Form\Type\TranslatableChoiceType</argument>
        <argument key="sonata_type_date_range">Sonata\CoreBundle\Form\Type\DateRangeType</argument>
        <argument key="sonata_type_datetime_range">Sonata\CoreBundle\Form\Type\DateTimeRangeType</argument>
        <argument key="sonata_type_date_picker">Sonata\CoreBundle\Form\Type\DatePickerType</argument>
        <argument key="sonata_type_datetime_picker">Sonata\CoreBundle\Form\Type\DateTimePickerType</argument>
        <argument key="sonata_type_date_range_picker">Sonata\CoreBundle\Form\Type\DateRangePickerType</argument>
        <argument key="sonata_type_datetime_range_picker">Sonata\CoreBundle\Form\Type\DateTimeRangePickerType</argument>
        <argument key="sonata_type_equal">Sonata\CoreBundle\Form\Type\EqualType</argument>
        <argument key="sonata_type_color">Sonata\CoreBundle\Form\Type\ColorType</argument>
        <argument key="sonata_type_color_selector">Sonata\CoreBundle\Form\Type\ColorSelectorType</argument>
        <argument key="sonata_block_service_choice">Sonata\BlockBundle\Form\Type\ServiceListType</argument>
        <argument key="sonata_type_container_template_choice">Sonata\BlockBundle\Form\Type\ContainerTemplateType</argument>
        <argument key="fos_user_username">FOS\UserBundle\Form\Type\UsernameFormType</argument>
        <argument key="fos_user_profile">FOS\UserBundle\Form\Type\ProfileFormType</argument>
        <argument key="fos_user_registration">FOS\UserBundle\Form\Type\RegistrationFormType</argument>
        <argument key="fos_user_change_password">FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
        <argument key="fos_user_resetting">FOS\UserBundle\Form\Type\ResettingFormType</argument>
        <argument key="fos_user_group">FOS\UserBundle\Form\Type\GroupFormType</argument>
        <argument key="sonata_security_roles">Sonata\UserBundle\Form\Type\SecurityRolesType</argument>
        <argument key="sonata_user_profile">Sonata\UserBundle\Form\Type\ProfileType</argument>
        <argument key="sonata_user_gender">Sonata\UserBundle\Form\Type\UserGenderListType</argument>
        <argument key="sonata_user_registration">Sonata\UserBundle\Form\Type\RegistrationFormType</argument>
        <argument key="sonata_user_api_form_group">Sonata\UserBundle\Form\Type\ApiGroupType</argument>
        <argument key="sonata_user_api_form_user">Sonata\UserBundle\Form\Type\ApiUserType</argument>
      </argument>
      <argument type="collection">
        <argument key="form" type="collection">
          <argument>sonata.admin.form.extension.field</argument>
          <argument>mopa_bootstrap.form.type_extension.help</argument>
          <argument>mopa_bootstrap.form.type_extension.legend</argument>
          <argument>mopa_bootstrap.form.type_extension.error</argument>
          <argument>mopa_bootstrap.form.type_extension.widget</argument>
          <argument>mopa_bootstrap.form.type_extension.horizontal</argument>
          <argument>mopa_bootstrap.form.type_extension.widget_collection</argument>
          <argument>mopa_bootstrap.form.type_extension.tabbed</argument>
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
        </argument>
        <argument key="choice" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
        <argument key="button" type="collection">
          <argument>mopa_bootstrap.form.type_extension.button</argument>
        </argument>
        <argument key="date" type="collection">
          <argument>mopa_bootstrap.form.type_extension.date</argument>
        </argument>
        <argument key="repeated" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="submit" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="service_locator.hskmc8u" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="list" type="service" id="knp_menu.renderer.list"/>
        <argument key="twig" type="service" id="knp_menu.renderer.twig"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="false">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="argument_resolver.request_attribute"/>
        <argument type="service" id="argument_resolver.request"/>
        <argument type="service" id="argument_resolver.session"/>
        <argument type="service" id="security.user_value_resolver"/>
        <argument type="service" id="argument_resolver.service"/>
        <argument type="service" id="argument_resolver.default"/>
        <argument type="service" id="argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.access.authenticated_voter"/>
        <argument type="service" id="security.access.role_hierarchy_voter"/>
        <argument type="service" id="security.access.expression_voter"/>
        <argument type="service" id="security.access.listing_voter"/>
        <argument type="service" id="security.access.listing_image_voter"/>
        <argument type="service" id="security.access.booking_voter"/>
        <argument type="service" id="security.access.user_image_voter"/>
        <argument type="service" id="cocorico_user.security.access.user_image_voter"/>
        <argument type="service" id="security.access.review_voter"/>
      </argument>
      <argument>unanimous</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="service_locator.s.m3yzc" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id="service_locator.lluwcxp" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="jms_i18n_routing.router"/>
      </argument>
    </service>
    <service id="service_locator.c7_qahl" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id="service_locator.2m3e4be" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id="service_locator.f0e7oam" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Cocorico\CoreBundle\Validator\Constraints\BookingValidator" type="service" id="cocorico.booking_validator"/>
        <argument key="Cocorico\CoreBundle\Validator\Constraints\ListingAvailabilitiesPriceValidator" type="service" id="cocorico.listing_availabilities_price_validator"/>
        <argument key="Cocorico\CoreBundle\Validator\Constraints\ListingAvailabilityValidator" type="service" id="cocorico.listing_availability_validator"/>
        <argument key="Cocorico\CoreBundle\Validator\Constraints\ListingDiscountValidator" type="service" id="cocorico.listing_discount_validator"/>
        <argument key="Cocorico\CoreBundle\Validator\Constraints\ListingValidator" type="service" id="cocorico.listing_validator"/>
        <argument key="Cocorico\CoreBundle\Validator\Constraints\TimeRangesOverlapValidator" type="service" id="cocorico.times_range_overlap_validator"/>
        <argument key="Cocorico\TimeBundle\Validator\Constraints\TimeRangesOverlapValidator" type="service" id="cocorico_time.times_range_overlap_validator"/>
        <argument key="Cocorico\UserBundle\Validator\Constraints\UserValidator" type="service" id="cocorico_user.user.validator"/>
        <argument key="FOS\MessageBundle\Validator\AuthorizationValidator" type="service" id="fos_message.validator.authorization"/>
        <argument key="FOS\MessageBundle\Validator\ReplyAuthorizationValidator" type="service" id="fos_message.validator.reply_authorization"/>
        <argument key="FOS\MessageBundle\Validator\SelfRecipientValidator" type="service" id="fos_message.validator.self_recipient"/>
        <argument key="FOS\MessageBundle\Validator\SpamValidator" type="service" id="fos_message.validator.spam"/>
        <argument key="Sonata\CoreBundle\Validator\InlineValidator" type="service" id="sonata.core.validator.inline"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine_odm.mongodb.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="booking" type="service" id="cocorico.booking_validator"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="doctrine_odm.mongodb.unique" type="service" id="doctrine_odm.mongodb.validator.unique"/>
        <argument key="fos_message.validator.authorization" type="service" id="fos_message.validator.authorization"/>
        <argument key="fos_message.validator.reply_authorization" type="service" id="fos_message.validator.reply_authorization"/>
        <argument key="fos_message.validator.self_recipient" type="service" id="fos_message.validator.self_recipient"/>
        <argument key="fos_message.validator.spam" type="service" id="fos_message.validator.spam"/>
        <argument key="listing" type="service" id="cocorico.listing_validator"/>
        <argument key="listing_availabilities_price" type="service" id="cocorico.listing_availabilities_price_validator"/>
        <argument key="listing_availability" type="service" id="cocorico.listing_availability_validator"/>
        <argument key="listing_discount" type="service" id="cocorico.listing_discount_validator"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="sonata.admin.validator.inline" type="service" id="sonata.admin.validator.inline"/>
        <argument key="sonata.core.validator.inline" type="service" id="sonata.core.validator.inline"/>
        <argument key="time_ranges_overlap" type="service" id="cocorico_time.times_range_overlap_validator"/>
        <argument key="user" type="service" id="cocorico_user.user.validator"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader" provider="annotations.cache"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id="annotations.cache"/>
      <argument>true</argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <argument>Vebp3XMCR1</argument>
      <argument>0</argument>
      <argument>/cocorico/var/cache/dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>NNE0UGb6ZI</argument>
      <argument>0</argument>
      <argument>V0d-JmWKqK4A4VMxbhLmky</argument>
      <argument>/cocorico/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>Hn03xYpmO-</argument>
      <argument>0</argument>
      <argument>V0d-JmWKqK4A4VMxbhLmky</argument>
      <argument>/cocorico/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>ZHZQcJMhe8</argument>
      <argument>0</argument>
      <argument>V0d-JmWKqK4A4VMxbhLmky</argument>
      <argument>/cocorico/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>oZvkflFw9x</argument>
      <argument>0</argument>
      <argument>V0d-JmWKqK4A4VMxbhLmky</argument>
      <argument>/cocorico/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="service_locator.0nzls3h" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="templating.loader" alias="templating.loader.filesystem" public="true"/>
    <service id="templating" alias="templating.engine.twig" public="true"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator" public="false"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="cache.default_redis_provider" alias="cache_connection.gd_mszc" public="false"/>
    <service id="cache.default_memcached_provider" alias="cache_connection.jke6kex" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="jms_i18n_routing.router"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="jms_i18n_routing.router" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="jms_i18n_routing.router" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="jms_i18n_routing.router" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="jms_i18n_routing.router" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.user.provider.concrete.fos_userbundle" alias="fos_user.user_provider.username" public="false"/>
    <service id="security.user_checker.admin" alias="security.user_checker" public="false"/>
    <service id="hwi_oauth.user.provider.entity.main" alias="cocorico_user.oauth.user.provider.entity"/>
    <service id="security.user_checker.main" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="swiftmailer.mailer.default.spool" alias="swiftmailer.mailer.default.spool.file"/>
    <service id="swiftmailer.mailer.default.transport.real" alias="swiftmailer.mailer.default.transport.smtp" public="true"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool.file"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.smtp"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.default.spool.file" public="false"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.spool" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default" public="true"/>
    <service id="assetic.value_supplier" alias="assetic.value_supplier.default" public="false"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Symfony\Bridge\Doctrine\RegistryInterface" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\Common\Persistence\ObjectManager" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="jms_i18n_routing.locale_resolver" alias="jms_i18n_routing.locale_resolver.default" public="false"/>
    <service id="jms_i18n_routing.pattern_generation_strategy" alias="jms_i18n_routing.pattern_generation_strategy.default" public="false"/>
    <service id="jms_di_extra.service_naming_strategy" alias="jms_di_extra.service_naming_strategy.default"/>
    <service id="jms_di_extra.metadata_driver" alias="jms_di_extra.metadata.driver.annotation_driver"/>
    <service id="jms_di_extra.metadata.cache" alias="jms_di_extra.metadata.cache.file_cache" public="false"/>
    <service id="fos_user.doctrine_registry" alias="doctrine" public="false"/>
    <service id="fos_user.mailer" alias="cocorico_user.mailer.twig_swift"/>
    <service id="fos_user.util.email_canonicalizer" alias="fos_user.util.canonicalizer.default"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.canonicalizer.default"/>
    <service id="fos_user.util.token_generator" alias="fos_user.util.token_generator.default"/>
    <service id="fos_user.user_manager" alias="cocorico_user.user_manager"/>
    <service id="FOS\UserBundle\Model\UserManagerInterface" alias="cocorico_user.user_manager" public="false"/>
    <service id="fos_user.group_manager" alias="fos_user.group_manager.default"/>
    <service id="FOS\UserBundle\Model\GroupManagerInterface" alias="fos_user.group_manager.default" public="false"/>
    <service id="doctrine_mongodb.odm.cache" alias="doctrine_mongodb.odm.cache.array"/>
    <service id="doctrine_mongodb.odm.metadata.annotation_reader" alias="annotations.cached_reader"/>
    <service id="doctrine_mongodb.odm.document_manager" alias="doctrine_mongodb.odm.default_document_manager" public="true"/>
    <service id="doctrine_mongodb.odm.event_manager" alias="doctrine_mongodb.odm.default_connection.event_manager"/>
    <service id="doctrine.odm.mongodb.document_manager" alias="doctrine_mongodb.odm.default_document_manager"/>
    <service id="sonata.admin.security.handler" alias="sonata.admin.security.handler.noop"/>
    <service id="sonata.block.context_manager" alias="sonata.block.context_manager.default"/>
    <service id="sonata.block.cache.handler" alias="sonata.block.cache.handler.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="sonata.user.user_manager" alias="sonata.user.orm.user_manager"/>
    <service id="sonata.user.group_manager" alias="sonata.user.orm.group_manager"/>
    <service id="a2lix_translation_form.manager_registry" alias="doctrine"/>
    <service id="liip_imagine" alias="liip_imagine.imagick"/>
    <service id="bazinga_geocoder.geocoder" alias="Geocoder\ProviderAggregator"/>
    <service id="geocoder" alias="Geocoder\ProviderAggregator"/>
    <service id="fos_message.message_manager" alias="fos_message.message_manager.default"/>
    <service id="fos_message.thread_manager" alias="fos_message.thread_manager.default"/>
    <service id="fos_message.sender" alias="fos_message.sender.default"/>
    <service id="fos_message.composer" alias="cocorico_message.composer"/>
    <service id="fos_message.provider" alias="fos_message.provider.default"/>
    <service id="fos_message.participant_provider" alias="fos_message.participant_provider.default"/>
    <service id="fos_message.authorizer" alias="fos_message.authorizer.default"/>
    <service id="fos_message.message_reader" alias="fos_message.message_reader.default"/>
    <service id="fos_message.thread_reader" alias="fos_message.thread_reader.default"/>
    <service id="fos_message.deleter" alias="fos_message.deleter.default"/>
    <service id="fos_message.spam_detector" alias="fos_message.noop_spam_detector"/>
    <service id="fos_message.twig_extension" alias="fos_message.twig_extension.default"/>
    <service id="fos_message.new_thread_form.factory" alias="fos_message.new_thread_form.factory.default"/>
    <service id="fos_message.new_thread_form.handler" alias="cocorico_message.new_thread.form.handler"/>
    <service id="fos_message.reply_form.factory" alias="fos_message.reply_form.factory.default"/>
    <service id="fos_message.reply_form.handler" alias="fos_message.reply_form.handler.default"/>
    <service id="fos_message.search_query_factory" alias="fos_message.search_query_factory.default"/>
    <service id="fos_message.search_finder" alias="fos_message.search_finder.default"/>
    <service id="Knp\Menu\FactoryInterface" alias="knp_menu.factory" public="false"/>
    <service id="Knp\Menu\Matcher\MatcherInterface" alias="knp_menu.matcher" public="false"/>
    <service id="Knp\Menu\Util\MenuManipulator" alias="knp_menu.manipulator" public="false"/>
    <service id="hwi_oauth.account.connector" alias="cocorico_user.oauth.user.provider.entity"/>
    <service id="hwi_oauth.user_checker" alias="security.user_checker"/>
    <service id="fm_elfinder.configurator" alias="fm_elfinder.configurator.default"/>
    <service id="fm_elfinder.loader" alias="fm_elfinder.loader.default"/>
    <service id="simplethings_entityaudit.username_callable" alias="simplethings_entityaudit.username_callable.token_storage"/>
    <service id="Symfony\Component\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="Symfony\Bundle\FrameworkBundle\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_containscommand" alias="doctrine_cache.contains_command" public="true"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_deletecommand" alias="doctrine_cache.delete_command" public="true"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_flushcommand" alias="doctrine_cache.flush_command" public="true"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_statscommand" alias="doctrine_cache.stats_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsdiffdoctrinecommand" alias="doctrine_migrations.diff_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsexecutedoctrinecommand" alias="doctrine_migrations.execute_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsgeneratedoctrinecommand" alias="doctrine_migrations.generate_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationslatestdoctrinecommand" alias="doctrine_migrations.latest_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsmigratedoctrinecommand" alias="doctrine_migrations.migrate_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsstatusdoctrinecommand" alias="doctrine_migrations.status_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsversiondoctrinecommand" alias="doctrine_migrations.version_command" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_clearmetadatacachedoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\ClearMetadataCacheDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_createschemadoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\CreateSchemaDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_dropschemadoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\DropSchemaDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_generatedocumentsdoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\GenerateDocumentsDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_generatehydratorsdoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\GenerateHydratorsDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_generateproxiesdoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\GenerateProxiesDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_infodoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\InfoDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_loaddatafixturesdoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\LoadDataFixturesDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_querydoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\QueryDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_sharddoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\ShardDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_tailcursordoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\TailCursorDoctrineODMCommand" public="true"/>
    <service id="console.command.doctrine_bundle_mongodbbundle_command_updateschemadoctrineodmcommand" alias="Doctrine\Bundle\MongoDBBundle\Command\UpdateSchemaDoctrineODMCommand" public="true"/>
    <service id="console.command.sonata_corebundle_command_sonatadumpdoctrinemetacommand" alias="Sonata\CoreBundle\Command\SonataDumpDoctrineMetaCommand" public="true"/>
    <service id="console.command.sonata_corebundle_command_sonatalistformmappingcommand" alias="Sonata\CoreBundle\Command\SonataListFormMappingCommand" public="true"/>
    <service id="console.command.sonata_blockbundle_command_debugblockscommand" alias="Sonata\BlockBundle\Command\DebugBlocksCommand" public="true"/>
    <service id="console.command.ivory_ckeditorbundle_command_ckeditorinstallercommand" alias="ivory_ck_editor.command.installer" public="true"/>
    <service id="console.command.sensiolabs_security_command_securitycheckercommand" alias="sensio_distribution.security_checker.command" public="true"/>
    <service id="twig.loader" alias="twig.loader.filesystem"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="a2lix_translation_form.default.service.locale_provider" alias="a2lix_translation_form.default.service.parameter_locale_provider"/>
    <service id="lexik_currency.default_adapter" alias="lexik_currency.doctrine_adapter"/>
    <service id="knp_menu.menu_provider" alias="knp_menu.menu_provider.chain"/>
    <service id="service_locator._fpuy7b" alias="2_ServiceLocator~ktqo1xx" public="false"/>
    <service id="service_locator.ml7rum7" alias="1_ServiceLocator~ametled" public="false"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="translator.logging.inner" alias="translator.default" public="false"/>
    <service id="translator.data_collector.inner" alias="translator.logging" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="debug.controller_resolver.inner" alias="jms_di_extra.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
  </services>
</container>
