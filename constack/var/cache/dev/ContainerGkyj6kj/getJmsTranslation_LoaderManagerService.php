<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'jms_translation.loader_manager' shared service.

return $this->services['jms_translation.loader_manager'] = new \JMS\TranslationBundle\Translation\LoaderManager(array('php' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.php']) ? $this->services['translation.loader.php'] : $this->services['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader()) && false ?: '_'}), 'yaml' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.yml']) ? $this->services['translation.loader.yml'] : $this->services['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader()) && false ?: '_'}), 'xlf' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.xliff']) ? $this->services['translation.loader.xliff'] : $this->services['translation.loader.xliff'] = new \JMS\TranslationBundle\Translation\Loader\Symfony\XliffLoader()) && false ?: '_'}), 'po' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.po']) ? $this->services['translation.loader.po'] : $this->services['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader()) && false ?: '_'}), 'mo' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.mo']) ? $this->services['translation.loader.mo'] : $this->services['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader()) && false ?: '_'}), 'ts' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.qt']) ? $this->services['translation.loader.qt'] : $this->services['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader()) && false ?: '_'}), 'csv' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.csv']) ? $this->services['translation.loader.csv'] : $this->services['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader()) && false ?: '_'}), 'res' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.res']) ? $this->services['translation.loader.res'] : $this->services['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader()) && false ?: '_'}), 'dat' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.dat']) ? $this->services['translation.loader.dat'] : $this->services['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader()) && false ?: '_'}), 'ini' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.ini']) ? $this->services['translation.loader.ini'] : $this->services['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader()) && false ?: '_'}), 'json' => new \JMS\TranslationBundle\Translation\Loader\SymfonyLoaderAdapter(${($_ = isset($this->services['translation.loader.json']) ? $this->services['translation.loader.json'] : $this->services['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader()) && false ?: '_'}), 'xliff' => new \JMS\TranslationBundle\Translation\Loader\XliffLoader()));
